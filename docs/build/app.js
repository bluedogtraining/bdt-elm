(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEBUG mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (!x.$)
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[94m' + string + '\x1b[0m' : string;
}



// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return word
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800)
			+
			String.fromCharCode(code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

var _Json_decodeInt = { $: 2 };
var _Json_decodeBool = { $: 3 };
var _Json_decodeFloat = { $: 4 };
var _Json_decodeValue = { $: 5 };
var _Json_decodeString = { $: 6 };

function _Json_decodeList(decoder) { return { $: 7, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 8, b: decoder }; }

function _Json_decodeNull(value) { return { $: 9, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 10,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 11,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 12,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 13,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 14,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 15,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 3:
			return (typeof value === 'boolean')
				? $elm$core$Result$Ok(value)
				: _Json_expecting('a BOOL', value);

		case 2:
			if (typeof value !== 'number') {
				return _Json_expecting('an INT', value);
			}

			if (-2147483647 < value && value < 2147483647 && (value | 0) === value) {
				return $elm$core$Result$Ok(value);
			}

			if (isFinite(value) && !(value % 1)) {
				return $elm$core$Result$Ok(value);
			}

			return _Json_expecting('an INT', value);

		case 4:
			return (typeof value === 'number')
				? $elm$core$Result$Ok(value)
				: _Json_expecting('a FLOAT', value);

		case 6:
			return (typeof value === 'string')
				? $elm$core$Result$Ok(value)
				: (value instanceof String)
					? $elm$core$Result$Ok(value + '')
					: _Json_expecting('a STRING', value);

		case 9:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 5:
			return $elm$core$Result$Ok(_Json_wrap(value));

		case 7:
			if (!Array.isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 8:
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 10:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 11:
			var index = decoder.e;
			if (!Array.isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 12:
			if (typeof value !== 'object' || value === null || Array.isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 13:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 14:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 15:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 3:
		case 2:
		case 4:
		case 6:
		case 5:
			return true;

		case 9:
			return x.c === y.c;

		case 7:
		case 8:
		case 12:
			return _Json_equality(x.b, y.b);

		case 10:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 11:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 13:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 14:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 15:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	result = init(result.a);
	var model = result.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		result = A2(update, msg, model);
		stepper(model = result.a, viewMetadata);
		_Platform_dispatchEffects(managers, result.b, subscriptions(model));
	}

	_Platform_dispatchEffects(managers, result.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				p: bag.n,
				q: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.q)
		{
			x = temp.p(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		r: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		r: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].r;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**_UNUSED/
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		value
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		value
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			var oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			var newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}


var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});




// HELPERS


function _Debugger_unsafeCoerce(value)
{
	return value;
}



// PROGRAMS


var _Debugger_element = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		A3($elm$browser$Debugger$Main$wrapInit, _Json_wrap(debugMetadata), _Debugger_popout(), impl.init),
		$elm$browser$Debugger$Main$wrapUpdate(impl.update),
		$elm$browser$Debugger$Main$wrapSubs(impl.subscriptions),
		function(sendToApp, initialModel)
		{
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			var currNode = _VirtualDom_virtualize(domNode);
			var currBlocker = $elm$browser$Debugger$Main$toBlockerType(initialModel);
			var currPopout;

			var cornerNode = _VirtualDom_doc.createElement('div');
			domNode.parentNode.insertBefore(cornerNode, domNode.nextSibling);
			var cornerCurr = _VirtualDom_virtualize(cornerNode);

			initialModel.popout.a = sendToApp;

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = A2(_VirtualDom_map, $elm$browser$Debugger$Main$UserMsg, view($elm$browser$Debugger$Main$getUserModel(model)));
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;

				// update blocker

				var nextBlocker = $elm$browser$Debugger$Main$toBlockerType(model);
				_Debugger_updateBlocker(currBlocker, nextBlocker);
				currBlocker = nextBlocker;

				// view corner

				if (!model.popout.b)
				{
					var cornerNext = $elm$browser$Debugger$Main$cornerView(model);
					var cornerPatches = _VirtualDom_diff(cornerCurr, cornerNext);
					cornerNode = _VirtualDom_applyPatches(cornerNode, cornerCurr, cornerPatches, sendToApp);
					cornerCurr = cornerNext;
					currPopout = undefined;
					return;
				}

				// view popout

				_VirtualDom_doc = model.popout.b; // SWITCH TO POPOUT DOC
				currPopout || (currPopout = _VirtualDom_virtualize(model.popout.b));
				var nextPopout = $elm$browser$Debugger$Main$popoutView(model);
				var popoutPatches = _VirtualDom_diff(currPopout, nextPopout);
				_VirtualDom_applyPatches(model.popout.b.body, currPopout, popoutPatches, sendToApp);
				currPopout = nextPopout;
				_VirtualDom_doc = document; // SWITCH BACK TO NORMAL DOC
			});
		}
	);
});


var _Debugger_document = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		A3($elm$browser$Debugger$Main$wrapInit, _Json_wrap(debugMetadata), _Debugger_popout(), impl.init),
		$elm$browser$Debugger$Main$wrapUpdate(impl.update),
		$elm$browser$Debugger$Main$wrapSubs(impl.subscriptions),
		function(sendToApp, initialModel)
		{
			var divertHrefToApp = impl.setup && impl.setup(function(x) { return sendToApp($elm$browser$Debugger$Main$UserMsg(x)); });
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			var currBlocker = $elm$browser$Debugger$Main$toBlockerType(initialModel);
			var currPopout;

			initialModel.popout.a = sendToApp;

			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view($elm$browser$Debugger$Main$getUserModel(model));
				var nextNode = _VirtualDom_node('body')(_List_Nil)(
					_Utils_ap(
						A2($elm$core$List$map, _VirtualDom_map($elm$browser$Debugger$Main$UserMsg), doc.body),
						_List_Cons($elm$browser$Debugger$Main$cornerView(model), _List_Nil)
					)
				);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);

				// update blocker

				var nextBlocker = $elm$browser$Debugger$Main$toBlockerType(model);
				_Debugger_updateBlocker(currBlocker, nextBlocker);
				currBlocker = nextBlocker;

				// view popout

				if (!model.popout.b) { currPopout = undefined; return; }

				_VirtualDom_doc = model.popout.b; // SWITCH TO POPOUT DOC
				currPopout || (currPopout = _VirtualDom_virtualize(model.popout.b));
				var nextPopout = $elm$browser$Debugger$Main$popoutView(model);
				var popoutPatches = _VirtualDom_diff(currPopout, nextPopout);
				_VirtualDom_applyPatches(model.popout.b.body, currPopout, popoutPatches, sendToApp);
				currPopout = nextPopout;
				_VirtualDom_doc = document; // SWITCH BACK TO NORMAL DOC
			});
		}
	);
});


function _Debugger_popout()
{
	return {
		b: undefined,
		a: undefined
	};
}

function _Debugger_isOpen(popout)
{
	return !!popout.b;
}

function _Debugger_open(popout)
{
	return _Scheduler_binding(function(callback)
	{
		_Debugger_openWindow(popout);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}

function _Debugger_openWindow(popout)
{
	var w = 900, h = 360, x = screen.width - w, y = screen.height - h;
	var debuggerWindow = window.open('', '', 'width=' + w + ',height=' + h + ',left=' + x + ',top=' + y);
	var doc = debuggerWindow.document;
	doc.title = 'Elm Debugger';

	// handle arrow keys
	doc.addEventListener('keydown', function(event) {
		event.metaKey && event.which === 82 && window.location.reload();
		event.which === 38 && (popout.a($elm$browser$Debugger$Main$Up), event.preventDefault());
		event.which === 40 && (popout.a($elm$browser$Debugger$Main$Down), event.preventDefault());
	});

	// handle window close
	window.addEventListener('unload', close);
	debuggerWindow.addEventListener('unload', function() {
		popout.b = undefined;
		popout.a($elm$browser$Debugger$Main$NoOp);
		window.removeEventListener('unload', close);
	});
	function close() {
		popout.b = undefined;
		popout.a($elm$browser$Debugger$Main$NoOp);
		debuggerWindow.close();
	}

	// register new window
	popout.b = doc;
}



// SCROLL


function _Debugger_scroll(popout)
{
	return _Scheduler_binding(function(callback)
	{
		if (popout.b)
		{
			var msgs = popout.b.getElementById('elm-debugger-sidebar');
			if (msgs)
			{
				msgs.scrollTop = msgs.scrollHeight;
			}
		}
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}



// UPLOAD


function _Debugger_upload()
{
	return _Scheduler_binding(function(callback)
	{
		var element = document.createElement('input');
		element.setAttribute('type', 'file');
		element.setAttribute('accept', 'text/json');
		element.style.display = 'none';
		element.addEventListener('change', function(event)
		{
			var fileReader = new FileReader();
			fileReader.onload = function(e)
			{
				callback(_Scheduler_succeed(e.target.result));
			};
			fileReader.readAsText(event.target.files[0]);
			document.body.removeChild(element);
		});
		document.body.appendChild(element);
		element.click();
	});
}



// DOWNLOAD


var _Debugger_download = F2(function(historyLength, json)
{
	return _Scheduler_binding(function(callback)
	{
		var fileName = 'history-' + historyLength + '.txt';
		var jsonString = JSON.stringify(json);
		var mime = 'text/plain;charset=utf-8';
		var done = _Scheduler_succeed(_Utils_Tuple0);

		// for IE10+
		if (navigator.msSaveBlob)
		{
			navigator.msSaveBlob(new Blob([jsonString], {type: mime}), fileName);
			return callback(done);
		}

		// for HTML5
		var element = document.createElement('a');
		element.setAttribute('href', 'data:' + mime + ',' + encodeURIComponent(jsonString));
		element.setAttribute('download', fileName);
		element.style.display = 'none';
		document.body.appendChild(element);
		element.click();
		document.body.removeChild(element);
		callback(done);
	});
});



// POPOUT CONTENT


function _Debugger_messageToString(value)
{
	if (typeof value === 'boolean')
	{
		return value ? 'True' : 'False';
	}

	if (typeof value === 'number')
	{
		return value + '';
	}

	if (typeof value === 'string')
	{
		return '"' + _Debugger_addSlashes(value, false) + '"';
	}

	if (value instanceof String)
	{
		return "'" + _Debugger_addSlashes(value, true) + "'";
	}

	if (typeof value !== 'object' || value === null || !('$' in value))
	{
		return '…';
	}

	if (typeof value.$ === 'number')
	{
		return '…';
	}

	var code = value.$.charCodeAt(0);
	if (code === 0x23 /* # */ || /* a */ 0x61 <= code && code <= 0x7A /* z */)
	{
		return '…';
	}

	if (['Array_elm_builtin', 'Set_elm_builtin', 'RBNode_elm_builtin', 'RBEmpty_elm_builtin'].indexOf(value.$) >= 0)
	{
		return '…';
	}

	var keys = Object.keys(value);
	switch (keys.length)
	{
		case 1:
			return value.$;
		case 2:
			return value.$ + ' ' + _Debugger_messageToString(value.a);
		default:
			return value.$ + ' … ' + _Debugger_messageToString(value[keys[keys.length - 1]]);
	}
}


function _Debugger_init(value)
{
	if (typeof value === 'boolean')
	{
		return A3($elm$browser$Debugger$Expando$Constructor, $elm$core$Maybe$Just(value ? 'True' : 'False'), true, _List_Nil);
	}

	if (typeof value === 'number')
	{
		return $elm$browser$Debugger$Expando$Primitive(value + '');
	}

	if (typeof value === 'string')
	{
		return $elm$browser$Debugger$Expando$S('"' + _Debugger_addSlashes(value, false) + '"');
	}

	if (value instanceof String)
	{
		return $elm$browser$Debugger$Expando$S("'" + _Debugger_addSlashes(value, true) + "'");
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (tag === '::' || tag === '[]')
		{
			return A3($elm$browser$Debugger$Expando$Sequence, $elm$browser$Debugger$Expando$ListSeq, true,
				A2($elm$core$List$map, _Debugger_init, value)
			);
		}

		if (tag === 'Set_elm_builtin')
		{
			return A3($elm$browser$Debugger$Expando$Sequence, $elm$browser$Debugger$Expando$SetSeq, true,
				A3($elm$core$Set$foldr, _Debugger_initCons, _List_Nil, value)
			);
		}

		if (tag === 'RBNode_elm_builtin' || tag == 'RBEmpty_elm_builtin')
		{
			return A2($elm$browser$Debugger$Expando$Dictionary, true,
				A3($elm$core$Dict$foldr, _Debugger_initKeyValueCons, _List_Nil, value)
			);
		}

		if (tag === 'Array_elm_builtin')
		{
			return A3($elm$browser$Debugger$Expando$Sequence, $elm$browser$Debugger$Expando$ArraySeq, true,
				A3($elm$core$Array$foldr, _Debugger_initCons, _List_Nil, value)
			);
		}

		if (typeof tag === 'number')
		{
			return $elm$browser$Debugger$Expando$Primitive('<internals>');
		}

		var char = tag.charCodeAt(0);
		if (char === 35 || 65 <= char && char <= 90)
		{
			var list = _List_Nil;
			for (var i in value)
			{
				if (i === '$') continue;
				list = _List_Cons(_Debugger_init(value[i]), list);
			}
			return A3($elm$browser$Debugger$Expando$Constructor, char === 35 ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(tag), true, $elm$core$List$reverse(list));
		}

		return $elm$browser$Debugger$Expando$Primitive('<internals>');
	}

	if (typeof value === 'object')
	{
		var dict = $elm$core$Dict$empty;
		for (var i in value)
		{
			dict = A3($elm$core$Dict$insert, i, _Debugger_init(value[i]), dict);
		}
		return A2($elm$browser$Debugger$Expando$Record, true, dict);
	}

	return $elm$browser$Debugger$Expando$Primitive('<internals>');
}

var _Debugger_initCons = F2(function initConsHelp(value, list)
{
	return _List_Cons(_Debugger_init(value), list);
});

var _Debugger_initKeyValueCons = F3(function(key, value, list)
{
	return _List_Cons(
		_Utils_Tuple2(_Debugger_init(key), _Debugger_init(value)),
		list
	);
});

function _Debugger_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');
	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}



// BLOCK EVENTS


function _Debugger_updateBlocker(oldBlocker, newBlocker)
{
	if (oldBlocker === newBlocker) return;

	var oldEvents = _Debugger_blockerToEvents(oldBlocker);
	var newEvents = _Debugger_blockerToEvents(newBlocker);

	// remove old blockers
	for (var i = 0; i < oldEvents.length; i++)
	{
		document.removeEventListener(oldEvents[i], _Debugger_blocker, true);
	}

	// add new blockers
	for (var i = 0; i < newEvents.length; i++)
	{
		document.addEventListener(newEvents[i], _Debugger_blocker, true);
	}
}


function _Debugger_blocker(event)
{
	if (event.type === 'keydown' && event.metaKey && event.which === 82)
	{
		return;
	}

	var isScroll = event.type === 'scroll' || event.type === 'wheel';
	for (var node = event.target; node; node = node.parentNode)
	{
		if (isScroll ? node.id === 'elm-debugger-details' : node.id === 'elm-debugger-overlay')
		{
			return;
		}
	}

	event.stopPropagation();
	event.preventDefault();
}

function _Debugger_blockerToEvents(blocker)
{
	return blocker === $elm$browser$Debugger$Overlay$BlockNone
		? []
		: blocker === $elm$browser$Debugger$Overlay$BlockMost
			? _Debugger_mostEvents
			: _Debugger_allEvents;
}

var _Debugger_mostEvents = [
	'click', 'dblclick', 'mousemove',
	'mouseup', 'mousedown', 'mouseenter', 'mouseleave',
	'touchstart', 'touchend', 'touchcancel', 'touchmove',
	'pointerdown', 'pointerup', 'pointerover', 'pointerout',
	'pointerenter', 'pointerleave', 'pointermove', 'pointercancel',
	'dragstart', 'drag', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop',
	'keyup', 'keydown', 'keypress',
	'input', 'change',
	'focus', 'blur'
];

var _Debugger_allEvents = _Debugger_mostEvents.concat('wheel', 'scroll');





// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var view = impl.view;
			/**_UNUSED/
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.onUrlChange;
	var onUrlRequest = impl.onUrlRequest;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			return A3(impl.init, flags, _Browser_getUrl(), key);
		},
		view: impl.view,
		update: impl.update,
		subscriptions: impl.subscriptions
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}


function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}



// SEND REQUEST

var _Http_toTask = F2(function(request, maybeProgress)
{
	return _Scheduler_binding(function(callback)
	{
		var xhr = new XMLHttpRequest();

		_Http_configureProgress(xhr, maybeProgress);

		xhr.addEventListener('error', function() {
			callback(_Scheduler_fail($elm$http$Http$NetworkError));
		});
		xhr.addEventListener('timeout', function() {
			callback(_Scheduler_fail($elm$http$Http$Timeout));
		});
		xhr.addEventListener('load', function() {
			callback(_Http_handleResponse(xhr, request.expect.a));
		});

		try
		{
			xhr.open(request.method, request.url, true);
		}
		catch (e)
		{
			return callback(_Scheduler_fail($elm$http$Http$BadUrl(request.url)));
		}

		_Http_configureRequest(xhr, request);

		var body = request.body;
		xhr.send($elm$http$Http$Internal$isStringBody(body)
			? (xhr.setRequestHeader('Content-Type', body.a), body.b)
			: body.a
		);

		return function() { xhr.abort(); };
	});
});

function _Http_configureProgress(xhr, maybeProgress)
{
	if (!$elm$core$Maybe$isJust(maybeProgress))
	{
		return;
	}

	xhr.addEventListener('progress', function(event) {
		if (!event.lengthComputable)
		{
			return;
		}
		_Scheduler_rawSpawn(maybeProgress.a({
			bytes: event.loaded,
			bytesExpected: event.total
		}));
	});
}

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}

	xhr.responseType = request.expect.b;
	xhr.withCredentials = request.withCredentials;

	$elm$core$Maybe$isJust(request.timeout) && (xhr.timeout = request.timeout.a);
}


// RESPONSES

function _Http_handleResponse(xhr, responseToResult)
{
	var response = _Http_toResponse(xhr);

	if (xhr.status < 200 || 300 <= xhr.status)
	{
		response.body = xhr.responseText;
		return _Scheduler_fail($elm$http$Http$BadStatus(response));
	}

	var result = responseToResult(response);

	if ($elm$core$Result$isOk(result))
	{
		return _Scheduler_succeed(result.a);
	}
	else
	{
		response.body = xhr.responseText;
		return _Scheduler_fail(A2($elm$http$Http$BadPayload, result.a, response));
	}
}

function _Http_toResponse(xhr)
{
	return {
		url: xhr.responseURL,
		status: { code: xhr.status, message: xhr.statusText },
		headers: _Http_parseHeaders(xhr.getAllResponseHeaders()),
		body: xhr.response
	};
}

function _Http_parseHeaders(rawHeaders)
{
	var headers = $elm$core$Dict$empty;

	if (!rawHeaders)
	{
		return headers;
	}

	var headerPairs = rawHeaders.split('\u000d\u000a');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf('\u003a\u0020');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}

	return headers;
}


// EXPECTORS

function _Http_expectStringResponse(responseToResult)
{
	return {
		$: 0,
		b: 'text',
		a: responseToResult
	};
}

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		b: expect.b,
		a: function(response) {
			var convertedResponse = expect.a(response);
			return A2($elm$core$Result$map, func, convertedResponse);
		}
	};
});


// BODY

function _Http_multipart(parts)
{


	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}

	return $elm$http$Http$Internal$FormDataBody(formData);
}
var $author$project$Msg$Navigate = function (a) {
	return {$: 'Navigate', a: a};
};
var $author$project$Msg$UrlChange = function (a) {
	return {$: 'UrlChange', a: a};
};
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$LT = {$: 'LT'};
var $elm$core$List$cons = _List_cons;
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Debugger$Expando$ArraySeq = {$: 'ArraySeq'};
var $elm$browser$Debugger$Overlay$BlockMost = {$: 'BlockMost'};
var $elm$browser$Debugger$Overlay$BlockNone = {$: 'BlockNone'};
var $elm$browser$Debugger$Expando$Constructor = F3(
	function (a, b, c) {
		return {$: 'Constructor', a: a, b: b, c: c};
	});
var $elm$browser$Debugger$Expando$Dictionary = F2(
	function (a, b) {
		return {$: 'Dictionary', a: a, b: b};
	});
var $elm$browser$Debugger$Main$Down = {$: 'Down'};
var $elm$browser$Debugger$Expando$ListSeq = {$: 'ListSeq'};
var $elm$browser$Debugger$Main$NoOp = {$: 'NoOp'};
var $elm$browser$Debugger$Expando$Primitive = function (a) {
	return {$: 'Primitive', a: a};
};
var $elm$browser$Debugger$Expando$Record = F2(
	function (a, b) {
		return {$: 'Record', a: a, b: b};
	});
var $elm$browser$Debugger$Expando$S = function (a) {
	return {$: 'S', a: a};
};
var $elm$browser$Debugger$Expando$Sequence = F3(
	function (a, b, c) {
		return {$: 'Sequence', a: a, b: b, c: c};
	});
var $elm$browser$Debugger$Expando$SetSeq = {$: 'SetSeq'};
var $elm$browser$Debugger$Main$Up = {$: 'Up'};
var $elm$browser$Debugger$Main$UserMsg = function (a) {
	return {$: 'UserMsg', a: a};
};
var $elm$browser$Debugger$Main$Export = {$: 'Export'};
var $elm$browser$Debugger$Main$Import = {$: 'Import'};
var $elm$browser$Debugger$Main$Open = {$: 'Open'};
var $elm$browser$Debugger$Main$OverlayMsg = function (a) {
	return {$: 'OverlayMsg', a: a};
};
var $elm$browser$Debugger$Main$Resume = {$: 'Resume'};
var $elm$browser$Debugger$Main$isPaused = function (state) {
	if (state.$ === 'Running') {
		return false;
	} else {
		return true;
	}
};
var $elm$browser$Debugger$History$size = function (history) {
	return history.numMessages;
};
var $elm$browser$Debugger$Overlay$Accept = function (a) {
	return {$: 'Accept', a: a};
};
var $elm$browser$Debugger$Overlay$Choose = F2(
	function (a, b) {
		return {$: 'Choose', a: a, b: b};
	});
var $elm$html$Html$div = _VirtualDom_node('div');
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 'Normal', a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $elm$html$Html$a = _VirtualDom_node('a');
var $elm$browser$Debugger$Overlay$goodNews1 = '\nThe good news is that having values like this in your message type is not\nso great in the long run. You are better off using simpler data, like\n';
var $elm$browser$Debugger$Overlay$goodNews2 = '\nfunction can pattern match on that data and call whatever functions, JSON\ndecoders, etc. you need. This makes the code much more explicit and easy to\nfollow for other readers (or you in a few months!)\n';
var $elm$json$Json$Encode$string = _Json_wrap;
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$html$Html$p = _VirtualDom_node('p');
var $elm$html$Html$ul = _VirtualDom_node('ul');
var $elm$html$Html$code = _VirtualDom_node('code');
var $elm$browser$Debugger$Overlay$viewCode = function (name) {
	return A2(
		$elm$html$Html$code,
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(name)
			]));
};
var $elm$browser$Debugger$Overlay$addCommas = function (items) {
	if (!items.b) {
		return '';
	} else {
		if (!items.b.b) {
			var item = items.a;
			return item;
		} else {
			if (!items.b.b.b) {
				var item1 = items.a;
				var _v1 = items.b;
				var item2 = _v1.a;
				return item1 + (' and ' + item2);
			} else {
				var lastItem = items.a;
				var otherItems = items.b;
				return A2(
					$elm$core$String$join,
					', ',
					_Utils_ap(
						otherItems,
						_List_fromArray(
							[' and ' + lastItem])));
			}
		}
	}
};
var $elm$html$Html$li = _VirtualDom_node('li');
var $elm$browser$Debugger$Overlay$problemToString = function (problem) {
	switch (problem.$) {
		case 'Function':
			return 'functions';
		case 'Decoder':
			return 'JSON decoders';
		case 'Task':
			return 'tasks';
		case 'Process':
			return 'processes';
		case 'Socket':
			return 'web sockets';
		case 'Request':
			return 'HTTP requests';
		case 'Program':
			return 'programs';
		default:
			return 'virtual DOM values';
	}
};
var $elm$browser$Debugger$Overlay$viewProblemType = function (_v0) {
	var name = _v0.name;
	var problems = _v0.problems;
	return A2(
		$elm$html$Html$li,
		_List_Nil,
		_List_fromArray(
			[
				$elm$browser$Debugger$Overlay$viewCode(name),
				$elm$html$Html$text(
				' can contain ' + ($elm$browser$Debugger$Overlay$addCommas(
					A2($elm$core$List$map, $elm$browser$Debugger$Overlay$problemToString, problems)) + '.'))
			]));
};
var $elm$browser$Debugger$Overlay$viewBadMetadata = function (_v0) {
	var message = _v0.message;
	var problems = _v0.problems;
	return _List_fromArray(
		[
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('The '),
					$elm$browser$Debugger$Overlay$viewCode(message),
					$elm$html$Html$text(' type of your program cannot be reliably serialized for history files.')
				])),
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text('Functions cannot be serialized, nor can values that contain functions. This is a problem in these places:')
				])),
			A2(
			$elm$html$Html$ul,
			_List_Nil,
			A2($elm$core$List$map, $elm$browser$Debugger$Overlay$viewProblemType, problems)),
			A2(
			$elm$html$Html$p,
			_List_Nil,
			_List_fromArray(
				[
					$elm$html$Html$text($elm$browser$Debugger$Overlay$goodNews1),
					A2(
					$elm$html$Html$a,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href('https://guide.elm-lang.org/types/union_types.html')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text('union types')
						])),
					$elm$html$Html$text(', in your messages. From there, your '),
					$elm$browser$Debugger$Overlay$viewCode('update'),
					$elm$html$Html$text($elm$browser$Debugger$Overlay$goodNews2)
				]))
		]);
};
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $elm$browser$Debugger$Overlay$Cancel = {$: 'Cancel'};
var $elm$browser$Debugger$Overlay$Proceed = {$: 'Proceed'};
var $elm$html$Html$button = _VirtualDom_node('button');
var $elm$browser$Debugger$Overlay$viewButtons = function (buttons) {
	var btn = F2(
		function (msg, string) {
			return A2(
				$elm$html$Html$button,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'margin-right', '20px'),
						$elm$html$Html$Events$onClick(msg)
					]),
				_List_fromArray(
					[
						$elm$html$Html$text(string)
					]));
		});
	var buttonNodes = function () {
		if (buttons.$ === 'Accept') {
			var proceed = buttons.a;
			return _List_fromArray(
				[
					A2(btn, $elm$browser$Debugger$Overlay$Proceed, proceed)
				]);
		} else {
			var cancel = buttons.a;
			var proceed = buttons.b;
			return _List_fromArray(
				[
					A2(btn, $elm$browser$Debugger$Overlay$Cancel, cancel),
					A2(btn, $elm$browser$Debugger$Overlay$Proceed, proceed)
				]);
		}
	}();
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'height', '60px'),
				A2($elm$html$Html$Attributes$style, 'line-height', '60px'),
				A2($elm$html$Html$Attributes$style, 'text-align', 'right'),
				A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(50, 50, 50)')
			]),
		buttonNodes);
};
var $elm$browser$Debugger$Overlay$viewMessage = F4(
	function (config, title, details, buttons) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('elm-debugger-overlay'),
					A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
					A2($elm$html$Html$Attributes$style, 'top', '0'),
					A2($elm$html$Html$Attributes$style, 'left', '0'),
					A2($elm$html$Html$Attributes$style, 'width', '100%'),
					A2($elm$html$Html$Attributes$style, 'height', '100%'),
					A2($elm$html$Html$Attributes$style, 'color', 'white'),
					A2($elm$html$Html$Attributes$style, 'pointer-events', 'none'),
					A2($elm$html$Html$Attributes$style, 'font-family', '\'Trebuchet MS\', \'Lucida Grande\', \'Bitstream Vera Sans\', \'Helvetica Neue\', sans-serif'),
					A2($elm$html$Html$Attributes$style, 'z-index', '2147483647')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'width', '600px'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'padding-left', 'calc(50% - 300px)'),
							A2($elm$html$Html$Attributes$style, 'padding-right', 'calc(50% - 300px)'),
							A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(200, 200, 200, 0.7)'),
							A2($elm$html$Html$Attributes$style, 'pointer-events', 'auto')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'font-size', '36px'),
									A2($elm$html$Html$Attributes$style, 'height', '80px'),
									A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(50, 50, 50)'),
									A2($elm$html$Html$Attributes$style, 'padding-left', '22px'),
									A2($elm$html$Html$Attributes$style, 'vertical-align', 'middle'),
									A2($elm$html$Html$Attributes$style, 'line-height', '80px')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(title)
								])),
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$id('elm-debugger-details'),
									A2($elm$html$Html$Attributes$style, 'padding', ' 8px 20px'),
									A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
									A2($elm$html$Html$Attributes$style, 'max-height', 'calc(100% - 156px)'),
									A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(61, 61, 61)')
								]),
							details),
							A2(
							$elm$html$Html$map,
							config.wrap,
							$elm$browser$Debugger$Overlay$viewButtons(buttons))
						]))
				]));
	});
var $elm$html$Html$span = _VirtualDom_node('span');
var $elm$browser$Debugger$Overlay$button = F2(
	function (msg, label) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(msg),
					A2($elm$html$Html$Attributes$style, 'cursor', 'pointer')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(label)
				]));
	});
var $elm$browser$Debugger$Overlay$viewImportExport = F3(
	function (props, importMsg, exportMsg) {
		return A2(
			$elm$html$Html$div,
			props,
			_List_fromArray(
				[
					A2($elm$browser$Debugger$Overlay$button, importMsg, 'Import'),
					$elm$html$Html$text(' / '),
					A2($elm$browser$Debugger$Overlay$button, exportMsg, 'Export')
				]));
	});
var $elm$browser$Debugger$Overlay$viewMiniControls = F2(
	function (config, numMsgs) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
					A2($elm$html$Html$Attributes$style, 'bottom', '0'),
					A2($elm$html$Html$Attributes$style, 'right', '6px'),
					A2($elm$html$Html$Attributes$style, 'border-radius', '4px'),
					A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(61, 61, 61)'),
					A2($elm$html$Html$Attributes$style, 'color', 'white'),
					A2($elm$html$Html$Attributes$style, 'font-family', 'monospace'),
					A2($elm$html$Html$Attributes$style, 'pointer-events', 'auto'),
					A2($elm$html$Html$Attributes$style, 'z-index', '2147483647')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'padding', '6px'),
							A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
							A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
							A2($elm$html$Html$Attributes$style, 'min-width', '24ch'),
							$elm$html$Html$Events$onClick(config.open)
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(
							'Explore History (' + ($elm$core$String$fromInt(numMsgs) + ')'))
						])),
					A3(
					$elm$browser$Debugger$Overlay$viewImportExport,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'padding', '4px 0'),
							A2($elm$html$Html$Attributes$style, 'font-size', '0.8em'),
							A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
							A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(50, 50, 50)')
						]),
					config.importHistory,
					config.exportHistory)
				]));
	});
var $elm$browser$Debugger$Overlay$explanationBad = '\nThe messages in this history do not match the messages handled by your\nprogram. I noticed changes in the following types:\n';
var $elm$browser$Debugger$Overlay$explanationRisky = '\nThis history seems old. It will work with this program, but some\nmessages have been added since the history was created:\n';
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $elm$browser$Debugger$Overlay$viewMention = F2(
	function (tags, verbed) {
		var _v0 = A2(
			$elm$core$List$map,
			$elm$browser$Debugger$Overlay$viewCode,
			$elm$core$List$reverse(tags));
		if (!_v0.b) {
			return $elm$html$Html$text('');
		} else {
			if (!_v0.b.b) {
				var tag = _v0.a;
				return A2(
					$elm$html$Html$li,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(verbed),
							tag,
							$elm$html$Html$text('.')
						]));
			} else {
				if (!_v0.b.b.b) {
					var tag2 = _v0.a;
					var _v1 = _v0.b;
					var tag1 = _v1.a;
					return A2(
						$elm$html$Html$li,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(verbed),
								tag1,
								$elm$html$Html$text(' and '),
								tag2,
								$elm$html$Html$text('.')
							]));
				} else {
					var lastTag = _v0.a;
					var otherTags = _v0.b;
					return A2(
						$elm$html$Html$li,
						_List_Nil,
						A2(
							$elm$core$List$cons,
							$elm$html$Html$text(verbed),
							_Utils_ap(
								A2(
									$elm$core$List$intersperse,
									$elm$html$Html$text(', '),
									$elm$core$List$reverse(otherTags)),
								_List_fromArray(
									[
										$elm$html$Html$text(', and '),
										lastTag,
										$elm$html$Html$text('.')
									]))));
				}
			}
		}
	});
var $elm$browser$Debugger$Overlay$viewChange = function (change) {
	return A2(
		$elm$html$Html$li,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'margin', '8px 0')
			]),
		function () {
			if (change.$ === 'AliasChange') {
				var name = change.a;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'font-size', '1.5em')
							]),
						_List_fromArray(
							[
								$elm$browser$Debugger$Overlay$viewCode(name)
							]))
					]);
			} else {
				var name = change.a;
				var removed = change.b.removed;
				var changed = change.b.changed;
				var added = change.b.added;
				var argsMatch = change.b.argsMatch;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'font-size', '1.5em')
							]),
						_List_fromArray(
							[
								$elm$browser$Debugger$Overlay$viewCode(name)
							])),
						A2(
						$elm$html$Html$ul,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'list-style-type', 'disc'),
								A2($elm$html$Html$Attributes$style, 'padding-left', '2em')
							]),
						_List_fromArray(
							[
								A2($elm$browser$Debugger$Overlay$viewMention, removed, 'Removed '),
								A2($elm$browser$Debugger$Overlay$viewMention, changed, 'Changed '),
								A2($elm$browser$Debugger$Overlay$viewMention, added, 'Added ')
							])),
						argsMatch ? $elm$html$Html$text('') : $elm$html$Html$text('This may be due to the fact that the type variable names changed.')
					]);
			}
		}());
};
var $elm$browser$Debugger$Overlay$viewReport = F2(
	function (isBad, report) {
		switch (report.$) {
			case 'CorruptHistory':
				return _List_fromArray(
					[
						$elm$html$Html$text('Looks like this history file is corrupt. I cannot understand it.')
					]);
			case 'VersionChanged':
				var old = report.a;
				var _new = report.b;
				return _List_fromArray(
					[
						$elm$html$Html$text('This history was created with Elm ' + (old + (', but you are using Elm ' + (_new + ' right now.'))))
					]);
			case 'MessageChanged':
				var old = report.a;
				var _new = report.b;
				return _List_fromArray(
					[
						$elm$html$Html$text('To import some other history, the overall message type must' + ' be the same. The old history has '),
						$elm$browser$Debugger$Overlay$viewCode(old),
						$elm$html$Html$text(' messages, but the new program works with '),
						$elm$browser$Debugger$Overlay$viewCode(_new),
						$elm$html$Html$text(' messages.')
					]);
			default:
				var changes = report.a;
				return _List_fromArray(
					[
						A2(
						$elm$html$Html$p,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(
								isBad ? $elm$browser$Debugger$Overlay$explanationBad : $elm$browser$Debugger$Overlay$explanationRisky)
							])),
						A2(
						$elm$html$Html$ul,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'list-style-type', 'none'),
								A2($elm$html$Html$Attributes$style, 'padding-left', '20px')
							]),
						A2($elm$core$List$map, $elm$browser$Debugger$Overlay$viewChange, changes))
					]);
		}
	});
var $elm$browser$Debugger$Overlay$view = F5(
	function (config, isPaused, isOpen, numMsgs, state) {
		switch (state.$) {
			case 'None':
				return isOpen ? $elm$html$Html$text('') : (isPaused ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'width', '100%'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'cursor', 'pointer'),
							A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
							A2($elm$html$Html$Attributes$style, 'pointer-events', 'auto'),
							A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(200, 200, 200, 0.7)'),
							A2($elm$html$Html$Attributes$style, 'color', 'white'),
							A2($elm$html$Html$Attributes$style, 'font-family', '\'Trebuchet MS\', \'Lucida Grande\', \'Bitstream Vera Sans\', \'Helvetica Neue\', sans-serif'),
							A2($elm$html$Html$Attributes$style, 'z-index', '2147483646'),
							$elm$html$Html$Events$onClick(config.resume)
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
									A2($elm$html$Html$Attributes$style, 'top', 'calc(50% - 40px)'),
									A2($elm$html$Html$Attributes$style, 'font-size', '80px'),
									A2($elm$html$Html$Attributes$style, 'line-height', '80px'),
									A2($elm$html$Html$Attributes$style, 'height', '80px'),
									A2($elm$html$Html$Attributes$style, 'width', '100%')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text('Click to Resume')
								])),
							A2($elm$browser$Debugger$Overlay$viewMiniControls, config, numMsgs)
						])) : A2($elm$browser$Debugger$Overlay$viewMiniControls, config, numMsgs));
			case 'BadMetadata':
				var badMetadata_ = state.a;
				return A4(
					$elm$browser$Debugger$Overlay$viewMessage,
					config,
					'Cannot use Import or Export',
					$elm$browser$Debugger$Overlay$viewBadMetadata(badMetadata_),
					$elm$browser$Debugger$Overlay$Accept('Ok'));
			case 'BadImport':
				var report = state.a;
				return A4(
					$elm$browser$Debugger$Overlay$viewMessage,
					config,
					'Cannot Import History',
					A2($elm$browser$Debugger$Overlay$viewReport, true, report),
					$elm$browser$Debugger$Overlay$Accept('Ok'));
			default:
				var report = state.a;
				return A4(
					$elm$browser$Debugger$Overlay$viewMessage,
					config,
					'Warning',
					A2($elm$browser$Debugger$Overlay$viewReport, false, report),
					A2($elm$browser$Debugger$Overlay$Choose, 'Cancel', 'Import Anyway'));
		}
	});
var $elm$browser$Debugger$Main$cornerView = function (model) {
	return A5(
		$elm$browser$Debugger$Overlay$view,
		{exportHistory: $elm$browser$Debugger$Main$Export, importHistory: $elm$browser$Debugger$Main$Import, open: $elm$browser$Debugger$Main$Open, resume: $elm$browser$Debugger$Main$Resume, wrap: $elm$browser$Debugger$Main$OverlayMsg},
		$elm$browser$Debugger$Main$isPaused(model.state),
		_Debugger_isOpen(model.popout),
		$elm$browser$Debugger$History$size(model.history),
		model.overlay);
};
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$Set$foldr = F3(
	function (func, initialState, _v0) {
		var dict = _v0.a;
		return A3(
			$elm$core$Dict$foldr,
			F3(
				function (key, _v1, state) {
					return A2(func, key, state);
				}),
			initialState,
			dict);
	});
var $elm$browser$Debugger$Main$getCurrentModel = function (state) {
	if (state.$ === 'Running') {
		var model = state.a;
		return model;
	} else {
		var model = state.b;
		return model;
	}
};
var $elm$browser$Debugger$Main$getUserModel = function (model) {
	return $elm$browser$Debugger$Main$getCurrentModel(model.state);
};
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$browser$Debugger$Main$ExpandoMsg = function (a) {
	return {$: 'ExpandoMsg', a: a};
};
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$node = $elm$virtual_dom$VirtualDom$node;
var $elm$browser$Debugger$Expando$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$browser$Debugger$Expando$Index = F3(
	function (a, b, c) {
		return {$: 'Index', a: a, b: b, c: c};
	});
var $elm$browser$Debugger$Expando$Key = {$: 'Key'};
var $elm$browser$Debugger$Expando$None = {$: 'None'};
var $elm$browser$Debugger$Expando$Toggle = {$: 'Toggle'};
var $elm$browser$Debugger$Expando$Value = {$: 'Value'};
var $elm$browser$Debugger$Expando$blue = A2($elm$html$Html$Attributes$style, 'color', 'rgb(28, 0, 207)');
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$browser$Debugger$Expando$leftPad = function (maybeKey) {
	if (maybeKey.$ === 'Nothing') {
		return _List_Nil;
	} else {
		return _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'padding-left', '4ch')
			]);
	}
};
var $elm$browser$Debugger$Expando$makeArrow = function (arrow) {
	return A2(
		$elm$html$Html$span,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'color', '#777'),
				A2($elm$html$Html$Attributes$style, 'padding-left', '2ch'),
				A2($elm$html$Html$Attributes$style, 'width', '2ch'),
				A2($elm$html$Html$Attributes$style, 'display', 'inline-block')
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(arrow)
			]));
};
var $elm$browser$Debugger$Expando$purple = A2($elm$html$Html$Attributes$style, 'color', 'rgb(136, 19, 145)');
var $elm$browser$Debugger$Expando$lineStarter = F3(
	function (maybeKey, maybeIsClosed, description) {
		var arrow = function () {
			if (maybeIsClosed.$ === 'Nothing') {
				return $elm$browser$Debugger$Expando$makeArrow('');
			} else {
				if (maybeIsClosed.a) {
					return $elm$browser$Debugger$Expando$makeArrow('▸');
				} else {
					return $elm$browser$Debugger$Expando$makeArrow('▾');
				}
			}
		}();
		if (maybeKey.$ === 'Nothing') {
			return A2($elm$core$List$cons, arrow, description);
		} else {
			var key = maybeKey.a;
			return A2(
				$elm$core$List$cons,
				arrow,
				A2(
					$elm$core$List$cons,
					A2(
						$elm$html$Html$span,
						_List_fromArray(
							[$elm$browser$Debugger$Expando$purple]),
						_List_fromArray(
							[
								$elm$html$Html$text(key)
							])),
					A2(
						$elm$core$List$cons,
						$elm$html$Html$text(' = '),
						description)));
		}
	});
var $elm$browser$Debugger$Expando$red = A2($elm$html$Html$Attributes$style, 'color', 'rgb(196, 26, 22)');
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$browser$Debugger$Expando$seqTypeToString = F2(
	function (n, seqType) {
		switch (seqType.$) {
			case 'ListSeq':
				return 'List(' + ($elm$core$String$fromInt(n) + ')');
			case 'SetSeq':
				return 'Set(' + ($elm$core$String$fromInt(n) + ')');
			default:
				return 'Array(' + ($elm$core$String$fromInt(n) + ')');
		}
	});
var $elm$core$String$slice = _String_slice;
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$length = _String_length;
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $elm$browser$Debugger$Expando$elideMiddle = function (str) {
	return ($elm$core$String$length(str) <= 18) ? str : (A2($elm$core$String$left, 8, str) + ('...' + A2($elm$core$String$right, 8, str)));
};
var $elm$core$Dict$isEmpty = function (dict) {
	if (dict.$ === 'RBEmpty_elm_builtin') {
		return true;
	} else {
		return false;
	}
};
var $elm$browser$Debugger$Expando$viewExtraTinyRecord = F3(
	function (length, starter, entries) {
		if (!entries.b) {
			return _Utils_Tuple2(
				length + 1,
				_List_fromArray(
					[
						$elm$html$Html$text('}')
					]));
		} else {
			var field = entries.a;
			var rest = entries.b;
			var nextLength = (length + $elm$core$String$length(field)) + 1;
			if (nextLength > 18) {
				return _Utils_Tuple2(
					length + 2,
					_List_fromArray(
						[
							$elm$html$Html$text('…}')
						]));
			} else {
				var _v1 = A3($elm$browser$Debugger$Expando$viewExtraTinyRecord, nextLength, ',', rest);
				var finalLength = _v1.a;
				var otherHtmls = _v1.b;
				return _Utils_Tuple2(
					finalLength,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$text(starter),
						A2(
							$elm$core$List$cons,
							A2(
								$elm$html$Html$span,
								_List_fromArray(
									[$elm$browser$Debugger$Expando$purple]),
								_List_fromArray(
									[
										$elm$html$Html$text(field)
									])),
							otherHtmls)));
			}
		}
	});
var $elm$browser$Debugger$Expando$viewTinyHelp = function (str) {
	return _Utils_Tuple2(
		$elm$core$String$length(str),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $elm$browser$Debugger$Expando$viewExtraTiny = function (value) {
	if (value.$ === 'Record') {
		var record = value.b;
		return A3(
			$elm$browser$Debugger$Expando$viewExtraTinyRecord,
			0,
			'{',
			$elm$core$Dict$keys(record));
	} else {
		return $elm$browser$Debugger$Expando$viewTiny(value);
	}
};
var $elm$browser$Debugger$Expando$viewTiny = function (value) {
	switch (value.$) {
		case 'S':
			var stringRep = value.a;
			var str = $elm$browser$Debugger$Expando$elideMiddle(stringRep);
			return _Utils_Tuple2(
				$elm$core$String$length(str),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[$elm$browser$Debugger$Expando$red]),
						_List_fromArray(
							[
								$elm$html$Html$text(str)
							]))
					]));
		case 'Primitive':
			var stringRep = value.a;
			return _Utils_Tuple2(
				$elm$core$String$length(stringRep),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[$elm$browser$Debugger$Expando$blue]),
						_List_fromArray(
							[
								$elm$html$Html$text(stringRep)
							]))
					]));
		case 'Sequence':
			var seqType = value.a;
			var valueList = value.c;
			return $elm$browser$Debugger$Expando$viewTinyHelp(
				A2(
					$elm$browser$Debugger$Expando$seqTypeToString,
					$elm$core$List$length(valueList),
					seqType));
		case 'Dictionary':
			var keyValuePairs = value.b;
			return $elm$browser$Debugger$Expando$viewTinyHelp(
				'Dict(' + ($elm$core$String$fromInt(
					$elm$core$List$length(keyValuePairs)) + ')'));
		case 'Record':
			var record = value.b;
			return $elm$browser$Debugger$Expando$viewTinyRecord(record);
		default:
			if (!value.c.b) {
				var maybeName = value.a;
				return $elm$browser$Debugger$Expando$viewTinyHelp(
					A2($elm$core$Maybe$withDefault, 'Unit', maybeName));
			} else {
				var maybeName = value.a;
				var valueList = value.c;
				return $elm$browser$Debugger$Expando$viewTinyHelp(
					function () {
						if (maybeName.$ === 'Nothing') {
							return 'Tuple(' + ($elm$core$String$fromInt(
								$elm$core$List$length(valueList)) + ')');
						} else {
							var name = maybeName.a;
							return name + ' …';
						}
					}());
			}
	}
};
var $elm$browser$Debugger$Expando$viewTinyRecord = function (record) {
	return $elm$core$Dict$isEmpty(record) ? _Utils_Tuple2(
		2,
		_List_fromArray(
			[
				$elm$html$Html$text('{}')
			])) : A3(
		$elm$browser$Debugger$Expando$viewTinyRecordHelp,
		0,
		'{ ',
		$elm$core$Dict$toList(record));
};
var $elm$browser$Debugger$Expando$viewTinyRecordHelp = F3(
	function (length, starter, entries) {
		if (!entries.b) {
			return _Utils_Tuple2(
				length + 2,
				_List_fromArray(
					[
						$elm$html$Html$text(' }')
					]));
		} else {
			var _v1 = entries.a;
			var field = _v1.a;
			var value = _v1.b;
			var rest = entries.b;
			var fieldLen = $elm$core$String$length(field);
			var _v2 = $elm$browser$Debugger$Expando$viewExtraTiny(value);
			var valueLen = _v2.a;
			var valueHtmls = _v2.b;
			var newLength = ((length + fieldLen) + valueLen) + 5;
			if (newLength > 60) {
				return _Utils_Tuple2(
					length + 4,
					_List_fromArray(
						[
							$elm$html$Html$text(', … }')
						]));
			} else {
				var _v3 = A3($elm$browser$Debugger$Expando$viewTinyRecordHelp, newLength, ', ', rest);
				var finalLength = _v3.a;
				var otherHtmls = _v3.b;
				return _Utils_Tuple2(
					finalLength,
					A2(
						$elm$core$List$cons,
						$elm$html$Html$text(starter),
						A2(
							$elm$core$List$cons,
							A2(
								$elm$html$Html$span,
								_List_fromArray(
									[$elm$browser$Debugger$Expando$purple]),
								_List_fromArray(
									[
										$elm$html$Html$text(field)
									])),
							A2(
								$elm$core$List$cons,
								$elm$html$Html$text(' = '),
								A2(
									$elm$core$List$cons,
									A2($elm$html$Html$span, _List_Nil, valueHtmls),
									otherHtmls)))));
			}
		}
	});
var $elm$browser$Debugger$Expando$view = F2(
	function (maybeKey, expando) {
		switch (expando.$) {
			case 'S':
				var stringRep = expando.a;
				return A2(
					$elm$html$Html$div,
					$elm$browser$Debugger$Expando$leftPad(maybeKey),
					A3(
						$elm$browser$Debugger$Expando$lineStarter,
						maybeKey,
						$elm$core$Maybe$Nothing,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$span,
								_List_fromArray(
									[$elm$browser$Debugger$Expando$red]),
								_List_fromArray(
									[
										$elm$html$Html$text(stringRep)
									]))
							])));
			case 'Primitive':
				var stringRep = expando.a;
				return A2(
					$elm$html$Html$div,
					$elm$browser$Debugger$Expando$leftPad(maybeKey),
					A3(
						$elm$browser$Debugger$Expando$lineStarter,
						maybeKey,
						$elm$core$Maybe$Nothing,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$span,
								_List_fromArray(
									[$elm$browser$Debugger$Expando$blue]),
								_List_fromArray(
									[
										$elm$html$Html$text(stringRep)
									]))
							])));
			case 'Sequence':
				var seqType = expando.a;
				var isClosed = expando.b;
				var valueList = expando.c;
				return A4($elm$browser$Debugger$Expando$viewSequence, maybeKey, seqType, isClosed, valueList);
			case 'Dictionary':
				var isClosed = expando.a;
				var keyValuePairs = expando.b;
				return A3($elm$browser$Debugger$Expando$viewDictionary, maybeKey, isClosed, keyValuePairs);
			case 'Record':
				var isClosed = expando.a;
				var valueDict = expando.b;
				return A3($elm$browser$Debugger$Expando$viewRecord, maybeKey, isClosed, valueDict);
			default:
				var maybeName = expando.a;
				var isClosed = expando.b;
				var valueList = expando.c;
				return A4($elm$browser$Debugger$Expando$viewConstructor, maybeKey, maybeName, isClosed, valueList);
		}
	});
var $elm$browser$Debugger$Expando$viewConstructor = F4(
	function (maybeKey, maybeName, isClosed, valueList) {
		var tinyArgs = A2(
			$elm$core$List$map,
			A2($elm$core$Basics$composeL, $elm$core$Tuple$second, $elm$browser$Debugger$Expando$viewExtraTiny),
			valueList);
		var description = function () {
			var _v7 = _Utils_Tuple2(maybeName, tinyArgs);
			if (_v7.a.$ === 'Nothing') {
				if (!_v7.b.b) {
					var _v8 = _v7.a;
					return _List_fromArray(
						[
							$elm$html$Html$text('()')
						]);
				} else {
					var _v9 = _v7.a;
					var _v10 = _v7.b;
					var x = _v10.a;
					var xs = _v10.b;
					return A2(
						$elm$core$List$cons,
						$elm$html$Html$text('( '),
						A2(
							$elm$core$List$cons,
							A2($elm$html$Html$span, _List_Nil, x),
							A3(
								$elm$core$List$foldr,
								F2(
									function (args, rest) {
										return A2(
											$elm$core$List$cons,
											$elm$html$Html$text(', '),
											A2(
												$elm$core$List$cons,
												A2($elm$html$Html$span, _List_Nil, args),
												rest));
									}),
								_List_fromArray(
									[
										$elm$html$Html$text(' )')
									]),
								xs)));
				}
			} else {
				if (!_v7.b.b) {
					var name = _v7.a.a;
					return _List_fromArray(
						[
							$elm$html$Html$text(name)
						]);
				} else {
					var name = _v7.a.a;
					var _v11 = _v7.b;
					var x = _v11.a;
					var xs = _v11.b;
					return A2(
						$elm$core$List$cons,
						$elm$html$Html$text(name + ' '),
						A2(
							$elm$core$List$cons,
							A2($elm$html$Html$span, _List_Nil, x),
							A3(
								$elm$core$List$foldr,
								F2(
									function (args, rest) {
										return A2(
											$elm$core$List$cons,
											$elm$html$Html$text(' '),
											A2(
												$elm$core$List$cons,
												A2($elm$html$Html$span, _List_Nil, args),
												rest));
									}),
								_List_Nil,
								xs)));
				}
			}
		}();
		var _v4 = function () {
			if (!valueList.b) {
				return _Utils_Tuple2(
					$elm$core$Maybe$Nothing,
					A2($elm$html$Html$div, _List_Nil, _List_Nil));
			} else {
				if (!valueList.b.b) {
					var entry = valueList.a;
					switch (entry.$) {
						case 'S':
							return _Utils_Tuple2(
								$elm$core$Maybe$Nothing,
								A2($elm$html$Html$div, _List_Nil, _List_Nil));
						case 'Primitive':
							return _Utils_Tuple2(
								$elm$core$Maybe$Nothing,
								A2($elm$html$Html$div, _List_Nil, _List_Nil));
						case 'Sequence':
							var subValueList = entry.c;
							return _Utils_Tuple2(
								$elm$core$Maybe$Just(isClosed),
								isClosed ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
									$elm$html$Html$map,
									A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$None, 0),
									$elm$browser$Debugger$Expando$viewSequenceOpen(subValueList)));
						case 'Dictionary':
							var keyValuePairs = entry.b;
							return _Utils_Tuple2(
								$elm$core$Maybe$Just(isClosed),
								isClosed ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
									$elm$html$Html$map,
									A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$None, 0),
									$elm$browser$Debugger$Expando$viewDictionaryOpen(keyValuePairs)));
						case 'Record':
							var record = entry.b;
							return _Utils_Tuple2(
								$elm$core$Maybe$Just(isClosed),
								isClosed ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
									$elm$html$Html$map,
									A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$None, 0),
									$elm$browser$Debugger$Expando$viewRecordOpen(record)));
						default:
							var subValueList = entry.c;
							return _Utils_Tuple2(
								$elm$core$Maybe$Just(isClosed),
								isClosed ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : A2(
									$elm$html$Html$map,
									A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$None, 0),
									$elm$browser$Debugger$Expando$viewConstructorOpen(subValueList)));
					}
				} else {
					return _Utils_Tuple2(
						$elm$core$Maybe$Just(isClosed),
						isClosed ? A2($elm$html$Html$div, _List_Nil, _List_Nil) : $elm$browser$Debugger$Expando$viewConstructorOpen(valueList));
				}
			}
		}();
		var maybeIsClosed = _v4.a;
		var openHtml = _v4.b;
		return A2(
			$elm$html$Html$div,
			$elm$browser$Debugger$Expando$leftPad(maybeKey),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick($elm$browser$Debugger$Expando$Toggle)
						]),
					A3($elm$browser$Debugger$Expando$lineStarter, maybeKey, maybeIsClosed, description)),
					openHtml
				]));
	});
var $elm$browser$Debugger$Expando$viewConstructorEntry = F2(
	function (index, value) {
		return A2(
			$elm$html$Html$map,
			A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$None, index),
			A2(
				$elm$browser$Debugger$Expando$view,
				$elm$core$Maybe$Just(
					$elm$core$String$fromInt(index)),
				value));
	});
var $elm$browser$Debugger$Expando$viewConstructorOpen = function (valueList) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2($elm$core$List$indexedMap, $elm$browser$Debugger$Expando$viewConstructorEntry, valueList));
};
var $elm$browser$Debugger$Expando$viewDictionary = F3(
	function (maybeKey, isClosed, keyValuePairs) {
		var starter = 'Dict(' + ($elm$core$String$fromInt(
			$elm$core$List$length(keyValuePairs)) + ')');
		return A2(
			$elm$html$Html$div,
			$elm$browser$Debugger$Expando$leftPad(maybeKey),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick($elm$browser$Debugger$Expando$Toggle)
						]),
					A3(
						$elm$browser$Debugger$Expando$lineStarter,
						maybeKey,
						$elm$core$Maybe$Just(isClosed),
						_List_fromArray(
							[
								$elm$html$Html$text(starter)
							]))),
					isClosed ? $elm$html$Html$text('') : $elm$browser$Debugger$Expando$viewDictionaryOpen(keyValuePairs)
				]));
	});
var $elm$browser$Debugger$Expando$viewDictionaryEntry = F2(
	function (index, _v2) {
		var key = _v2.a;
		var value = _v2.b;
		switch (key.$) {
			case 'S':
				var stringRep = key.a;
				return A2(
					$elm$html$Html$map,
					A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$Value, index),
					A2(
						$elm$browser$Debugger$Expando$view,
						$elm$core$Maybe$Just(stringRep),
						value));
			case 'Primitive':
				var stringRep = key.a;
				return A2(
					$elm$html$Html$map,
					A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$Value, index),
					A2(
						$elm$browser$Debugger$Expando$view,
						$elm$core$Maybe$Just(stringRep),
						value));
			default:
				return A2(
					$elm$html$Html$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$map,
							A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$Key, index),
							A2(
								$elm$browser$Debugger$Expando$view,
								$elm$core$Maybe$Just('key'),
								key)),
							A2(
							$elm$html$Html$map,
							A2($elm$browser$Debugger$Expando$Index, $elm$browser$Debugger$Expando$Value, index),
							A2(
								$elm$browser$Debugger$Expando$view,
								$elm$core$Maybe$Just('value'),
								value))
						]));
		}
	});
var $elm$browser$Debugger$Expando$viewDictionaryOpen = function (keyValuePairs) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2($elm$core$List$indexedMap, $elm$browser$Debugger$Expando$viewDictionaryEntry, keyValuePairs));
};
var $elm$browser$Debugger$Expando$viewRecord = F3(
	function (maybeKey, isClosed, record) {
		var _v1 = isClosed ? _Utils_Tuple3(
			$elm$browser$Debugger$Expando$viewTinyRecord(record).b,
			$elm$html$Html$text(''),
			$elm$html$Html$text('')) : _Utils_Tuple3(
			_List_fromArray(
				[
					$elm$html$Html$text('{')
				]),
			$elm$browser$Debugger$Expando$viewRecordOpen(record),
			A2(
				$elm$html$Html$div,
				$elm$browser$Debugger$Expando$leftPad(
					$elm$core$Maybe$Just(_Utils_Tuple0)),
				_List_fromArray(
					[
						$elm$html$Html$text('}')
					])));
		var start = _v1.a;
		var middle = _v1.b;
		var end = _v1.c;
		return A2(
			$elm$html$Html$div,
			$elm$browser$Debugger$Expando$leftPad(maybeKey),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick($elm$browser$Debugger$Expando$Toggle)
						]),
					A3(
						$elm$browser$Debugger$Expando$lineStarter,
						maybeKey,
						$elm$core$Maybe$Just(isClosed),
						start)),
					middle,
					end
				]));
	});
var $elm$browser$Debugger$Expando$viewRecordEntry = function (_v0) {
	var field = _v0.a;
	var value = _v0.b;
	return A2(
		$elm$html$Html$map,
		$elm$browser$Debugger$Expando$Field(field),
		A2(
			$elm$browser$Debugger$Expando$view,
			$elm$core$Maybe$Just(field),
			value));
};
var $elm$browser$Debugger$Expando$viewRecordOpen = function (record) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2(
			$elm$core$List$map,
			$elm$browser$Debugger$Expando$viewRecordEntry,
			$elm$core$Dict$toList(record)));
};
var $elm$browser$Debugger$Expando$viewSequence = F4(
	function (maybeKey, seqType, isClosed, valueList) {
		var starter = A2(
			$elm$browser$Debugger$Expando$seqTypeToString,
			$elm$core$List$length(valueList),
			seqType);
		return A2(
			$elm$html$Html$div,
			$elm$browser$Debugger$Expando$leftPad(maybeKey),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							$elm$html$Html$Events$onClick($elm$browser$Debugger$Expando$Toggle)
						]),
					A3(
						$elm$browser$Debugger$Expando$lineStarter,
						maybeKey,
						$elm$core$Maybe$Just(isClosed),
						_List_fromArray(
							[
								$elm$html$Html$text(starter)
							]))),
					isClosed ? $elm$html$Html$text('') : $elm$browser$Debugger$Expando$viewSequenceOpen(valueList)
				]));
	});
var $elm$browser$Debugger$Expando$viewSequenceOpen = function (values) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		A2($elm$core$List$indexedMap, $elm$browser$Debugger$Expando$viewConstructorEntry, values));
};
var $elm$browser$Debugger$Main$Jump = function (a) {
	return {$: 'Jump', a: a};
};
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$browser$Debugger$Main$resumeStyle = '\n\n.elm-debugger-resume {\n  width: 100%;\n  height: 30px;\n  line-height: 30px;\n  cursor: pointer;\n}\n\n.elm-debugger-resume:hover {\n  background-color: rgb(41, 41, 41);\n}\n\n';
var $elm$browser$Debugger$Main$viewResumeButton = function (maybeIndex) {
	if (maybeIndex.$ === 'Nothing') {
		return $elm$html$Html$text('');
	} else {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick($elm$browser$Debugger$Main$Resume),
					$elm$html$Html$Attributes$class('elm-debugger-resume')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text('Resume'),
					A3(
					$elm$html$Html$node,
					'style',
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text($elm$browser$Debugger$Main$resumeStyle)
						]))
				]));
	}
};
var $elm$browser$Debugger$Main$viewTextButton = F2(
	function (msg, label) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					$elm$html$Html$Events$onClick(msg),
					A2($elm$html$Html$Attributes$style, 'cursor', 'pointer')
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(label)
				]));
	});
var $elm$browser$Debugger$Main$playButton = function (maybeIndex) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'width', '100%'),
				A2($elm$html$Html$Attributes$style, 'text-align', 'center'),
				A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(50, 50, 50)')
			]),
		_List_fromArray(
			[
				$elm$browser$Debugger$Main$viewResumeButton(maybeIndex),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'width', '100%'),
						A2($elm$html$Html$Attributes$style, 'height', '24px'),
						A2($elm$html$Html$Attributes$style, 'line-height', '24px'),
						A2($elm$html$Html$Attributes$style, 'font-size', '12px')
					]),
				_List_fromArray(
					[
						A2($elm$browser$Debugger$Main$viewTextButton, $elm$browser$Debugger$Main$Import, 'Import'),
						$elm$html$Html$text(' / '),
						A2($elm$browser$Debugger$Main$viewTextButton, $elm$browser$Debugger$Main$Export, 'Export')
					]))
			]));
};
var $elm$virtual_dom$VirtualDom$lazy3 = _VirtualDom_lazy3;
var $elm$html$Html$Lazy$lazy3 = $elm$virtual_dom$VirtualDom$lazy3;
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $elm$browser$Debugger$History$viewMessage = F3(
	function (currentIndex, index, msg) {
		var messageName = _Debugger_messageToString(msg);
		var className = _Utils_eq(currentIndex, index) ? 'elm-debugger-entry elm-debugger-entry-selected' : 'elm-debugger-entry';
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(className),
					$elm$html$Html$Events$onClick(index)
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$title(messageName),
							$elm$html$Html$Attributes$class('elm-debugger-entry-content')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(messageName)
						])),
					A2(
					$elm$html$Html$span,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class('elm-debugger-entry-index')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(
							$elm$core$String$fromInt(index))
						]))
				]));
	});
var $elm$browser$Debugger$History$consMsg = F3(
	function (currentIndex, msg, _v0) {
		var index = _v0.a;
		var rest = _v0.b;
		return _Utils_Tuple2(
			index - 1,
			A2(
				$elm$core$List$cons,
				A4($elm$html$Html$Lazy$lazy3, $elm$browser$Debugger$History$viewMessage, currentIndex, index, msg),
				rest));
	});
var $elm$virtual_dom$VirtualDom$lazy2 = _VirtualDom_lazy2;
var $elm$html$Html$Lazy$lazy2 = $elm$virtual_dom$VirtualDom$lazy2;
var $elm$browser$Debugger$History$styles = A3(
	$elm$html$Html$node,
	'style',
	_List_Nil,
	_List_fromArray(
		[
			$elm$html$Html$text('\n\n.elm-debugger-entry {\n  cursor: pointer;\n  width: 100%;\n}\n\n.elm-debugger-entry:hover {\n  background-color: rgb(41, 41, 41);\n}\n\n.elm-debugger-entry-selected, .elm-debugger-entry-selected:hover {\n  background-color: rgb(10, 10, 10);\n}\n\n.elm-debugger-entry-content {\n  width: calc(100% - 7ch);\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 1ch;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n}\n\n.elm-debugger-entry-index {\n  color: #666;\n  width: 5ch;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-right: 1ch;\n  text-align: right;\n  display: block;\n  float: right;\n}\n\n')
		]));
var $elm$browser$Debugger$History$maxSnapshotSize = 64;
var $elm$core$Elm$JsArray$foldl = _JsArray_foldl;
var $elm$core$Array$foldl = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldl, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldl,
			func,
			A3($elm$core$Elm$JsArray$foldl, helper, baseCase, tree),
			tail);
	});
var $elm$browser$Debugger$History$viewSnapshot = F3(
	function (currentIndex, index, _v0) {
		var messages = _v0.messages;
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			A3(
				$elm$core$Array$foldl,
				$elm$browser$Debugger$History$consMsg(currentIndex),
				_Utils_Tuple2(index - 1, _List_Nil),
				messages).b);
	});
var $elm$browser$Debugger$History$consSnapshot = F3(
	function (currentIndex, snapshot, _v0) {
		var index = _v0.a;
		var rest = _v0.b;
		var nextIndex = index - $elm$browser$Debugger$History$maxSnapshotSize;
		var currentIndexHelp = ((_Utils_cmp(nextIndex, currentIndex) < 1) && (_Utils_cmp(currentIndex, index) < 0)) ? currentIndex : (-1);
		return _Utils_Tuple2(
			index - $elm$browser$Debugger$History$maxSnapshotSize,
			A2(
				$elm$core$List$cons,
				A4($elm$html$Html$Lazy$lazy3, $elm$browser$Debugger$History$viewSnapshot, currentIndexHelp, index, snapshot),
				rest));
	});
var $elm$core$Array$length = function (_v0) {
	var len = _v0.a;
	return len;
};
var $elm$browser$Debugger$History$viewSnapshots = F2(
	function (currentIndex, snapshots) {
		var highIndex = $elm$browser$Debugger$History$maxSnapshotSize * $elm$core$Array$length(snapshots);
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			A3(
				$elm$core$Array$foldr,
				$elm$browser$Debugger$History$consSnapshot(currentIndex),
				_Utils_Tuple2(highIndex, _List_Nil),
				snapshots).b);
	});
var $elm$browser$Debugger$History$view = F2(
	function (maybeIndex, _v0) {
		var snapshots = _v0.snapshots;
		var recent = _v0.recent;
		var numMessages = _v0.numMessages;
		var _v1 = function () {
			if (maybeIndex.$ === 'Nothing') {
				return _Utils_Tuple2(-1, 'calc(100% - 24px)');
			} else {
				var i = maybeIndex.a;
				return _Utils_Tuple2(i, 'calc(100% - 54px)');
			}
		}();
		var index = _v1.a;
		var height = _v1.b;
		var newStuff = A3(
			$elm$core$List$foldl,
			$elm$browser$Debugger$History$consMsg(index),
			_Utils_Tuple2(numMessages - 1, _List_Nil),
			recent.messages).b;
		var oldStuff = A3($elm$html$Html$Lazy$lazy2, $elm$browser$Debugger$History$viewSnapshots, index, snapshots);
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id('elm-debugger-sidebar'),
					A2($elm$html$Html$Attributes$style, 'width', '100%'),
					A2($elm$html$Html$Attributes$style, 'overflow-y', 'auto'),
					A2($elm$html$Html$Attributes$style, 'height', height)
				]),
			A2(
				$elm$core$List$cons,
				$elm$browser$Debugger$History$styles,
				A2($elm$core$List$cons, oldStuff, newStuff)));
	});
var $elm$browser$Debugger$Main$viewSidebar = F2(
	function (state, history) {
		var maybeIndex = function () {
			if (state.$ === 'Running') {
				return $elm$core$Maybe$Nothing;
			} else {
				var index = state.a;
				return $elm$core$Maybe$Just(index);
			}
		}();
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'display', 'block'),
					A2($elm$html$Html$Attributes$style, 'float', 'left'),
					A2($elm$html$Html$Attributes$style, 'width', '30ch'),
					A2($elm$html$Html$Attributes$style, 'height', '100%'),
					A2($elm$html$Html$Attributes$style, 'color', 'white'),
					A2($elm$html$Html$Attributes$style, 'background-color', 'rgb(61, 61, 61)')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$map,
					$elm$browser$Debugger$Main$Jump,
					A2($elm$browser$Debugger$History$view, maybeIndex, history)),
					$elm$browser$Debugger$Main$playButton(maybeIndex)
				]));
	});
var $elm$browser$Debugger$Main$popoutView = function (_v0) {
	var history = _v0.history;
	var state = _v0.state;
	var expando = _v0.expando;
	return A3(
		$elm$html$Html$node,
		'body',
		_List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'margin', '0'),
				A2($elm$html$Html$Attributes$style, 'padding', '0'),
				A2($elm$html$Html$Attributes$style, 'width', '100%'),
				A2($elm$html$Html$Attributes$style, 'height', '100%'),
				A2($elm$html$Html$Attributes$style, 'font-family', 'monospace'),
				A2($elm$html$Html$Attributes$style, 'overflow', 'auto')
			]),
		_List_fromArray(
			[
				A2($elm$browser$Debugger$Main$viewSidebar, state, history),
				A2(
				$elm$html$Html$map,
				$elm$browser$Debugger$Main$ExpandoMsg,
				A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'block'),
							A2($elm$html$Html$Attributes$style, 'float', 'left'),
							A2($elm$html$Html$Attributes$style, 'height', '100%'),
							A2($elm$html$Html$Attributes$style, 'width', 'calc(100% - 30ch)'),
							A2($elm$html$Html$Attributes$style, 'margin', '0'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'auto'),
							A2($elm$html$Html$Attributes$style, 'cursor', 'default')
						]),
					_List_fromArray(
						[
							A2($elm$browser$Debugger$Expando$view, $elm$core$Maybe$Nothing, expando)
						])))
			]));
};
var $elm$browser$Debugger$Overlay$BlockAll = {$: 'BlockAll'};
var $elm$browser$Debugger$Overlay$toBlockerType = F2(
	function (isPaused, state) {
		switch (state.$) {
			case 'None':
				return isPaused ? $elm$browser$Debugger$Overlay$BlockAll : $elm$browser$Debugger$Overlay$BlockNone;
			case 'BadMetadata':
				return $elm$browser$Debugger$Overlay$BlockMost;
			case 'BadImport':
				return $elm$browser$Debugger$Overlay$BlockMost;
			default:
				return $elm$browser$Debugger$Overlay$BlockMost;
		}
	});
var $elm$browser$Debugger$Main$toBlockerType = function (model) {
	return A2(
		$elm$browser$Debugger$Overlay$toBlockerType,
		$elm$browser$Debugger$Main$isPaused(model.state),
		model.overlay);
};
var $elm$browser$Debugger$Main$Running = function (a) {
	return {$: 'Running', a: a};
};
var $elm$browser$Debugger$Metadata$Error = F2(
	function (message, problems) {
		return {message: message, problems: problems};
	});
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $elm$browser$Debugger$Metadata$Metadata = F2(
	function (versions, types) {
		return {types: types, versions: versions};
	});
var $elm$browser$Debugger$Metadata$Types = F3(
	function (message, aliases, unions) {
		return {aliases: aliases, message: message, unions: unions};
	});
var $elm$browser$Debugger$Metadata$Alias = F2(
	function (args, tipe) {
		return {args: args, tipe: tipe};
	});
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$list = _Json_decodeList;
var $elm$json$Json$Decode$string = _Json_decodeString;
var $elm$browser$Debugger$Metadata$decodeAlias = A3(
	$elm$json$Json$Decode$map2,
	$elm$browser$Debugger$Metadata$Alias,
	A2(
		$elm$json$Json$Decode$field,
		'args',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string));
var $elm$browser$Debugger$Metadata$Union = F2(
	function (args, tags) {
		return {args: args, tags: tags};
	});
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $elm$json$Json$Decode$keyValuePairs = _Json_decodeKeyValuePairs;
var $elm$json$Json$Decode$dict = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Dict$fromList,
		$elm$json$Json$Decode$keyValuePairs(decoder));
};
var $elm$browser$Debugger$Metadata$decodeUnion = A3(
	$elm$json$Json$Decode$map2,
	$elm$browser$Debugger$Metadata$Union,
	A2(
		$elm$json$Json$Decode$field,
		'args',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
	A2(
		$elm$json$Json$Decode$field,
		'tags',
		$elm$json$Json$Decode$dict(
			$elm$json$Json$Decode$list($elm$json$Json$Decode$string))));
var $elm$json$Json$Decode$map3 = _Json_map3;
var $elm$browser$Debugger$Metadata$decodeTypes = A4(
	$elm$json$Json$Decode$map3,
	$elm$browser$Debugger$Metadata$Types,
	A2($elm$json$Json$Decode$field, 'message', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'aliases',
		$elm$json$Json$Decode$dict($elm$browser$Debugger$Metadata$decodeAlias)),
	A2(
		$elm$json$Json$Decode$field,
		'unions',
		$elm$json$Json$Decode$dict($elm$browser$Debugger$Metadata$decodeUnion)));
var $elm$browser$Debugger$Metadata$Versions = function (elm) {
	return {elm: elm};
};
var $elm$browser$Debugger$Metadata$decodeVersions = A2(
	$elm$json$Json$Decode$map,
	$elm$browser$Debugger$Metadata$Versions,
	A2($elm$json$Json$Decode$field, 'elm', $elm$json$Json$Decode$string));
var $elm$browser$Debugger$Metadata$decoder = A3(
	$elm$json$Json$Decode$map2,
	$elm$browser$Debugger$Metadata$Metadata,
	A2($elm$json$Json$Decode$field, 'versions', $elm$browser$Debugger$Metadata$decodeVersions),
	A2($elm$json$Json$Decode$field, 'types', $elm$browser$Debugger$Metadata$decodeTypes));
var $elm$browser$Debugger$Metadata$ProblemType = F2(
	function (name, problems) {
		return {name: name, problems: problems};
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$core$String$contains = _String_contains;
var $elm$browser$Debugger$Metadata$hasProblem = F2(
	function (tipe, _v0) {
		var problem = _v0.a;
		var token = _v0.b;
		return A2($elm$core$String$contains, token, tipe) ? $elm$core$Maybe$Just(problem) : $elm$core$Maybe$Nothing;
	});
var $elm$browser$Debugger$Metadata$Decoder = {$: 'Decoder'};
var $elm$browser$Debugger$Metadata$Function = {$: 'Function'};
var $elm$browser$Debugger$Metadata$Process = {$: 'Process'};
var $elm$browser$Debugger$Metadata$Program = {$: 'Program'};
var $elm$browser$Debugger$Metadata$Request = {$: 'Request'};
var $elm$browser$Debugger$Metadata$Socket = {$: 'Socket'};
var $elm$browser$Debugger$Metadata$Task = {$: 'Task'};
var $elm$browser$Debugger$Metadata$VirtualDom = {$: 'VirtualDom'};
var $elm$browser$Debugger$Metadata$problemTable = _List_fromArray(
	[
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Function, '->'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Decoder, 'Json.Decode.Decoder'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Task, 'Task.Task'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Process, 'Process.Id'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Socket, 'WebSocket.LowLevel.WebSocket'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Request, 'Http.Request'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$Program, 'Platform.Program'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$VirtualDom, 'VirtualDom.Node'),
		_Utils_Tuple2($elm$browser$Debugger$Metadata$VirtualDom, 'VirtualDom.Attribute')
	]);
var $elm$browser$Debugger$Metadata$findProblems = function (tipe) {
	return A2(
		$elm$core$List$filterMap,
		$elm$browser$Debugger$Metadata$hasProblem(tipe),
		$elm$browser$Debugger$Metadata$problemTable);
};
var $elm$browser$Debugger$Metadata$collectBadAliases = F3(
	function (name, _v0, list) {
		var tipe = _v0.tipe;
		var _v1 = $elm$browser$Debugger$Metadata$findProblems(tipe);
		if (!_v1.b) {
			return list;
		} else {
			var problems = _v1;
			return A2(
				$elm$core$List$cons,
				A2($elm$browser$Debugger$Metadata$ProblemType, name, problems),
				list);
		}
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $elm$browser$Debugger$Metadata$collectBadUnions = F3(
	function (name, _v0, list) {
		var tags = _v0.tags;
		var _v1 = A2(
			$elm$core$List$concatMap,
			$elm$browser$Debugger$Metadata$findProblems,
			$elm$core$List$concat(
				$elm$core$Dict$values(tags)));
		if (!_v1.b) {
			return list;
		} else {
			var problems = _v1;
			return A2(
				$elm$core$List$cons,
				A2($elm$browser$Debugger$Metadata$ProblemType, name, problems),
				list);
		}
	});
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$browser$Debugger$Metadata$isPortable = function (_v0) {
	var types = _v0.types;
	var badAliases = A3($elm$core$Dict$foldl, $elm$browser$Debugger$Metadata$collectBadAliases, _List_Nil, types.aliases);
	var _v1 = A3($elm$core$Dict$foldl, $elm$browser$Debugger$Metadata$collectBadUnions, badAliases, types.unions);
	if (!_v1.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		var problems = _v1;
		return $elm$core$Maybe$Just(
			A2($elm$browser$Debugger$Metadata$Error, types.message, problems));
	}
};
var $elm$browser$Debugger$Metadata$decode = function (value) {
	var _v0 = A2($elm$json$Json$Decode$decodeValue, $elm$browser$Debugger$Metadata$decoder, value);
	if (_v0.$ === 'Err') {
		return $elm$core$Result$Err(
			A2($elm$browser$Debugger$Metadata$Error, 'The compiler is generating bad metadata. This is a compiler bug!', _List_Nil));
	} else {
		var metadata = _v0.a;
		var _v1 = $elm$browser$Debugger$Metadata$isPortable(metadata);
		if (_v1.$ === 'Nothing') {
			return $elm$core$Result$Ok(metadata);
		} else {
			var error = _v1.a;
			return $elm$core$Result$Err(error);
		}
	}
};
var $elm$browser$Debugger$History$History = F3(
	function (snapshots, recent, numMessages) {
		return {numMessages: numMessages, recent: recent, snapshots: snapshots};
	});
var $elm$browser$Debugger$History$RecentHistory = F3(
	function (model, messages, numMessages) {
		return {messages: messages, model: model, numMessages: numMessages};
	});
var $elm$browser$Debugger$History$empty = function (model) {
	return A3(
		$elm$browser$Debugger$History$History,
		$elm$core$Array$empty,
		A3($elm$browser$Debugger$History$RecentHistory, model, _List_Nil, 0),
		0);
};
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $elm$browser$Debugger$Expando$initHelp = F2(
	function (isOuter, expando) {
		switch (expando.$) {
			case 'S':
				return expando;
			case 'Primitive':
				return expando;
			case 'Sequence':
				var seqType = expando.a;
				var isClosed = expando.b;
				var items = expando.c;
				return isOuter ? A3(
					$elm$browser$Debugger$Expando$Sequence,
					seqType,
					false,
					A2(
						$elm$core$List$map,
						$elm$browser$Debugger$Expando$initHelp(false),
						items)) : (($elm$core$List$length(items) <= 8) ? A3($elm$browser$Debugger$Expando$Sequence, seqType, false, items) : expando);
			case 'Dictionary':
				var isClosed = expando.a;
				var keyValuePairs = expando.b;
				return isOuter ? A2(
					$elm$browser$Debugger$Expando$Dictionary,
					false,
					A2(
						$elm$core$List$map,
						function (_v1) {
							var k = _v1.a;
							var v = _v1.b;
							return _Utils_Tuple2(
								k,
								A2($elm$browser$Debugger$Expando$initHelp, false, v));
						},
						keyValuePairs)) : (($elm$core$List$length(keyValuePairs) <= 8) ? A2($elm$browser$Debugger$Expando$Dictionary, false, keyValuePairs) : expando);
			case 'Record':
				var isClosed = expando.a;
				var entries = expando.b;
				return isOuter ? A2(
					$elm$browser$Debugger$Expando$Record,
					false,
					A2(
						$elm$core$Dict$map,
						F2(
							function (_v2, v) {
								return A2($elm$browser$Debugger$Expando$initHelp, false, v);
							}),
						entries)) : (($elm$core$Dict$size(entries) <= 4) ? A2($elm$browser$Debugger$Expando$Record, false, entries) : expando);
			default:
				var maybeName = expando.a;
				var isClosed = expando.b;
				var args = expando.c;
				return isOuter ? A3(
					$elm$browser$Debugger$Expando$Constructor,
					maybeName,
					false,
					A2(
						$elm$core$List$map,
						$elm$browser$Debugger$Expando$initHelp(false),
						args)) : (($elm$core$List$length(args) <= 4) ? A3($elm$browser$Debugger$Expando$Constructor, maybeName, false, args) : expando);
		}
	});
var $elm$browser$Debugger$Expando$init = function (value) {
	return A2(
		$elm$browser$Debugger$Expando$initHelp,
		true,
		_Debugger_init(value));
};
var $elm$core$Platform$Cmd$map = _Platform_map;
var $elm$browser$Debugger$Overlay$None = {$: 'None'};
var $elm$browser$Debugger$Overlay$none = $elm$browser$Debugger$Overlay$None;
var $elm$browser$Debugger$Main$wrapInit = F4(
	function (metadata, popout, init, flags) {
		var _v0 = init(flags);
		var userModel = _v0.a;
		var userCommands = _v0.b;
		return _Utils_Tuple2(
			{
				expando: $elm$browser$Debugger$Expando$init(userModel),
				history: $elm$browser$Debugger$History$empty(userModel),
				metadata: $elm$browser$Debugger$Metadata$decode(metadata),
				overlay: $elm$browser$Debugger$Overlay$none,
				popout: popout,
				state: $elm$browser$Debugger$Main$Running(userModel)
			},
			A2($elm$core$Platform$Cmd$map, $elm$browser$Debugger$Main$UserMsg, userCommands));
	});
var $elm$browser$Debugger$Main$getLatestModel = function (state) {
	if (state.$ === 'Running') {
		var model = state.a;
		return model;
	} else {
		var model = state.c;
		return model;
	}
};
var $elm$core$Platform$Sub$map = _Platform_map;
var $elm$browser$Debugger$Main$wrapSubs = F2(
	function (subscriptions, model) {
		return A2(
			$elm$core$Platform$Sub$map,
			$elm$browser$Debugger$Main$UserMsg,
			subscriptions(
				$elm$browser$Debugger$Main$getLatestModel(model.state)));
	});
var $elm$browser$Debugger$Main$Paused = F3(
	function (a, b, c) {
		return {$: 'Paused', a: a, b: b, c: c};
	});
var $elm$browser$Debugger$History$Snapshot = F2(
	function (model, messages) {
		return {messages: messages, model: model};
	});
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $elm$browser$Debugger$History$addRecent = F3(
	function (msg, newModel, _v0) {
		var model = _v0.model;
		var messages = _v0.messages;
		var numMessages = _v0.numMessages;
		return _Utils_eq(numMessages, $elm$browser$Debugger$History$maxSnapshotSize) ? _Utils_Tuple2(
			$elm$core$Maybe$Just(
				A2(
					$elm$browser$Debugger$History$Snapshot,
					model,
					$elm$core$Array$fromList(messages))),
			A3(
				$elm$browser$Debugger$History$RecentHistory,
				newModel,
				_List_fromArray(
					[msg]),
				1)) : _Utils_Tuple2(
			$elm$core$Maybe$Nothing,
			A3(
				$elm$browser$Debugger$History$RecentHistory,
				model,
				A2($elm$core$List$cons, msg, messages),
				numMessages + 1));
	});
var $elm$core$Elm$JsArray$push = _JsArray_push;
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Basics$ge = _Utils_ge;
var $elm$core$Elm$JsArray$singleton = _JsArray_singleton;
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$insertTailInTree = F4(
	function (shift, index, tail, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		if (_Utils_cmp(
			pos,
			$elm$core$Elm$JsArray$length(tree)) > -1) {
			if (shift === 5) {
				return A2(
					$elm$core$Elm$JsArray$push,
					$elm$core$Array$Leaf(tail),
					tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));
				return A2($elm$core$Elm$JsArray$push, newSub, tree);
			}
		} else {
			var value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (value.$ === 'SubTree') {
				var subTree = value.a;
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4(
						$elm$core$Array$insertTailInTree,
						shift - $elm$core$Array$shiftStep,
						index,
						tail,
						$elm$core$Elm$JsArray$singleton(value)));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			}
		}
	});
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$core$Array$unsafeReplaceTail = F2(
	function (newTail, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var originalTailLen = $elm$core$Elm$JsArray$length(tail);
		var newTailLen = $elm$core$Elm$JsArray$length(newTail);
		var newArrayLen = len + (newTailLen - originalTailLen);
		if (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {
			var overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;
			if (overflow) {
				var newShift = startShift + $elm$core$Array$shiftStep;
				var newTree = A4(
					$elm$core$Array$insertTailInTree,
					newShift,
					len,
					newTail,
					$elm$core$Elm$JsArray$singleton(
						$elm$core$Array$SubTree(tree)));
				return A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);
			} else {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					newArrayLen,
					startShift,
					A4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),
					$elm$core$Elm$JsArray$empty);
			}
		} else {
			return A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);
		}
	});
var $elm$core$Array$push = F2(
	function (a, array) {
		var tail = array.d;
		return A2(
			$elm$core$Array$unsafeReplaceTail,
			A2($elm$core$Elm$JsArray$push, a, tail),
			array);
	});
var $elm$browser$Debugger$History$add = F3(
	function (msg, model, _v0) {
		var snapshots = _v0.snapshots;
		var recent = _v0.recent;
		var numMessages = _v0.numMessages;
		var _v1 = A3($elm$browser$Debugger$History$addRecent, msg, model, recent);
		if (_v1.a.$ === 'Just') {
			var snapshot = _v1.a.a;
			var newRecent = _v1.b;
			return A3(
				$elm$browser$Debugger$History$History,
				A2($elm$core$Array$push, snapshot, snapshots),
				newRecent,
				numMessages + 1);
		} else {
			var _v2 = _v1.a;
			var newRecent = _v1.b;
			return A3($elm$browser$Debugger$History$History, snapshots, newRecent, numMessages + 1);
		}
	});
var $elm$browser$Debugger$Overlay$BadImport = function (a) {
	return {$: 'BadImport', a: a};
};
var $elm$browser$Debugger$Overlay$RiskyImport = F2(
	function (a, b) {
		return {$: 'RiskyImport', a: a, b: b};
	});
var $elm$browser$Debugger$Report$VersionChanged = F2(
	function (a, b) {
		return {$: 'VersionChanged', a: a, b: b};
	});
var $elm$browser$Debugger$Report$MessageChanged = F2(
	function (a, b) {
		return {$: 'MessageChanged', a: a, b: b};
	});
var $elm$browser$Debugger$Report$SomethingChanged = function (a) {
	return {$: 'SomethingChanged', a: a};
};
var $elm$browser$Debugger$Report$AliasChange = function (a) {
	return {$: 'AliasChange', a: a};
};
var $elm$browser$Debugger$Metadata$checkAlias = F4(
	function (name, old, _new, changes) {
		return (_Utils_eq(old.tipe, _new.tipe) && _Utils_eq(old.args, _new.args)) ? changes : A2(
			$elm$core$List$cons,
			$elm$browser$Debugger$Report$AliasChange(name),
			changes);
	});
var $elm$browser$Debugger$Report$UnionChange = F2(
	function (a, b) {
		return {$: 'UnionChange', a: a, b: b};
	});
var $elm$browser$Debugger$Metadata$addTag = F3(
	function (tag, _v0, changes) {
		return _Utils_update(
			changes,
			{
				added: A2($elm$core$List$cons, tag, changes.added)
			});
	});
var $elm$browser$Debugger$Metadata$checkTag = F4(
	function (tag, old, _new, changes) {
		return _Utils_eq(old, _new) ? changes : _Utils_update(
			changes,
			{
				changed: A2($elm$core$List$cons, tag, changes.changed)
			});
	});
var $elm$browser$Debugger$Report$TagChanges = F4(
	function (removed, changed, added, argsMatch) {
		return {added: added, argsMatch: argsMatch, changed: changed, removed: removed};
	});
var $elm$browser$Debugger$Report$emptyTagChanges = function (argsMatch) {
	return A4($elm$browser$Debugger$Report$TagChanges, _List_Nil, _List_Nil, _List_Nil, argsMatch);
};
var $elm$browser$Debugger$Report$hasTagChanges = function (tagChanges) {
	return _Utils_eq(
		tagChanges,
		A4($elm$browser$Debugger$Report$TagChanges, _List_Nil, _List_Nil, _List_Nil, true));
};
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$browser$Debugger$Metadata$removeTag = F3(
	function (tag, _v0, changes) {
		return _Utils_update(
			changes,
			{
				removed: A2($elm$core$List$cons, tag, changes.removed)
			});
	});
var $elm$browser$Debugger$Metadata$checkUnion = F4(
	function (name, old, _new, changes) {
		var tagChanges = A6(
			$elm$core$Dict$merge,
			$elm$browser$Debugger$Metadata$removeTag,
			$elm$browser$Debugger$Metadata$checkTag,
			$elm$browser$Debugger$Metadata$addTag,
			old.tags,
			_new.tags,
			$elm$browser$Debugger$Report$emptyTagChanges(
				_Utils_eq(old.args, _new.args)));
		return $elm$browser$Debugger$Report$hasTagChanges(tagChanges) ? changes : A2(
			$elm$core$List$cons,
			A2($elm$browser$Debugger$Report$UnionChange, name, tagChanges),
			changes);
	});
var $elm$browser$Debugger$Metadata$ignore = F3(
	function (key, value, report) {
		return report;
	});
var $elm$core$Basics$neq = _Utils_notEqual;
var $elm$browser$Debugger$Metadata$checkTypes = F2(
	function (old, _new) {
		return (!_Utils_eq(old.message, _new.message)) ? A2($elm$browser$Debugger$Report$MessageChanged, old.message, _new.message) : $elm$browser$Debugger$Report$SomethingChanged(
			A6(
				$elm$core$Dict$merge,
				$elm$browser$Debugger$Metadata$ignore,
				$elm$browser$Debugger$Metadata$checkUnion,
				$elm$browser$Debugger$Metadata$ignore,
				old.unions,
				_new.unions,
				A6($elm$core$Dict$merge, $elm$browser$Debugger$Metadata$ignore, $elm$browser$Debugger$Metadata$checkAlias, $elm$browser$Debugger$Metadata$ignore, old.aliases, _new.aliases, _List_Nil)));
	});
var $elm$browser$Debugger$Metadata$check = F2(
	function (old, _new) {
		return (!_Utils_eq(old.versions.elm, _new.versions.elm)) ? A2($elm$browser$Debugger$Report$VersionChanged, old.versions.elm, _new.versions.elm) : A2($elm$browser$Debugger$Metadata$checkTypes, old.types, _new.types);
	});
var $elm$browser$Debugger$Report$CorruptHistory = {$: 'CorruptHistory'};
var $elm$browser$Debugger$Overlay$corruptImport = $elm$browser$Debugger$Overlay$BadImport($elm$browser$Debugger$Report$CorruptHistory);
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$browser$Debugger$Report$Fine = {$: 'Fine'};
var $elm$browser$Debugger$Report$Impossible = {$: 'Impossible'};
var $elm$browser$Debugger$Report$Risky = {$: 'Risky'};
var $elm$core$Basics$not = _Basics_not;
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $elm$browser$Debugger$Report$some = function (list) {
	return !$elm$core$List$isEmpty(list);
};
var $elm$browser$Debugger$Report$evaluateChange = function (change) {
	if (change.$ === 'AliasChange') {
		return $elm$browser$Debugger$Report$Impossible;
	} else {
		var removed = change.b.removed;
		var changed = change.b.changed;
		var added = change.b.added;
		var argsMatch = change.b.argsMatch;
		return ((!argsMatch) || ($elm$browser$Debugger$Report$some(changed) || $elm$browser$Debugger$Report$some(removed))) ? $elm$browser$Debugger$Report$Impossible : ($elm$browser$Debugger$Report$some(added) ? $elm$browser$Debugger$Report$Risky : $elm$browser$Debugger$Report$Fine);
	}
};
var $elm$browser$Debugger$Report$worstCase = F2(
	function (status, statusList) {
		worstCase:
		while (true) {
			if (!statusList.b) {
				return status;
			} else {
				switch (statusList.a.$) {
					case 'Impossible':
						var _v1 = statusList.a;
						return $elm$browser$Debugger$Report$Impossible;
					case 'Risky':
						var _v2 = statusList.a;
						var rest = statusList.b;
						var $temp$status = $elm$browser$Debugger$Report$Risky,
							$temp$statusList = rest;
						status = $temp$status;
						statusList = $temp$statusList;
						continue worstCase;
					default:
						var _v3 = statusList.a;
						var rest = statusList.b;
						var $temp$status = status,
							$temp$statusList = rest;
						status = $temp$status;
						statusList = $temp$statusList;
						continue worstCase;
				}
			}
		}
	});
var $elm$browser$Debugger$Report$evaluate = function (report) {
	switch (report.$) {
		case 'CorruptHistory':
			return $elm$browser$Debugger$Report$Impossible;
		case 'VersionChanged':
			return $elm$browser$Debugger$Report$Impossible;
		case 'MessageChanged':
			return $elm$browser$Debugger$Report$Impossible;
		default:
			var changes = report.a;
			return A2(
				$elm$browser$Debugger$Report$worstCase,
				$elm$browser$Debugger$Report$Fine,
				A2($elm$core$List$map, $elm$browser$Debugger$Report$evaluateChange, changes));
	}
};
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $elm$browser$Debugger$Overlay$uploadDecoder = A3(
	$elm$json$Json$Decode$map2,
	F2(
		function (x, y) {
			return _Utils_Tuple2(x, y);
		}),
	A2($elm$json$Json$Decode$field, 'metadata', $elm$browser$Debugger$Metadata$decoder),
	A2($elm$json$Json$Decode$field, 'history', $elm$json$Json$Decode$value));
var $elm$browser$Debugger$Overlay$assessImport = F2(
	function (metadata, jsonString) {
		var _v0 = A2($elm$json$Json$Decode$decodeString, $elm$browser$Debugger$Overlay$uploadDecoder, jsonString);
		if (_v0.$ === 'Err') {
			return $elm$core$Result$Err($elm$browser$Debugger$Overlay$corruptImport);
		} else {
			var _v1 = _v0.a;
			var foreignMetadata = _v1.a;
			var rawHistory = _v1.b;
			var report = A2($elm$browser$Debugger$Metadata$check, foreignMetadata, metadata);
			var _v2 = $elm$browser$Debugger$Report$evaluate(report);
			switch (_v2.$) {
				case 'Impossible':
					return $elm$core$Result$Err(
						$elm$browser$Debugger$Overlay$BadImport(report));
				case 'Risky':
					return $elm$core$Result$Err(
						A2($elm$browser$Debugger$Overlay$RiskyImport, report, rawHistory));
				default:
					return $elm$core$Result$Ok(rawHistory);
			}
		}
	});
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $elm$browser$Debugger$Overlay$close = F2(
	function (msg, state) {
		switch (state.$) {
			case 'None':
				return $elm$core$Maybe$Nothing;
			case 'BadMetadata':
				return $elm$core$Maybe$Nothing;
			case 'BadImport':
				return $elm$core$Maybe$Nothing;
			default:
				var rawHistory = state.b;
				if (msg.$ === 'Cancel') {
					return $elm$core$Maybe$Nothing;
				} else {
					return $elm$core$Maybe$Just(rawHistory);
				}
		}
	});
var $elm$browser$Debugger$History$elmToJs = _Debugger_unsafeCoerce;
var $elm$browser$Debugger$History$encodeHelp = F2(
	function (snapshot, allMessages) {
		return A3($elm$core$Array$foldl, $elm$core$List$cons, allMessages, snapshot.messages);
	});
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $elm$browser$Debugger$History$encode = function (_v0) {
	var snapshots = _v0.snapshots;
	var recent = _v0.recent;
	return A2(
		$elm$json$Json$Encode$list,
		$elm$browser$Debugger$History$elmToJs,
		A3(
			$elm$core$Array$foldr,
			$elm$browser$Debugger$History$encodeHelp,
			$elm$core$List$reverse(recent.messages),
			snapshots));
};
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $elm$browser$Debugger$Metadata$encodeAlias = function (_v0) {
	var args = _v0.args;
	var tipe = _v0.tipe;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'args',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, args)),
				_Utils_Tuple2(
				'type',
				$elm$json$Json$Encode$string(tipe))
			]));
};
var $elm$browser$Debugger$Metadata$encodeDict = F2(
	function (f, dict) {
		return $elm$json$Json$Encode$object(
			$elm$core$Dict$toList(
				A2(
					$elm$core$Dict$map,
					F2(
						function (key, value) {
							return f(value);
						}),
					dict)));
	});
var $elm$browser$Debugger$Metadata$encodeUnion = function (_v0) {
	var args = _v0.args;
	var tags = _v0.tags;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'args',
				A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, args)),
				_Utils_Tuple2(
				'tags',
				A2(
					$elm$browser$Debugger$Metadata$encodeDict,
					$elm$json$Json$Encode$list($elm$json$Json$Encode$string),
					tags))
			]));
};
var $elm$browser$Debugger$Metadata$encodeTypes = function (_v0) {
	var message = _v0.message;
	var unions = _v0.unions;
	var aliases = _v0.aliases;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'message',
				$elm$json$Json$Encode$string(message)),
				_Utils_Tuple2(
				'aliases',
				A2($elm$browser$Debugger$Metadata$encodeDict, $elm$browser$Debugger$Metadata$encodeAlias, aliases)),
				_Utils_Tuple2(
				'unions',
				A2($elm$browser$Debugger$Metadata$encodeDict, $elm$browser$Debugger$Metadata$encodeUnion, unions))
			]));
};
var $elm$browser$Debugger$Metadata$encodeVersions = function (_v0) {
	var elm = _v0.elm;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'elm',
				$elm$json$Json$Encode$string(elm))
			]));
};
var $elm$browser$Debugger$Metadata$encode = function (_v0) {
	var versions = _v0.versions;
	var types = _v0.types;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'versions',
				$elm$browser$Debugger$Metadata$encodeVersions(versions)),
				_Utils_Tuple2(
				'types',
				$elm$browser$Debugger$Metadata$encodeTypes(types))
			]));
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0.a;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return _Utils_Tuple0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(_Utils_Tuple0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0.a;
		return $elm$core$Task$Perform(
			A2($elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2($elm$core$Task$map, toMessage, task)));
	});
var $elm$browser$Debugger$Main$download = F2(
	function (metadata, history) {
		var json = $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'metadata',
					$elm$browser$Debugger$Metadata$encode(metadata)),
					_Utils_Tuple2(
					'history',
					$elm$browser$Debugger$History$encode(history))
				]));
		var historyLength = $elm$browser$Debugger$History$size(history);
		return A2(
			$elm$core$Task$perform,
			function (_v0) {
				return $elm$browser$Debugger$Main$NoOp;
			},
			A2(_Debugger_download, historyLength, json));
	});
var $elm$browser$Debugger$History$Stepping = F2(
	function (a, b) {
		return {$: 'Stepping', a: a, b: b};
	});
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $elm$browser$Debugger$History$Done = F2(
	function (a, b) {
		return {$: 'Done', a: a, b: b};
	});
var $elm$browser$Debugger$History$getHelp = F3(
	function (update, msg, getResult) {
		if (getResult.$ === 'Done') {
			return getResult;
		} else {
			var n = getResult.a;
			var model = getResult.b;
			return (!n) ? A2(
				$elm$browser$Debugger$History$Done,
				msg,
				A2(update, msg, model).a) : A2(
				$elm$browser$Debugger$History$Stepping,
				n - 1,
				A2(update, msg, model).a);
		}
	});
var $elm$browser$Debugger$History$undone = function (getResult) {
	undone:
	while (true) {
		if (getResult.$ === 'Done') {
			var msg = getResult.a;
			var model = getResult.b;
			return _Utils_Tuple2(model, msg);
		} else {
			var $temp$getResult = getResult;
			getResult = $temp$getResult;
			continue undone;
		}
	}
};
var $elm$browser$Debugger$History$get = F3(
	function (update, index, history) {
		get:
		while (true) {
			var recent = history.recent;
			var snapshotMax = history.numMessages - recent.numMessages;
			if (_Utils_cmp(index, snapshotMax) > -1) {
				return $elm$browser$Debugger$History$undone(
					A3(
						$elm$core$List$foldr,
						$elm$browser$Debugger$History$getHelp(update),
						A2($elm$browser$Debugger$History$Stepping, index - snapshotMax, recent.model),
						recent.messages));
			} else {
				var _v0 = A2($elm$core$Array$get, (index / $elm$browser$Debugger$History$maxSnapshotSize) | 0, history.snapshots);
				if (_v0.$ === 'Nothing') {
					var $temp$update = update,
						$temp$index = index,
						$temp$history = history;
					update = $temp$update;
					index = $temp$index;
					history = $temp$history;
					continue get;
				} else {
					var model = _v0.a.model;
					var messages = _v0.a.messages;
					return $elm$browser$Debugger$History$undone(
						A3(
							$elm$core$Array$foldr,
							$elm$browser$Debugger$History$getHelp(update),
							A2($elm$browser$Debugger$History$Stepping, index % $elm$browser$Debugger$History$maxSnapshotSize, model),
							messages));
				}
			}
		}
	});
var $elm$browser$Debugger$History$jsToElm = _Debugger_unsafeCoerce;
var $elm$browser$Debugger$History$decoder = F2(
	function (initialModel, update) {
		var addMessage = F2(
			function (rawMsg, _v0) {
				var model = _v0.a;
				var history = _v0.b;
				var msg = $elm$browser$Debugger$History$jsToElm(rawMsg);
				return _Utils_Tuple2(
					A2(update, msg, model),
					A3($elm$browser$Debugger$History$add, msg, model, history));
			});
		var updateModel = function (rawMsgs) {
			return A3(
				$elm$core$List$foldl,
				addMessage,
				_Utils_Tuple2(
					initialModel,
					$elm$browser$Debugger$History$empty(initialModel)),
				rawMsgs);
		};
		return A2(
			$elm$json$Json$Decode$map,
			updateModel,
			$elm$json$Json$Decode$list($elm$json$Json$Decode$value));
	});
var $elm$browser$Debugger$History$getInitialModel = function (_v0) {
	var snapshots = _v0.snapshots;
	var recent = _v0.recent;
	var _v1 = A2($elm$core$Array$get, 0, snapshots);
	if (_v1.$ === 'Just') {
		var model = _v1.a.model;
		return model;
	} else {
		return recent.model;
	}
};
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $elm$browser$Debugger$Main$loadNewHistory = F3(
	function (rawHistory, update, model) {
		var pureUserUpdate = F2(
			function (msg, userModel) {
				return A2(update, msg, userModel).a;
			});
		var initialUserModel = $elm$browser$Debugger$History$getInitialModel(model.history);
		var decoder = A2($elm$browser$Debugger$History$decoder, initialUserModel, pureUserUpdate);
		var _v0 = A2($elm$json$Json$Decode$decodeValue, decoder, rawHistory);
		if (_v0.$ === 'Err') {
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{overlay: $elm$browser$Debugger$Overlay$corruptImport}),
				$elm$core$Platform$Cmd$none);
		} else {
			var _v1 = _v0.a;
			var latestUserModel = _v1.a;
			var newHistory = _v1.b;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						expando: $elm$browser$Debugger$Expando$init(latestUserModel),
						history: newHistory,
						overlay: $elm$browser$Debugger$Overlay$none,
						state: $elm$browser$Debugger$Main$Running(latestUserModel)
					}),
				$elm$core$Platform$Cmd$none);
		}
	});
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$browser$Debugger$Expando$mergeDictHelp = F3(
	function (oldDict, key, value) {
		var _v12 = A2($elm$core$Dict$get, key, oldDict);
		if (_v12.$ === 'Nothing') {
			return value;
		} else {
			var oldValue = _v12.a;
			return A2($elm$browser$Debugger$Expando$mergeHelp, oldValue, value);
		}
	});
var $elm$browser$Debugger$Expando$mergeHelp = F2(
	function (old, _new) {
		var _v3 = _Utils_Tuple2(old, _new);
		_v3$6:
		while (true) {
			switch (_v3.b.$) {
				case 'S':
					return _new;
				case 'Primitive':
					return _new;
				case 'Sequence':
					if (_v3.a.$ === 'Sequence') {
						var _v4 = _v3.a;
						var isClosed = _v4.b;
						var oldValues = _v4.c;
						var _v5 = _v3.b;
						var seqType = _v5.a;
						var newValues = _v5.c;
						return A3(
							$elm$browser$Debugger$Expando$Sequence,
							seqType,
							isClosed,
							A2($elm$browser$Debugger$Expando$mergeListHelp, oldValues, newValues));
					} else {
						break _v3$6;
					}
				case 'Dictionary':
					if (_v3.a.$ === 'Dictionary') {
						var _v6 = _v3.a;
						var isClosed = _v6.a;
						var _v7 = _v3.b;
						var keyValuePairs = _v7.b;
						return A2($elm$browser$Debugger$Expando$Dictionary, isClosed, keyValuePairs);
					} else {
						break _v3$6;
					}
				case 'Record':
					if (_v3.a.$ === 'Record') {
						var _v8 = _v3.a;
						var isClosed = _v8.a;
						var oldDict = _v8.b;
						var _v9 = _v3.b;
						var newDict = _v9.b;
						return A2(
							$elm$browser$Debugger$Expando$Record,
							isClosed,
							A2(
								$elm$core$Dict$map,
								$elm$browser$Debugger$Expando$mergeDictHelp(oldDict),
								newDict));
					} else {
						break _v3$6;
					}
				default:
					if (_v3.a.$ === 'Constructor') {
						var _v10 = _v3.a;
						var isClosed = _v10.b;
						var oldValues = _v10.c;
						var _v11 = _v3.b;
						var maybeName = _v11.a;
						var newValues = _v11.c;
						return A3(
							$elm$browser$Debugger$Expando$Constructor,
							maybeName,
							isClosed,
							A2($elm$browser$Debugger$Expando$mergeListHelp, oldValues, newValues));
					} else {
						break _v3$6;
					}
			}
		}
		return _new;
	});
var $elm$browser$Debugger$Expando$mergeListHelp = F2(
	function (olds, news) {
		var _v0 = _Utils_Tuple2(olds, news);
		if (!_v0.a.b) {
			return news;
		} else {
			if (!_v0.b.b) {
				return news;
			} else {
				var _v1 = _v0.a;
				var x = _v1.a;
				var xs = _v1.b;
				var _v2 = _v0.b;
				var y = _v2.a;
				var ys = _v2.b;
				return A2(
					$elm$core$List$cons,
					A2($elm$browser$Debugger$Expando$mergeHelp, x, y),
					A2($elm$browser$Debugger$Expando$mergeListHelp, xs, ys));
			}
		}
	});
var $elm$browser$Debugger$Expando$merge = F2(
	function (value, expando) {
		return A2(
			$elm$browser$Debugger$Expando$mergeHelp,
			expando,
			_Debugger_init(value));
	});
var $elm$browser$Debugger$Main$scroll = function (popout) {
	return A2(
		$elm$core$Task$perform,
		$elm$core$Basics$always($elm$browser$Debugger$Main$NoOp),
		_Debugger_scroll(popout));
};
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$browser$Debugger$Expando$updateIndex = F3(
	function (n, func, list) {
		if (!list.b) {
			return _List_Nil;
		} else {
			var x = list.a;
			var xs = list.b;
			return (n <= 0) ? A2(
				$elm$core$List$cons,
				func(x),
				xs) : A2(
				$elm$core$List$cons,
				x,
				A3($elm$browser$Debugger$Expando$updateIndex, n - 1, func, xs));
		}
	});
var $elm$browser$Debugger$Expando$update = F2(
	function (msg, value) {
		switch (value.$) {
			case 'S':
				return value;
			case 'Primitive':
				return value;
			case 'Sequence':
				var seqType = value.a;
				var isClosed = value.b;
				var valueList = value.c;
				switch (msg.$) {
					case 'Toggle':
						return A3($elm$browser$Debugger$Expando$Sequence, seqType, !isClosed, valueList);
					case 'Index':
						if (msg.a.$ === 'None') {
							var _v3 = msg.a;
							var index = msg.b;
							var subMsg = msg.c;
							return A3(
								$elm$browser$Debugger$Expando$Sequence,
								seqType,
								isClosed,
								A3(
									$elm$browser$Debugger$Expando$updateIndex,
									index,
									$elm$browser$Debugger$Expando$update(subMsg),
									valueList));
						} else {
							return value;
						}
					default:
						return value;
				}
			case 'Dictionary':
				var isClosed = value.a;
				var keyValuePairs = value.b;
				switch (msg.$) {
					case 'Toggle':
						return A2($elm$browser$Debugger$Expando$Dictionary, !isClosed, keyValuePairs);
					case 'Index':
						var redirect = msg.a;
						var index = msg.b;
						var subMsg = msg.c;
						switch (redirect.$) {
							case 'None':
								return value;
							case 'Key':
								return A2(
									$elm$browser$Debugger$Expando$Dictionary,
									isClosed,
									A3(
										$elm$browser$Debugger$Expando$updateIndex,
										index,
										function (_v6) {
											var k = _v6.a;
											var v = _v6.b;
											return _Utils_Tuple2(
												A2($elm$browser$Debugger$Expando$update, subMsg, k),
												v);
										},
										keyValuePairs));
							default:
								return A2(
									$elm$browser$Debugger$Expando$Dictionary,
									isClosed,
									A3(
										$elm$browser$Debugger$Expando$updateIndex,
										index,
										function (_v7) {
											var k = _v7.a;
											var v = _v7.b;
											return _Utils_Tuple2(
												k,
												A2($elm$browser$Debugger$Expando$update, subMsg, v));
										},
										keyValuePairs));
						}
					default:
						return value;
				}
			case 'Record':
				var isClosed = value.a;
				var valueDict = value.b;
				switch (msg.$) {
					case 'Toggle':
						return A2($elm$browser$Debugger$Expando$Record, !isClosed, valueDict);
					case 'Index':
						return value;
					default:
						var field = msg.a;
						var subMsg = msg.b;
						return A2(
							$elm$browser$Debugger$Expando$Record,
							isClosed,
							A3(
								$elm$core$Dict$update,
								field,
								$elm$browser$Debugger$Expando$updateField(subMsg),
								valueDict));
				}
			default:
				var maybeName = value.a;
				var isClosed = value.b;
				var valueList = value.c;
				switch (msg.$) {
					case 'Toggle':
						return A3($elm$browser$Debugger$Expando$Constructor, maybeName, !isClosed, valueList);
					case 'Index':
						if (msg.a.$ === 'None') {
							var _v10 = msg.a;
							var index = msg.b;
							var subMsg = msg.c;
							return A3(
								$elm$browser$Debugger$Expando$Constructor,
								maybeName,
								isClosed,
								A3(
									$elm$browser$Debugger$Expando$updateIndex,
									index,
									$elm$browser$Debugger$Expando$update(subMsg),
									valueList));
						} else {
							return value;
						}
					default:
						return value;
				}
		}
	});
var $elm$browser$Debugger$Expando$updateField = F2(
	function (msg, maybeExpando) {
		if (maybeExpando.$ === 'Nothing') {
			return maybeExpando;
		} else {
			var expando = maybeExpando.a;
			return $elm$core$Maybe$Just(
				A2($elm$browser$Debugger$Expando$update, msg, expando));
		}
	});
var $elm$browser$Debugger$Main$Upload = function (a) {
	return {$: 'Upload', a: a};
};
var $elm$browser$Debugger$Main$upload = A2(
	$elm$core$Task$perform,
	$elm$browser$Debugger$Main$Upload,
	_Debugger_upload(_Utils_Tuple0));
var $elm$browser$Debugger$Overlay$BadMetadata = function (a) {
	return {$: 'BadMetadata', a: a};
};
var $elm$browser$Debugger$Overlay$badMetadata = $elm$browser$Debugger$Overlay$BadMetadata;
var $elm$browser$Debugger$Main$withGoodMetadata = F2(
	function (model, func) {
		var _v0 = model.metadata;
		if (_v0.$ === 'Ok') {
			var metadata = _v0.a;
			return func(metadata);
		} else {
			var error = _v0.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						overlay: $elm$browser$Debugger$Overlay$badMetadata(error)
					}),
				$elm$core$Platform$Cmd$none);
		}
	});
var $elm$browser$Debugger$Main$wrapUpdate = F3(
	function (update, msg, model) {
		wrapUpdate:
		while (true) {
			switch (msg.$) {
				case 'NoOp':
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				case 'UserMsg':
					var userMsg = msg.a;
					var userModel = $elm$browser$Debugger$Main$getLatestModel(model.state);
					var newHistory = A3($elm$browser$Debugger$History$add, userMsg, userModel, model.history);
					var _v1 = A2(update, userMsg, userModel);
					var newUserModel = _v1.a;
					var userCmds = _v1.b;
					var commands = A2($elm$core$Platform$Cmd$map, $elm$browser$Debugger$Main$UserMsg, userCmds);
					var _v2 = model.state;
					if (_v2.$ === 'Running') {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									expando: A2($elm$browser$Debugger$Expando$merge, newUserModel, model.expando),
									history: newHistory,
									state: $elm$browser$Debugger$Main$Running(newUserModel)
								}),
							$elm$core$Platform$Cmd$batch(
								_List_fromArray(
									[
										commands,
										$elm$browser$Debugger$Main$scroll(model.popout)
									])));
					} else {
						var index = _v2.a;
						var indexModel = _v2.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									history: newHistory,
									state: A3($elm$browser$Debugger$Main$Paused, index, indexModel, newUserModel)
								}),
							commands);
					}
				case 'ExpandoMsg':
					var eMsg = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								expando: A2($elm$browser$Debugger$Expando$update, eMsg, model.expando)
							}),
						$elm$core$Platform$Cmd$none);
				case 'Resume':
					var _v3 = model.state;
					if (_v3.$ === 'Running') {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					} else {
						var userModel = _v3.c;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									expando: A2($elm$browser$Debugger$Expando$merge, userModel, model.expando),
									state: $elm$browser$Debugger$Main$Running(userModel)
								}),
							$elm$browser$Debugger$Main$scroll(model.popout));
					}
				case 'Jump':
					var index = msg.a;
					var _v4 = A3($elm$browser$Debugger$History$get, update, index, model.history);
					var indexModel = _v4.a;
					var indexMsg = _v4.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								expando: A2($elm$browser$Debugger$Expando$merge, indexModel, model.expando),
								state: A3(
									$elm$browser$Debugger$Main$Paused,
									index,
									indexModel,
									$elm$browser$Debugger$Main$getLatestModel(model.state))
							}),
						$elm$core$Platform$Cmd$none);
				case 'Open':
					return _Utils_Tuple2(
						model,
						A2(
							$elm$core$Task$perform,
							function (_v5) {
								return $elm$browser$Debugger$Main$NoOp;
							},
							_Debugger_open(model.popout)));
				case 'Up':
					var index = function () {
						var _v6 = model.state;
						if (_v6.$ === 'Paused') {
							var i = _v6.a;
							return i;
						} else {
							return $elm$browser$Debugger$History$size(model.history);
						}
					}();
					if (index > 0) {
						var $temp$update = update,
							$temp$msg = $elm$browser$Debugger$Main$Jump(index - 1),
							$temp$model = model;
						update = $temp$update;
						msg = $temp$msg;
						model = $temp$model;
						continue wrapUpdate;
					} else {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					}
				case 'Down':
					var _v7 = model.state;
					if (_v7.$ === 'Running') {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					} else {
						var index = _v7.a;
						var userModel = _v7.c;
						if (_Utils_eq(
							index,
							$elm$browser$Debugger$History$size(model.history) - 1)) {
							var $temp$update = update,
								$temp$msg = $elm$browser$Debugger$Main$Resume,
								$temp$model = model;
							update = $temp$update;
							msg = $temp$msg;
							model = $temp$model;
							continue wrapUpdate;
						} else {
							var $temp$update = update,
								$temp$msg = $elm$browser$Debugger$Main$Jump(index + 1),
								$temp$model = model;
							update = $temp$update;
							msg = $temp$msg;
							model = $temp$model;
							continue wrapUpdate;
						}
					}
				case 'Import':
					return A2(
						$elm$browser$Debugger$Main$withGoodMetadata,
						model,
						function (_v8) {
							return _Utils_Tuple2(model, $elm$browser$Debugger$Main$upload);
						});
				case 'Export':
					return A2(
						$elm$browser$Debugger$Main$withGoodMetadata,
						model,
						function (metadata) {
							return _Utils_Tuple2(
								model,
								A2($elm$browser$Debugger$Main$download, metadata, model.history));
						});
				case 'Upload':
					var jsonString = msg.a;
					return A2(
						$elm$browser$Debugger$Main$withGoodMetadata,
						model,
						function (metadata) {
							var _v9 = A2($elm$browser$Debugger$Overlay$assessImport, metadata, jsonString);
							if (_v9.$ === 'Err') {
								var newOverlay = _v9.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{overlay: newOverlay}),
									$elm$core$Platform$Cmd$none);
							} else {
								var rawHistory = _v9.a;
								return A3($elm$browser$Debugger$Main$loadNewHistory, rawHistory, update, model);
							}
						});
				default:
					var overlayMsg = msg.a;
					var _v10 = A2($elm$browser$Debugger$Overlay$close, overlayMsg, model.overlay);
					if (_v10.$ === 'Nothing') {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{overlay: $elm$browser$Debugger$Overlay$none}),
							$elm$core$Platform$Cmd$none);
					} else {
						var rawHistory = _v10.a;
						return A3($elm$browser$Debugger$Main$loadNewHistory, rawHistory, update, model);
					}
			}
		}
	});
var $elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var $elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var $elm$url$Url$Http = {$: 'Http'};
var $elm$url$Url$Https = {$: 'Https'};
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Http,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Https,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0.a;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$browser$Browser$application = _Browser_application;
var $author$project$Page$Index = function (a) {
	return {$: 'Index', a: a};
};
var $author$project$Toasters$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Toasters$init = $author$project$Toasters$Model(_List_Nil);
var $author$project$Entities$courseIdToString = function (_v0) {
	var id = _v0.a;
	return id;
};
var $turboMaCk$any_dict$Dict$Any$AnyDict = function (a) {
	return {$: 'AnyDict', a: a};
};
var $turboMaCk$any_dict$Dict$Any$empty = function (toKey) {
	return $turboMaCk$any_dict$Dict$Any$AnyDict(
		{dict: $elm$core$Dict$empty, toKey: toKey});
};
var $author$project$Entities$taskIdToString = function (_v0) {
	var id = _v0.a;
	return id;
};
var $author$project$Entities$unitIdToString = function (_v0) {
	var id = _v0.a;
	return id;
};
var $author$project$Entities$init = {
	courses: $turboMaCk$any_dict$Dict$Any$empty($author$project$Entities$courseIdToString),
	tasks: $turboMaCk$any_dict$Dict$Any$empty($author$project$Entities$taskIdToString),
	units: $turboMaCk$any_dict$Dict$Any$empty($author$project$Entities$unitIdToString)
};
var $author$project$Model$initialDb = {entities: $author$project$Entities$init};
var $author$project$Records$MusicGenre$BlackenedHeavyProgressiveAlternativeNewAgeRockabillyGlamCoreRetroFolkNeoSoulAcidFunkDooWopElectricalDreamPop = {$: 'BlackenedHeavyProgressiveAlternativeNewAgeRockabillyGlamCoreRetroFolkNeoSoulAcidFunkDooWopElectricalDreamPop'};
var $author$project$Records$MusicGenre$Blues = {$: 'Blues'};
var $author$project$Records$MusicGenre$Jazz = {$: 'Jazz'};
var $author$project$Records$MusicGenre$Metal = {$: 'Metal'};
var $mgold$elm_nonempty_list$List$Nonempty$Nonempty = F2(
	function (a, b) {
		return {$: 'Nonempty', a: a, b: b};
	});
var $author$project$Records$MusicGenre$Pop = {$: 'Pop'};
var $author$project$Records$MusicGenre$Rock = {$: 'Rock'};
var $author$project$Records$MusicGenre$asNonempty = A2(
	$mgold$elm_nonempty_list$List$Nonempty$Nonempty,
	$author$project$Records$MusicGenre$Rock,
	_List_fromArray(
		[$author$project$Records$MusicGenre$Metal, $author$project$Records$MusicGenre$Blues, $author$project$Records$MusicGenre$Jazz, $author$project$Records$MusicGenre$Pop, $author$project$Records$MusicGenre$BlackenedHeavyProgressiveAlternativeNewAgeRockabillyGlamCoreRetroFolkNeoSoulAcidFunkDooWopElectricalDreamPop]));
var $author$project$Records$Country$Country = F5(
	function (name, altSpellings, capital, region, population) {
		return {altSpellings: altSpellings, capital: capital, name: name, population: population, region: region};
	});
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A2($elm$json$Json$Decode$field, key, valDecoder),
			decoder);
	});
var $author$project$Records$Country$countryDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'population',
	$elm$json$Json$Decode$int,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'region',
		$elm$json$Json$Decode$string,
		A3(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
			'capital',
			$elm$json$Json$Decode$string,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'altSpellings',
				$elm$json$Json$Decode$list($elm$json$Json$Decode$string),
				A3(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
					'name',
					$elm$json$Json$Decode$string,
					$elm$json$Json$Decode$succeed($author$project$Records$Country$Country))))));
var $author$project$Form$DatePicker$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$Select$Model = function (a) {
	return {$: 'Model', a: a};
};
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $author$project$Resettable$Initial = function (a) {
	return {$: 'Initial', a: a};
};
var $author$project$Resettable$init = $author$project$Resettable$Initial;
var $author$project$Form$Select$Internal$init = function (options) {
	return {
		focusedOption: $elm$core$Maybe$Nothing,
		isOpen: false,
		options: options,
		searchText: '',
		selectedOption: $author$project$Resettable$init($elm$core$Maybe$Nothing)
	};
};
var $author$project$Form$Select$init = A2($elm$core$Basics$composeR, $author$project$Form$Select$Internal$init, $author$project$Form$Select$Model);
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 'Zone', a: a, b: b};
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$Form$DatePicker$Internal$init = function () {
	var seconds = $author$project$Form$Select$init(
		A2(
			$mgold$elm_nonempty_list$List$Nonempty$Nonempty,
			0,
			A2($elm$core$List$range, 1, 59)));
	var minutes = $author$project$Form$Select$init(
		A2(
			$mgold$elm_nonempty_list$List$Nonempty$Nonempty,
			0,
			A2($elm$core$List$range, 1, 59)));
	var hours = $author$project$Form$Select$init(
		A2(
			$mgold$elm_nonempty_list$List$Nonempty$Nonempty,
			0,
			A2($elm$core$List$range, 1, 23)));
	return {
		desiredPosix: $elm$core$Maybe$Nothing,
		focusedSelect: $elm$core$Maybe$Nothing,
		hours: hours,
		isOpen: false,
		minutes: minutes,
		navigationPosix: $elm$core$Maybe$Nothing,
		seconds: seconds,
		selectedPosix: $author$project$Resettable$init($elm$core$Maybe$Nothing),
		timeZone: $elm$time$Time$utc
	};
}();
var $author$project$Form$DatePicker$init = $author$project$Form$DatePicker$Model($author$project$Form$DatePicker$Internal$init);
var $author$project$Form$FloatInput$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$FloatInput$Internal$init = {
	bypassLazy: 0,
	decimal: 0,
	value: $author$project$Resettable$init('')
};
var $author$project$Form$FloatInput$init = $author$project$Form$FloatInput$Model($author$project$Form$FloatInput$Internal$init);
var $author$project$Form$Input$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$Input$Internal$init = {
	value: $author$project$Resettable$init('')
};
var $author$project$Form$Input$init = $author$project$Form$Input$Model($author$project$Form$Input$Internal$init);
var $author$project$Form$IntInput$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$IntInput$Internal$init = {
	bypassLazy: 0,
	value: $author$project$Resettable$init('')
};
var $author$project$Form$IntInput$init = $author$project$Form$IntInput$Model($author$project$Form$IntInput$Internal$init);
var $author$project$Form$MultiSelect$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$MultiSelect$Internal$init = function (options) {
	return {
		focusedOption: $elm$core$Maybe$Nothing,
		isOpen: false,
		options: options,
		searchText: '',
		selectedOptions: $author$project$Resettable$init(_List_Nil)
	};
};
var $author$project$Form$MultiSelect$init = A2($elm$core$Basics$composeR, $author$project$Form$MultiSelect$Internal$init, $author$project$Form$MultiSelect$Model);
var $author$project$Form$SearchSelect$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$SearchSelect$Internal$init = F2(
	function (searchUrl, optionDecoder) {
		return {
			focusedOption: $elm$core$Maybe$Nothing,
			input: '',
			isOpen: false,
			isSearching: false,
			optionDecoder: optionDecoder,
			options: _List_Nil,
			searchUrl: searchUrl,
			selectedOption: $author$project$Resettable$init($elm$core$Maybe$Nothing)
		};
	});
var $author$project$Form$SearchSelect$init = F2(
	function (searchUrl, optionDecoder) {
		return $author$project$Form$SearchSelect$Model(
			A2($author$project$Form$SearchSelect$Internal$init, searchUrl, optionDecoder));
	});
var $author$project$Form$TextArea$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$Form$TextArea$Internal$init = {
	replacements: _List_Nil,
	substituteTabs: false,
	value: $author$project$Resettable$init('')
};
var $author$project$Form$TextArea$init = $author$project$Form$TextArea$Model($author$project$Form$TextArea$Internal$init);
var $author$project$ToolTip$InternalState = F2(
	function (tip, isOpen) {
		return {isOpen: isOpen, tip: tip};
	});
var $author$project$ToolTip$Model = function (a) {
	return {$: 'Model', a: a};
};
var $author$project$ToolTip$init = function (tip) {
	return $author$project$ToolTip$Model(
		A2($author$project$ToolTip$InternalState, tip, false));
};
var $author$project$Form$TextArea$Internal$setReplacements = F2(
	function (replacements, state) {
		return _Utils_update(
			state,
			{replacements: replacements});
	});
var $author$project$Form$TextArea$setReplacements = F2(
	function (replacements, _v0) {
		var state = _v0.a;
		return $author$project$Form$TextArea$Model(
			A2($author$project$Form$TextArea$Internal$setReplacements, replacements, state));
	});
var $author$project$Form$DatePicker$Internal$setTimeZone = F2(
	function (timeZone, state) {
		return _Utils_update(
			state,
			{timeZone: timeZone});
	});
var $author$project$Form$DatePicker$setTimeZone = F2(
	function (timeZone, _v0) {
		var state = _v0.a;
		return $author$project$Form$DatePicker$Model(
			A2($author$project$Form$DatePicker$Internal$setTimeZone, timeZone, state));
	});
var $elm$core$Debug$todo = _Debug_todo;
var $justinmimbs$timezone_data$TimeZone$Specification$Save = function (a) {
	return {$: 'Save', a: a};
};
var $justinmimbs$timezone_data$TimeZone$Specification$Zone = F2(
	function (history, current) {
		return {current: current, history: history};
	});
var $justinmimbs$timezone_data$TimeZone$Specification$ZoneState = F2(
	function (standardOffset, zoneRules) {
		return {standardOffset: standardOffset, zoneRules: zoneRules};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $justinmimbs$timezone_data$TimeZone$maxYear = 2037;
var $justinmimbs$timezone_data$TimeZone$minYear = 1970;
var $justinmimbs$timezone_data$TimeZone$Specification$DateTime = F5(
	function (year, month, day, time, clock) {
		return {clock: clock, day: day, month: month, time: time, year: year};
	});
var $elm$time$Time$Jan = {$: 'Jan'};
var $justinmimbs$timezone_data$TimeZone$Specification$Universal = {$: 'Universal'};
var $justinmimbs$timezone_data$TimeZone$Specification$dropChangesBeforeEpoch = function (_v0) {
	dropChangesBeforeEpoch:
	while (true) {
		var initial = _v0.a;
		var changes = _v0.b;
		if (changes.b) {
			var change = changes.a;
			var rest = changes.b;
			if (change.start <= 0) {
				var $temp$_v0 = _Utils_Tuple2(change.offset, rest);
				_v0 = $temp$_v0;
				continue dropChangesBeforeEpoch;
			} else {
				return _Utils_Tuple2(initial, changes);
			}
		} else {
			return _Utils_Tuple2(initial, _List_Nil);
		}
	}
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $justinmimbs$timezone_data$RataDie$weekdayNumber = function (rd) {
	var _v0 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v0) {
		return 7;
	} else {
		var n = _v0;
		return n;
	}
};
var $justinmimbs$timezone_data$RataDie$weekdayToNumber = function (wd) {
	switch (wd.$) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$timezone_data$RataDie$floorWeekday = F2(
	function (weekday, rd) {
		var daysSincePreviousWeekday = A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$timezone_data$RataDie$weekdayNumber(rd) + 7) - $justinmimbs$timezone_data$RataDie$weekdayToNumber(weekday));
		return rd - daysSincePreviousWeekday;
	});
var $justinmimbs$timezone_data$RataDie$ceilingWeekday = F2(
	function (weekday, rd) {
		var floored = A2($justinmimbs$timezone_data$RataDie$floorWeekday, weekday, rd);
		return _Utils_eq(rd, floored) ? rd : (floored + 7);
	});
var $justinmimbs$timezone_data$RataDie$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$timezone_data$RataDie$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$timezone_data$RataDie$isLeapYear(y) ? 1 : 0;
		switch (m.$) {
			case 'Jan':
				return 0;
			case 'Feb':
				return 31;
			case 'Mar':
				return 59 + leapDays;
			case 'Apr':
				return 90 + leapDays;
			case 'May':
				return 120 + leapDays;
			case 'Jun':
				return 151 + leapDays;
			case 'Jul':
				return 181 + leapDays;
			case 'Aug':
				return 212 + leapDays;
			case 'Sep':
				return 243 + leapDays;
			case 'Oct':
				return 273 + leapDays;
			case 'Nov':
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$timezone_data$RataDie$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (((y / 4) | 0) - ((y / 100) | 0)) + ((y / 400) | 0);
	return (365 * y) + leapYears;
};
var $justinmimbs$timezone_data$RataDie$dayOfMonth = F3(
	function (y, m, d) {
		return ($justinmimbs$timezone_data$RataDie$daysBeforeYear(y) + A2($justinmimbs$timezone_data$RataDie$daysBeforeMonth, y, m)) + d;
	});
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $justinmimbs$timezone_data$RataDie$daysInMonth = F2(
	function (y, m) {
		switch (m.$) {
			case 'Jan':
				return 31;
			case 'Feb':
				return $justinmimbs$timezone_data$RataDie$isLeapYear(y) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$timezone_data$RataDie$lastOfMonth = F2(
	function (y, m) {
		return ($justinmimbs$timezone_data$RataDie$daysBeforeYear(y) + A2($justinmimbs$timezone_data$RataDie$daysBeforeMonth, y, m)) + A2($justinmimbs$timezone_data$RataDie$daysInMonth, y, m);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie = function (rd) {
	return (rd - 719163) * 1440;
};
var $elm$core$List$sortBy = _List_sortBy;
var $justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment = F2(
	function (clock, _v0) {
		var standard = _v0.standard;
		var save = _v0.save;
		switch (clock.$) {
			case 'Universal':
				return 0;
			case 'Standard':
				return 0 - standard;
			default:
				return 0 - (standard + save);
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$minutesFromDateTime = function (_v0) {
	var year = _v0.year;
	var month = _v0.month;
	var day = _v0.day;
	var time = _v0.time;
	return $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie(
		A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, month, day)) + time;
};
var $justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime = F2(
	function (offset, datetime) {
		return $justinmimbs$timezone_data$TimeZone$Specification$minutesFromDateTime(datetime) + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, datetime.clock, offset);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$rulesToOffsetChanges = F5(
	function (previousOffset, start, until, standardOffset, rules) {
		var transitions = A2(
			$elm$core$List$concatMap,
			function (year) {
				return A2(
					$elm$core$List$sortBy,
					function ($) {
						return $.start;
					},
					A2(
						$elm$core$List$map,
						function (rule) {
							return {
								clock: rule.clock,
								save: rule.save,
								start: $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie(
									function () {
										var _v2 = rule.day;
										switch (_v2.$) {
											case 'Day':
												var day = _v2.a;
												return A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, rule.month, day);
											case 'First':
												var weekday = _v2.a;
												var onOrAfterDay = _v2.b;
												return A2(
													$justinmimbs$timezone_data$RataDie$ceilingWeekday,
													weekday,
													A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, rule.month, onOrAfterDay));
											default:
												var weekday = _v2.a;
												return A2(
													$justinmimbs$timezone_data$RataDie$floorWeekday,
													weekday,
													A2($justinmimbs$timezone_data$RataDie$lastOfMonth, year, rule.month));
										}
									}()) + rule.time
							};
						},
						A2(
							$elm$core$List$filter,
							function (rule) {
								return (_Utils_cmp(rule.from, year) < 1) && (_Utils_cmp(year, rule.to) < 1);
							},
							rules)));
			},
			A2($elm$core$List$range, start.year - 1, until.year));
		var initialOffset = {save: 0, standard: standardOffset};
		var initialChange = {
			offset: standardOffset,
			start: A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, previousOffset, start)
		};
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (transition, _v1) {
					var currentOffset = _v1.a;
					var changes = _v1.b;
					var newOffset = {save: transition.save, standard: standardOffset};
					if (_Utils_cmp(
						transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, previousOffset),
						initialChange.start) < 1) {
						var updatedInitialChange = {offset: standardOffset + transition.save, start: initialChange.start};
						return _Utils_Tuple2(
							newOffset,
							_List_fromArray(
								[updatedInitialChange]));
					} else {
						if (_Utils_cmp(
							transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, currentOffset),
							A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, currentOffset, until)) < 0) {
							var change = {
								offset: standardOffset + transition.save,
								start: transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, currentOffset)
							};
							return _Utils_Tuple2(
								newOffset,
								A2($elm$core$List$cons, change, changes));
						} else {
							return _Utils_Tuple2(currentOffset, changes);
						}
					}
				}),
			_Utils_Tuple2(
				initialOffset,
				_List_fromArray(
					[initialChange])),
			transitions);
		var nextOffset = _v0.a;
		var descendingChanges = _v0.b;
		return _Utils_Tuple2(
			$elm$core$List$reverse(descendingChanges),
			nextOffset);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$stateToOffsetChanges = F4(
	function (previousOffset, start, until, _v0) {
		var standardOffset = _v0.standardOffset;
		var zoneRules = _v0.zoneRules;
		if (zoneRules.$ === 'Save') {
			var save = zoneRules.a;
			return _Utils_Tuple2(
				_List_fromArray(
					[
						{
						offset: standardOffset + save,
						start: A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, previousOffset, start)
					}
					]),
				{save: save, standard: standardOffset});
		} else {
			var rules = zoneRules.a;
			return A5($justinmimbs$timezone_data$TimeZone$Specification$rulesToOffsetChanges, previousOffset, start, until, standardOffset, rules);
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$stripDuplicatesByHelp = F4(
	function (f, a, rev, list) {
		stripDuplicatesByHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$List$reverse(rev);
			} else {
				var x = list.a;
				var xs = list.b;
				var b = f(x);
				var rev_ = (!_Utils_eq(a, b)) ? A2($elm$core$List$cons, x, rev) : rev;
				var $temp$f = f,
					$temp$a = b,
					$temp$rev = rev_,
					$temp$list = xs;
				f = $temp$f;
				a = $temp$a;
				rev = $temp$rev;
				list = $temp$list;
				continue stripDuplicatesByHelp;
			}
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$zoneToRanges = F3(
	function (zoneStart, zoneUntil, zone) {
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (_v1, _v2) {
					var state = _v1.a;
					var nextStart = _v1.b;
					var start = _v2.a;
					var ranges = _v2.b;
					return _Utils_Tuple2(
						nextStart,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple3(start, state, nextStart),
							ranges));
				}),
			_Utils_Tuple2(zoneStart, _List_Nil),
			zone.history);
		var currentStart = _v0.a;
		var historyRanges = _v0.b;
		return $elm$core$List$reverse(
			A2(
				$elm$core$List$cons,
				_Utils_Tuple3(currentStart, zone.current, zoneUntil),
				historyRanges));
	});
var $justinmimbs$timezone_data$TimeZone$Specification$toOffsets = F3(
	function (minYear, maxYear, zone) {
		var initialState = function () {
			var _v5 = zone.history;
			if (_v5.b) {
				var _v6 = _v5.a;
				var earliest = _v6.a;
				return earliest;
			} else {
				return zone.current;
			}
		}();
		var initialOffset = {
			save: function () {
				var _v4 = initialState.zoneRules;
				if (_v4.$ === 'Save') {
					var save = _v4.a;
					return save;
				} else {
					return 0;
				}
			}(),
			standard: initialState.standardOffset
		};
		var ascendingChanges = A4(
			$justinmimbs$timezone_data$TimeZone$Specification$stripDuplicatesByHelp,
			function ($) {
				return $.offset;
			},
			initialOffset.standard + initialOffset.save,
			_List_Nil,
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v1, _v2) {
						var start = _v1.a;
						var state = _v1.b;
						var until = _v1.c;
						var prevOffset = _v2.a;
						var prevChanges = _v2.b;
						var _v3 = A4($justinmimbs$timezone_data$TimeZone$Specification$stateToOffsetChanges, prevOffset, start, until, state);
						var nextChanges = _v3.a;
						var nextOffset = _v3.b;
						return _Utils_Tuple2(
							nextOffset,
							_Utils_ap(prevChanges, nextChanges));
					}),
				_Utils_Tuple2(initialOffset, _List_Nil),
				A3(
					$justinmimbs$timezone_data$TimeZone$Specification$zoneToRanges,
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, minYear, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$Universal),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, maxYear + 1, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$Universal),
					zone)).b);
		var _v0 = $justinmimbs$timezone_data$TimeZone$Specification$dropChangesBeforeEpoch(
			_Utils_Tuple2(initialOffset.standard + initialOffset.save, ascendingChanges));
		var initial = _v0.a;
		var ascending = _v0.b;
		return _Utils_Tuple2(
			$elm$core$List$reverse(ascending),
			initial);
	});
var $justinmimbs$timezone_data$TimeZone$fromSpecification = function (zone) {
	var _v0 = A3($justinmimbs$timezone_data$TimeZone$Specification$toOffsets, $justinmimbs$timezone_data$TimeZone$minYear, $justinmimbs$timezone_data$TimeZone$maxYear, zone);
	var descending = _v0.a;
	var bottom = _v0.b;
	return A2($elm$time$Time$customZone, bottom, descending);
};
var $justinmimbs$timezone_data$TimeZone$africa__abidjan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__accra = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__nairobi = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__addis_ababa = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $elm$time$Time$May = {$: 'May'};
var $elm$time$Time$Oct = {$: 'Oct'};
var $justinmimbs$timezone_data$TimeZone$Specification$Rules = function (a) {
	return {$: 'Rules', a: a};
};
var $justinmimbs$timezone_data$TimeZone$Specification$WallClock = {$: 'WallClock'};
var $elm$time$Time$Apr = {$: 'Apr'};
var $justinmimbs$timezone_data$TimeZone$Specification$Day = function (a) {
	return {$: 'Day', a: a};
};
var $elm$time$Time$Mar = {$: 'Mar'};
var $justinmimbs$timezone_data$TimeZone$Specification$Rule = F7(
	function (from, to, month, day, time, clock, save) {
		return {clock: clock, day: day, from: from, month: month, save: save, time: time, to: to};
	});
var $elm$time$Time$Sep = {$: 'Sep'};
var $justinmimbs$timezone_data$TimeZone$Specification$Standard = {$: 'Standard'};
var $justinmimbs$timezone_data$TimeZone$rules_Algeria = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__algiers = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Algeria)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Oct, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Algeria)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Oct, 26, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Algeria)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__asmara = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$africa__bamako = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__lagos = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__bangui = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__banjul = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__bissau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__maputo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__blantyre = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__brazzaville = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__bujumbura = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $elm$time$Time$Aug = {$: 'Aug'};
var $justinmimbs$timezone_data$TimeZone$Specification$First = F2(
	function (a, b) {
		return {$: 'First', a: a, b: b};
	});
var $elm$time$Time$Fri = {$: 'Fri'};
var $elm$time$Time$Jul = {$: 'Jul'};
var $elm$time$Time$Jun = {$: 'Jun'};
var $justinmimbs$timezone_data$TimeZone$Specification$Last = function (a) {
	return {$: 'Last', a: a};
};
var $elm$time$Time$Thu = {$: 'Thu'};
var $justinmimbs$timezone_data$TimeZone$rules_Egypt = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1959,
		1981,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1966,
		1994,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1988,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1994,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2010,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2005,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Thu, 1),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__cairo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Egypt))));
};
var $elm$time$Time$Dec = {$: 'Dec'};
var $elm$time$Time$Feb = {$: 'Feb'};
var $elm$time$Time$Nov = {$: 'Nov'};
var $elm$time$Time$Sun = {$: 'Sun'};
var $justinmimbs$timezone_data$TimeZone$rules_Morocco = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2013,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2018,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2018,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2015,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2015,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2016,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2016,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		2017,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		2017,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2018,
		2018,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2018,
		2018,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2019,
		2019,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2019,
		2019,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2020,
		2020,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2020,
		2020,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2021,
		2021,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2021,
		2021,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2022,
		2022,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2022,
		2022,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2023,
		2023,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2023,
		2023,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2024,
		2024,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2024,
		2024,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2025,
		2025,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2025,
		2025,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2026,
		2026,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2026,
		2026,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2027,
		2027,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2027,
		2027,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2028,
		2028,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2028,
		2028,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2029,
		2029,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2029,
		2029,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2029,
		2029,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2030,
		2030,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2030,
		2030,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2031,
		2031,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2031,
		2031,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2032,
		2032,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2032,
		2032,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2033,
		2033,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2033,
		2033,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2033,
		2033,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2034,
		2034,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2034,
		2034,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2035,
		2035,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2035,
		2035,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2036,
		2036,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2036,
		2036,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2037,
		2037,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2037,
		2037,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__casablanca = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Morocco)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1984, $elm$time$Time$Mar, 16, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1986, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Morocco)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Oct, 28, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Morocco))));
};
var $justinmimbs$timezone_data$TimeZone$rules_EU = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_SpainAfrica = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__ceuta = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_SpainAfrica)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1984, $elm$time$Time$Mar, 16, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1986, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$africa__conakry = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__dakar = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__dar_es_salaam = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$africa__djibouti = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$africa__douala = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__el_aaiun = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Apr, 14, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Morocco)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Oct, 28, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Morocco))));
};
var $justinmimbs$timezone_data$TimeZone$africa__freetown = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__gaborone = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__harare = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__johannesburg = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Sudan = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__juba = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Sudan)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Jan, 15, 720, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__kampala = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$africa__khartoum = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Sudan)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Jan, 15, 720, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2017, $elm$time$Time$Nov, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__kigali = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__kinshasa = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__libreville = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__lome = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__luanda = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__lubumbashi = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__lusaka = $justinmimbs$timezone_data$TimeZone$africa__maputo;
var $justinmimbs$timezone_data$TimeZone$africa__malabo = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__maseru = $justinmimbs$timezone_data$TimeZone$africa__johannesburg;
var $justinmimbs$timezone_data$TimeZone$africa__mbabane = $justinmimbs$timezone_data$TimeZone$africa__johannesburg;
var $justinmimbs$timezone_data$TimeZone$africa__mogadishu = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$africa__monrovia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-45,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Jan, 7, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__ndjamena = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Oct, 14, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Mar, 8, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$africa__niamey = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__nouakchott = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__ouagadougou = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$africa__porto_novo = $justinmimbs$timezone_data$TimeZone$africa__lagos;
var $justinmimbs$timezone_data$TimeZone$africa__sao_tome = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Jan, 1, 60, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2019, $elm$time$Time$Jan, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Libya = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1989,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1989,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__tripoli = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Libya)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$May, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Libya)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Oct, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Nov, 10, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Libya)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2013, $elm$time$Time$Oct, 25, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Tunisia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1990,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2008,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2008,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__tunis = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Tunisia))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Namibia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		2017,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2017,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		-60)
	]);
var $justinmimbs$timezone_data$TimeZone$africa__windhoek = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Mar, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Namibia))));
};
var $justinmimbs$timezone_data$TimeZone$rules_US = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1967,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1967,
		1973,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__adak = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__anchorage = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__port_of_spain = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__anguilla = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__antigua = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$rules_Brazil = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1995,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1995,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2001,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2006,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2002,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2003,
		2003,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2017,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2011,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2014,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2015,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2022,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2018,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2023,
		2023,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2024,
		2025,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2026,
		2026,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2027,
		2033,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2034,
		2034,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2035,
		2036,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2037,
		2037,
		$elm$time$Time$Feb,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__araguaina = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Sep, 14, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2003, $elm$time$Time$Sep, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Oct, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2013, $elm$time$Time$Sep, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Arg = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1968,
		1969,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1993,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1992,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2009,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__argentina__buenos_aires = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__catamarca = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__cordoba = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__jujuy = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Mar, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Oct, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 6, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__la_rioja = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$May, 7, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__mendoza = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Mar, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$May, 23, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Sep, 26, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__rio_gallegos = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__salta = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__san_juan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$May, 7, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$May, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jul, 25, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_SanLuis = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2009,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2008,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__argentina__san_luis = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Mar, 14, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$May, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jul, 25, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Jan, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_SanLuis)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2009, $elm$time$Time$Oct, 11, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__tucuman = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg))));
};
var $justinmimbs$timezone_data$TimeZone$america__argentina__ushuaia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Mar, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$May, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Oct, 18, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__curacao = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__aruba = $justinmimbs$timezone_data$TimeZone$america__curacao;
var $justinmimbs$timezone_data$TimeZone$rules_Para = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1988,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1978,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1991,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1995,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1995,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2001,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		2001,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2004,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2003,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2009,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2009,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2012,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__asuncion = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Para))));
};
var $justinmimbs$timezone_data$TimeZone$america__atikokan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__bahia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2003, $elm$time$Time$Sep, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Oct, 16, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Oct, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Mexico = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2000,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2000,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2001,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2001,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__bahia_banderas = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Apr, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Barb = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1978,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__barbados = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Barb))));
};
var $justinmimbs$timezone_data$TimeZone$america__belem = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Belize = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__belize = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Belize))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Canada = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__blanc_sablon = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__boa_vista = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_CO = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__bogota = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_CO))));
};
var $justinmimbs$timezone_data$TimeZone$america__boise = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Feb, 3, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$rules_NT_YK = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__cambridge_bay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Nov, 5, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Apr, 1, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__campo_grande = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil))));
};
var $justinmimbs$timezone_data$TimeZone$america__cancun = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Dec, 23, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Aug, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Feb, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__caracas = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Dec, 9, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-270,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$May, 1, 150, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__cayenne = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__panama = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__cayman = $justinmimbs$timezone_data$TimeZone$america__panama;
var $justinmimbs$timezone_data$TimeZone$america__chicago = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__chihuahua = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Apr, 5, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $elm$time$Time$Sat = {$: 'Sat'};
var $justinmimbs$timezone_data$TimeZone$rules_CR = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Jun,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1992,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sat, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__costa_rica = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_CR))));
};
var $justinmimbs$timezone_data$TimeZone$america__creston = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__cuiaba = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2003, $elm$time$Time$Sep, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil))));
};
var $justinmimbs$timezone_data$TimeZone$america__danmarkshavn = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__dawson = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Oct, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Vanc = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1946,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1962,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__dawson_creek = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Vanc)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Aug, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__denver = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__detroit = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Apr, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__dominica = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$rules_Edm = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__edmonton = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Edm)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1987, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__eirunepe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Sep, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Sep, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Jun, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2013, $elm$time$Time$Nov, 10, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Salv = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__el_salvador = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Salv))));
};
var $justinmimbs$timezone_data$TimeZone$america__fort_nelson = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Vanc)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1987, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Mar, 8, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__fortaleza = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Halifax = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1962,
		1973,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1962,
		1973,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__glace_bay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Halifax)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__godthab = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_StJohns = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1951,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1960,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		120),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2011,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2010,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__goose_bay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_StJohns)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Nov, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__grand_turk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Nov, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Mar, 11, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__grenada = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__guadeloupe = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$rules_Guat = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__guatemala = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Guat))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Ecuador = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__guayaquil = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Ecuador))));
};
var $justinmimbs$timezone_data$TimeZone$america__guyana = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-225,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Jul, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__halifax = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Halifax)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Cuba = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1977,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1971,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1974,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1990,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1985,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1989,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1997,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1995,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1999,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		2003,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2003,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2010,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2010,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__havana = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Cuba))));
};
var $justinmimbs$timezone_data$TimeZone$america__hermosillo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__indianapolis = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__knox = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__marengo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Oct, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__petersburg = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Nov, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__tell_city = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__vevay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__vincennes = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Nov, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__indiana__winamac = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Mar, 11, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__inuvik = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Apr, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__iqaluit = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__jamaica = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1984, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__juneau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__kentucky__louisville = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Oct, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__kentucky__monticello = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__kralendijk = $justinmimbs$timezone_data$TimeZone$america__curacao;
var $justinmimbs$timezone_data$TimeZone$america__la_paz = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Peru = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1987,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1987,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__lima = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Peru))));
};
var $justinmimbs$timezone_data$TimeZone$america__los_angeles = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__lower_princes = $justinmimbs$timezone_data$TimeZone$america__curacao;
var $justinmimbs$timezone_data$TimeZone$america__maceio = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Oct, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Sep, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $elm$time$Time$Mon = {$: 'Mon'};
var $justinmimbs$timezone_data$TimeZone$rules_Nic = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Jun,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Mon, 23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__managua = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Feb, 16, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Nic)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 240, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Sep, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Nic))));
};
var $justinmimbs$timezone_data$TimeZone$america__manaus = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Sep, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Sep, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__marigot = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__martinique = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 6, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Sep, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__matamoros = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__mazatlan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $justinmimbs$timezone_data$TimeZone$america__menominee = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Apr, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__merida = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Dec, 23, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Dec, 2, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $justinmimbs$timezone_data$TimeZone$america__metlakatla = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Nov, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Nov, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2019, $elm$time$Time$Mar, 10, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__mexico_city = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Sep, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Feb, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $justinmimbs$timezone_data$TimeZone$america__miquelon = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1987, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Moncton = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1946,
		1972,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1957,
		1972,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__moncton = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Moncton)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Moncton)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__monterrey = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Uruguay = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		90),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1979,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1991,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1992,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2015,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2014,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__montevideo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Uruguay)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Uruguay)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Uruguay)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Mar, 10, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Uruguay)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Dec, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Uruguay))));
};
var $justinmimbs$timezone_data$TimeZone$america__montserrat = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$rules_Bahamas = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1964,
		1975,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1964,
		1975,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__nassau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Bahamas)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__new_york = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__nipigon = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__nome = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__noronha = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__north_dakota__beulah = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Nov, 7, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__north_dakota__center = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Oct, 25, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__north_dakota__new_salem = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2003, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__ojinaga = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Apr, 5, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__pangnirtung = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Apr, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__paramaribo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-210,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1984, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__phoenix = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Haiti = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1987,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1987,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1997,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1997,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2015,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2015,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__port_au_prince = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Haiti))));
};
var $justinmimbs$timezone_data$TimeZone$america__porto_velho = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__puerto_rico = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Chile = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1972,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1986,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1987,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1990,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1989,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1996,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1997,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2010,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2007,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Aug,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2014,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2014,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2018,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2018,
		$elm$time$Time$Aug,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2019,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2019,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__punta_arenas = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chile)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Dec, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__rainy_river = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__rankin_inlet = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Apr, 1, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__recife = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Sep, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__regina = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__resolute = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Apr, 1, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Mar, 11, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__rio_branco = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Jun, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2013, $elm$time$Time$Nov, 10, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__santarem = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Sep, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Jun, 24, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__santiago = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chile))));
};
var $justinmimbs$timezone_data$TimeZone$rules_DR = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1973,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1974,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__santo_domingo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_DR)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Oct, 27, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Oct, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Dec, 3, 60, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$america__sao_paulo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Brazil))));
};
var $justinmimbs$timezone_data$TimeZone$rules_C_Eur = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__scoresbysund = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_C_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Mar, 29, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$america__sitka = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Oct, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__st_barthelemy = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__st_johns = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-210,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_StJohns)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Nov, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-210,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__st_kitts = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__st_lucia = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__st_thomas = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__st_vincent = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__swift_current = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Apr, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Hond = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Aug,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Mon, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__tegucigalpa = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Hond))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Thule = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1992,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1992,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__thule = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Thule))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Toronto = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1950,
		1973,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1957,
		1973,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$america__thunder_bay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1970, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Toronto)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__tijuana = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Feb, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mexico)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__toronto = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Toronto)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__tortola = $justinmimbs$timezone_data$TimeZone$america__port_of_spain;
var $justinmimbs$timezone_data$TimeZone$america__vancouver = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Vanc)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1987, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__whitehorse = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Winn = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1966,
		1986,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1966,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2005,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$america__winnipeg = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Winn)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$america__yakutat = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Nov, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$america__yellowknife = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NT_YK)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__casey = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2009, $elm$time$Time$Oct, 18, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 5, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Oct, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Feb, 21, 1020, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Oct, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Mar, 11, 240, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__davis = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2009, $elm$time$Time$Oct, 18, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 10, 1200, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Oct, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Feb, 21, 1200, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__dumontdurville = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AT = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1968,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1971,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1981,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1983,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1986,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1990,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1990,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1999,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$antarctica__macquarie = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AT)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Apr, 4, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__mawson = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2009, $elm$time$Time$Oct, 18, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_NZ = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1988,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1989,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		2006,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		2007,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__auckland = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NZ))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__mcmurdo = $justinmimbs$timezone_data$TimeZone$pacific__auckland;
var $justinmimbs$timezone_data$TimeZone$antarctica__palmer = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Arg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chile)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Dec, 4, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__rothera = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Dec, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__syowa = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Troll = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		120),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$antarctica__troll = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2005, $elm$time$Time$Feb, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Troll))));
};
var $justinmimbs$timezone_data$TimeZone$antarctica__vostok = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__oslo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$arctic__longyearbyen = $justinmimbs$timezone_data$TimeZone$europe__oslo;
var $justinmimbs$timezone_data$TimeZone$asia__riyadh = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__aden = $justinmimbs$timezone_data$TimeZone$asia__riyadh;
var $justinmimbs$timezone_data$TimeZone$rules_RussiaAsia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		2010,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2010,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__almaty = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Jordan = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1975,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1988,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1990,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1993,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1998,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		1998,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2002,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2001,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2012,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2003,
		2003,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2011,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__amman = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Jordan))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Russia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		2010,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2010,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__anadyr = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						780,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__aqtau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Sep, 25, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__aqtobe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__ashgabat = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__atyrau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Mar, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Iraq = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1984,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1990,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1990,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		2007,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		2007,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__baghdad = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Iraq))));
};
var $justinmimbs$timezone_data$TimeZone$asia__qatar = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1972, $elm$time$Time$Jun, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__bahrain = $justinmimbs$timezone_data$TimeZone$asia__qatar;
var $justinmimbs$timezone_data$TimeZone$rules_Azer = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		2015,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		2015,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		300,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_EUAsia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__baku = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Sep, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EUAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Azer))));
};
var $justinmimbs$timezone_data$TimeZone$asia__bangkok = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__barnaul = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$May, 28, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Lebanon = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1987,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1991,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1992,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1998,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__beirut = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Lebanon))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Kyrgyz = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1996,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1996,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		150,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		2004,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		150,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__bishkek = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Aug, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Kyrgyz)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2005, $elm$time$Time$Aug, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__brunei = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__chita = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Mongol = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1998,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1998,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2001,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2006,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2006,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2016,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2016,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__choibalsan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mongol)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Mar, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mongol))));
};
var $justinmimbs$timezone_data$TimeZone$asia__colombo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						330,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$May, 25, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						390,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Oct, 26, 30, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2006, $elm$time$Time$Apr, 15, 30, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				330,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Syria = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1966,
		1976,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1967,
		1978,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1984,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1992,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1996,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1998,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Mon),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2006,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2011,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__damascus = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Syria))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Dhaka = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__dhaka = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2009, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Dhaka))));
};
var $justinmimbs$timezone_data$TimeZone$asia__dili = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$May, 3, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Sep, 17, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__dubai = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__dushanbe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Sep, 9, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Cyprus = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1997,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1998,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__famagusta = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Cyprus)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Sep, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EUAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Sep, 8, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2017, $elm$time$Time$Oct, 29, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EUAsia))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Palestine = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2005,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2003,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2007,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Thu, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2009,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2014,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Thu),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2013,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2015,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		2015,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Fri),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sat, 22),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_Zion = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1987,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1988,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1990,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		1995,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1998,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(14),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2001,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2001,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2002,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2002,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2003,
		2003,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2003,
		2003,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(9),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2010,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 26),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 26),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Fri, 23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__gaza = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Zion)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Jordan)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Palestine)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Aug, 29, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2008, $elm$time$Time$Sep, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Palestine)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 27, 1, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Palestine)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Aug, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2012, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Palestine))));
};
var $justinmimbs$timezone_data$TimeZone$asia__hebron = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Zion)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Jordan)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Palestine))));
};
var $justinmimbs$timezone_data$TimeZone$asia__ho_chi_minh = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Jun, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_HK = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1965,
		1976,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1965,
		1976,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__hong_kong = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_HK))));
};
var $justinmimbs$timezone_data$TimeZone$asia__hovd = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mongol))));
};
var $justinmimbs$timezone_data$TimeZone$asia__irkutsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Turkey = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1972,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1972,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		300,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1976,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1978,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1982,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Mon, 11),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1982,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1993,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2006,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2006,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__istanbul = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Turkey)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Oct, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Turkey)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1985, $elm$time$Time$Apr, 20, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Turkey)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2007, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 28, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Mar, 30, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Mar, 31, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Oct, 25, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Nov, 8, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Sep, 7, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__istanbul = $justinmimbs$timezone_data$TimeZone$europe__istanbul;
var $justinmimbs$timezone_data$TimeZone$asia__jakarta = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__jayapura = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__jerusalem = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Zion))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kabul = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				270,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kamchatka = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Pakistan = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2002,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2002,
		2002,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2009,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(15),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__karachi = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Mar, 26, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Pakistan))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kathmandu = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						330,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1986, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				345,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__khandyga = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kolkata = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				330,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__krasnoyarsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kuala_lumpur = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						450,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kuching = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__kuwait = $justinmimbs$timezone_data$TimeZone$asia__riyadh;
var $justinmimbs$timezone_data$TimeZone$rules_Macau = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1965,
		1973,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1967,
		1976,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1976,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(13),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		210,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__macau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Macau))));
};
var $justinmimbs$timezone_data$TimeZone$asia__magadan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Apr, 24, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__makassar = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Phil = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__manila = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Phil))));
};
var $justinmimbs$timezone_data$TimeZone$asia__muscat = $justinmimbs$timezone_data$TimeZone$asia__dubai;
var $justinmimbs$timezone_data$TimeZone$asia__nicosia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Cyprus)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Sep, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EUAsia))));
};
var $justinmimbs$timezone_data$TimeZone$asia__novokuznetsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__novosibirsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$May, 23, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Jul, 24, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__omsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__oral = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__phnom_penh = $justinmimbs$timezone_data$TimeZone$asia__bangkok;
var $justinmimbs$timezone_data$TimeZone$asia__pontianak = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__pyongyang = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Aug, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						510,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$May, 4, 1410, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__qostanay = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__qyzylorda = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Sep, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Dec, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__sakhalin = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Mar, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__samarkand = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_ROK = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1988,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__seoul = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_ROK))));
};
var $justinmimbs$timezone_data$TimeZone$rules_PRC = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1991,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 11),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1991,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 11),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__shanghai = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_PRC))));
};
var $justinmimbs$timezone_data$TimeZone$asia__singapore = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						450,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__srednekolymsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Taiwan = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1975,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1975,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Jul,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__taipei = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Taiwan))));
};
var $justinmimbs$timezone_data$TimeZone$asia__tashkent = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_E_EurAsia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__tbilisi = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_EurAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Sep, 25, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_EurAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Oct, 27, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Mar, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_EurAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2004, $elm$time$Time$Jun, 27, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2005, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Iran = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1980,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1995,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1999,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1999,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2003,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2003,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2004,
		2004,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2005,
		2005,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2011,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2011,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2012,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2015,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2013,
		2015,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2016,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2016,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		2019,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		2019,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2020,
		2020,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2020,
		2020,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2021,
		2023,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2021,
		2023,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2024,
		2024,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2024,
		2024,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2025,
		2027,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2025,
		2027,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2028,
		2029,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2028,
		2029,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2030,
		2031,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2030,
		2031,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2032,
		2033,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2032,
		2033,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2034,
		2035,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2034,
		2035,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2036,
		2037,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2036,
		2037,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		1440,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__tehran = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						210,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Nov, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Iran)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				210,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Iran))));
};
var $justinmimbs$timezone_data$TimeZone$asia__thimphu = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						330,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1987, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__tokyo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__tomsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$May, 1, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$May, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__ulaanbaatar = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						420,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mongol))));
};
var $justinmimbs$timezone_data$TimeZone$asia__urumqi = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__ust_nera = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Apr, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Sep, 13, 0, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__vientiane = $justinmimbs$timezone_data$TimeZone$asia__bangkok;
var $justinmimbs$timezone_data$TimeZone$asia__vladivostok = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__yakutsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						480,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						540,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__yangon = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				390,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$asia__yekaterinburg = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						360,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Armenia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$asia__yerevan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Sep, 24, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_RussiaAsia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Armenia))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Port = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1979,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1982,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1982,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_W_Eur = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$atlantic__azores = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Port)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Sep, 25, 60, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_W_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Sep, 27, 60, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Mar, 28, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__bermuda = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Apr, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Canada)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_US))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__canary = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Apr, 6, 0, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Sep, 28, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__cape_verde = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Nov, 25, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-60,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__faroe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__madeira = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Port)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Sep, 25, 60, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__reykjavik = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__south_georgia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$atlantic__st_helena = $justinmimbs$timezone_data$TimeZone$africa__abidjan;
var $justinmimbs$timezone_data$TimeZone$rules_Falk = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1985,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1984,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		2000,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 9),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		2000,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2010,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2010,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$atlantic__stanley = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Falk)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Falk)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1985, $elm$time$Time$Sep, 15, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Falk)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Sep, 5, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AS = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		2007,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1985,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1990,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1993,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1994,
		1994,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(20),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__adelaide = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						570,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				570,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AS))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AQ = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1991,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1992,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__brisbane = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AQ))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AN = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1981,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1985,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1989,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1999,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1995,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2007,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__broken_hill = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						570,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						570,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AN)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				570,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AS))));
};
var $justinmimbs$timezone_data$TimeZone$australia__currie = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jul, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AT))));
};
var $justinmimbs$timezone_data$TimeZone$australia__darwin = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				570,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AW = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1984,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1991,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(17),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2009,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2008,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__eucla = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				525,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AW))));
};
var $justinmimbs$timezone_data$TimeZone$australia__hobart = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AT))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Holiday = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1993,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1993,
		1994,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__lindeman = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AQ)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jul, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Holiday))));
};
var $justinmimbs$timezone_data$TimeZone$rules_LH = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1984,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1985,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1989,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1986,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1987,
		1999,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1995,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2007,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__lord_howe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Mar, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						630,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_LH)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1985, $elm$time$Time$Jul, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				630,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_LH))));
};
var $justinmimbs$timezone_data$TimeZone$rules_AV = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1985,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1985,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1990,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1986,
		1987,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1988,
		1999,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1994,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1995,
		2005,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2007,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2006,
		2006,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		2007,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$australia__melbourne = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AV))));
};
var $justinmimbs$timezone_data$TimeZone$australia__perth = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				480,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AW))));
};
var $justinmimbs$timezone_data$TimeZone$australia__sydney = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_AN))));
};
var $justinmimbs$timezone_data$TimeZone$europe__amsterdam = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__andorra = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1985, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__astrakhan = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Greece = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(11),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1978,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		540,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__athens = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Greece)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__belgrade = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Nov, 27, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__berlin = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__prague = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__bratislava = $justinmimbs$timezone_data$TimeZone$europe__prague;
var $justinmimbs$timezone_data$TimeZone$europe__brussels = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_E_Eur = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_Romania = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1993,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1991,
		1993,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__bucharest = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Romania)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_C_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Romania)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Hungary = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__budapest = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Hungary)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Sep, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__zurich = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__busingen = $justinmimbs$timezone_data$TimeZone$europe__zurich;
var $justinmimbs$timezone_data$TimeZone$rules_Moldova = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__chisinau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$May, 6, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Moldova))));
};
var $justinmimbs$timezone_data$TimeZone$europe__copenhagen = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Eire = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1980,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1980,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1989,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1995,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		-60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		-60)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__dublin = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Eire))));
};
var $justinmimbs$timezone_data$TimeZone$europe__gibraltar = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_GB_Eire = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1980,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1980,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1995,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1989,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		1995,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__london = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1971, $elm$time$Time$Oct, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_GB_Eire)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__guernsey = $justinmimbs$timezone_data$TimeZone$europe__london;
var $justinmimbs$timezone_data$TimeZone$rules_Finland = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1982,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1982,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__helsinki = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Finland)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__isle_of_man = $justinmimbs$timezone_data$TimeZone$europe__london;
var $justinmimbs$timezone_data$TimeZone$europe__jersey = $justinmimbs$timezone_data$TimeZone$europe__london;
var $justinmimbs$timezone_data$TimeZone$europe__kaliningrad = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__kiev = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jul, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Sep, 29, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__kirov = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__lisbon = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1976, $elm$time$Time$Sep, 26, 60, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Port)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1983, $elm$time$Time$Sep, 25, 60, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						0,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_W_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Sep, 27, 60, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Mar, 31, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				0,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__ljubljana = $justinmimbs$timezone_data$TimeZone$europe__belgrade;
var $justinmimbs$timezone_data$TimeZone$europe__luxembourg = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Spain = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1975,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sat, 12),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1975,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__madrid = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Spain)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Italy = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1967,
		1969,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1970,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1972,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1971,
		1971,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1972,
		1972,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1974,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1979,
		$elm$time$Time$May,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 22),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_Malta = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1979,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1980,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__malta = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Italy)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1973, $elm$time$Time$Mar, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Malta)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__mariehamn = $justinmimbs$timezone_data$TimeZone$europe__helsinki;
var $justinmimbs$timezone_data$TimeZone$europe__minsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_France = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__monaco = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_France)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__moscow = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__nicosia = $justinmimbs$timezone_data$TimeZone$asia__nicosia;
var $justinmimbs$timezone_data$TimeZone$europe__paris = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_France)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__podgorica = $justinmimbs$timezone_data$TimeZone$europe__belgrade;
var $justinmimbs$timezone_data$TimeZone$rules_Latvia = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1996,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1996,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__riga = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Sep, 24, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Latvia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Feb, 29, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2001, $elm$time$Time$Jan, 2, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__rome = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Italy)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__samara = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Sep, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Oct, 20, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2010, $elm$time$Time$Mar, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__san_marino = $justinmimbs$timezone_data$TimeZone$europe__rome;
var $justinmimbs$timezone_data$TimeZone$europe__sarajevo = $justinmimbs$timezone_data$TimeZone$europe__belgrade;
var $justinmimbs$timezone_data$TimeZone$europe__saratov = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Dec, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__simferopol = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jul, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$May, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Mar, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Oct, 27, 180, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Mar, 30, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Mar, 30, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				180,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__skopje = $justinmimbs$timezone_data$TimeZone$europe__belgrade;
var $justinmimbs$timezone_data$TimeZone$rules_Bulg = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1982,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sat, 1),
		1380,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1981,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__sofia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Mar, 31, 1380, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Bulg)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Sep, 26, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_C_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1997, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__stockholm = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1980, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__tallinn = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Sep, 24, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_C_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Sep, 22, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 31, 240, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2002, $elm$time$Time$Feb, 21, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Albania = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(8),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(5),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1979,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(30),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(4),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1981,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		1981,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(3),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(18),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1984,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__tirane = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Albania)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1984, $elm$time$Time$Jul, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__ulyanovsk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 19, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2016, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__uzhgorod = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1990, $elm$time$Time$Jul, 1, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 180, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__vaduz = $justinmimbs$timezone_data$TimeZone$europe__zurich;
var $justinmimbs$timezone_data$TimeZone$europe__vatican = $justinmimbs$timezone_data$TimeZone$europe__rome;
var $justinmimbs$timezone_data$TimeZone$rules_Austria = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(6),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1980,
		1980,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__vienna = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Austria)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1981, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__vilnius = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1989, $elm$time$Time$Mar, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Sep, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_C_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Mar, 29, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Oct, 31, 60, $justinmimbs$timezone_data$TimeZone$Specification$Universal)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2003, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__volgograd = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1992, $elm$time$Time$Mar, 29, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Mar, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						240,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Oct, 26, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2018, $elm$time$Time$Oct, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$Standard))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$europe__warsaw = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_W_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1988, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$europe__zagreb = $justinmimbs$timezone_data$TimeZone$europe__belgrade;
var $justinmimbs$timezone_data$TimeZone$europe__zaporozhye = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						180,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Russia)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1991, $elm$time$Time$Mar, 31, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						120,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_E_Eur)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1995, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				120,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $justinmimbs$timezone_data$TimeZone$indian__antananarivo = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$indian__chagos = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1996, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				360,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$indian__christmas = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				420,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$indian__cocos = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				390,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$indian__comoro = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$indian__kerguelen = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$indian__mahe = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$indian__maldives = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				300,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Mauritius = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1982,
		1982,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(10),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(21),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		2008,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$indian__mauritius = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Mauritius))));
};
var $justinmimbs$timezone_data$TimeZone$indian__mayotte = $justinmimbs$timezone_data$TimeZone$africa__nairobi;
var $justinmimbs$timezone_data$TimeZone$indian__reunion = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				240,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_WS = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sat, 1),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sat),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		240,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__apia = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-660,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_WS)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Dec, 29, 1440, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				780,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_WS))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__bougainville = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2014, $elm$time$Time$Dec, 28, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Chatham = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1975,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1975,
		1988,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1989,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1989,
		1989,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 8),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		2006,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1990,
		2007,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2007,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2008,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		165,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__chatham = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				765,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chatham))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__chuuk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__easter = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-420,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chile)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1982, $elm$time$Time$Mar, 14, 180, $justinmimbs$timezone_data$TimeZone$Specification$Universal))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Chile))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Vanuatu = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1983,
		1983,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(25),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1991,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1984,
		1984,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1985,
		1991,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1993,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1992,
		1992,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 23),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__efate = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Vanuatu))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__enderbury = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Dec, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				780,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__fakaofo = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-660,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2011, $elm$time$Time$Dec, 30, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				780,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Fiji = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1998,
		1999,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		2000,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2009,
		2009,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(29),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2010,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2010,
		2013,
		$elm$time$Time$Oct,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 21),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2011,
		2011,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2012,
		2013,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 18),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		2014,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 18),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2014,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2015,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 13),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__fiji = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Fiji))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__funafuti = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__galapagos = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-300,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1986, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-360,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Ecuador))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__gambier = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__guadalcanal = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Guam = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		1,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Jun,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1969,
		1969,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(31),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1971,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1970,
		1971,
		$elm$time$Time$Sep,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1973,
		1973,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(16),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1974,
		1974,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$May,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(22),
		121,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Apr,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(24),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Aug,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__guam = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						600,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Guam)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2000, $elm$time$Time$Dec, 23, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__honolulu = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__kiritimati = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-640,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-600,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1994, $elm$time$Time$Dec, 31, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				840,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__kosrae = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__kwajalein = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-720,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1993, $elm$time$Time$Aug, 20, 1440, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__majuro = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__marquesas = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-570,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__pago_pago = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__midway = $justinmimbs$timezone_data$TimeZone$pacific__pago_pago;
var $justinmimbs$timezone_data$TimeZone$pacific__nauru = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						690,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1979, $elm$time$Time$Feb, 10, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__niue = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-690,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Oct, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__norfolk = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						690,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1974, $elm$time$Time$Oct, 27, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						690,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(60)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1975, $elm$time$Time$Mar, 2, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock)),
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						690,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 2015, $elm$time$Time$Oct, 4, 120, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_NC = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1978,
		$elm$time$Time$Dec,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1979,
		$elm$time$Time$Feb,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(27),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		1996,
		$elm$time$Time$Dec,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1997,
		1997,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(2),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__noumea = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_NC))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__palau = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				540,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__pitcairn = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-510,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1998, $elm$time$Time$Apr, 27, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-480,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__pohnpei = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				660,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__port_moresby = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Cook = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Nov,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(12),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1991,
		$elm$time$Time$Mar,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1990,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		0,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		30)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__rarotonga = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						-630,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1978, $elm$time$Time$Nov, 12, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-600,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Cook))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__saipan = $justinmimbs$timezone_data$TimeZone$pacific__guam;
var $justinmimbs$timezone_data$TimeZone$pacific__tahiti = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				-600,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__tarawa = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$rules_Tonga = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1999,
		1999,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(7),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2000,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(19),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$Standard,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2000,
		2001,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2001,
		2002,
		$elm$time$Time$Jan,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2016,
		2016,
		$elm$time$Time$Nov,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 1),
		120,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		2017,
		2017,
		$elm$time$Time$Jan,
		A2($justinmimbs$timezone_data$TimeZone$Specification$First, $elm$time$Time$Sun, 15),
		180,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$pacific__tongatapu = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						780,
						$justinmimbs$timezone_data$TimeZone$Specification$Save(0)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1999, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				780,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_Tonga))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__wake = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$pacific__wallis = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_Nil,
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				720,
				$justinmimbs$timezone_data$TimeZone$Specification$Save(0))));
};
var $justinmimbs$timezone_data$TimeZone$zones = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('Africa/Abidjan', $justinmimbs$timezone_data$TimeZone$africa__abidjan),
			_Utils_Tuple2('Africa/Accra', $justinmimbs$timezone_data$TimeZone$africa__accra),
			_Utils_Tuple2('Africa/Addis_Ababa', $justinmimbs$timezone_data$TimeZone$africa__addis_ababa),
			_Utils_Tuple2('Africa/Algiers', $justinmimbs$timezone_data$TimeZone$africa__algiers),
			_Utils_Tuple2('Africa/Asmara', $justinmimbs$timezone_data$TimeZone$africa__asmara),
			_Utils_Tuple2('Africa/Bamako', $justinmimbs$timezone_data$TimeZone$africa__bamako),
			_Utils_Tuple2('Africa/Bangui', $justinmimbs$timezone_data$TimeZone$africa__bangui),
			_Utils_Tuple2('Africa/Banjul', $justinmimbs$timezone_data$TimeZone$africa__banjul),
			_Utils_Tuple2('Africa/Bissau', $justinmimbs$timezone_data$TimeZone$africa__bissau),
			_Utils_Tuple2('Africa/Blantyre', $justinmimbs$timezone_data$TimeZone$africa__blantyre),
			_Utils_Tuple2('Africa/Brazzaville', $justinmimbs$timezone_data$TimeZone$africa__brazzaville),
			_Utils_Tuple2('Africa/Bujumbura', $justinmimbs$timezone_data$TimeZone$africa__bujumbura),
			_Utils_Tuple2('Africa/Cairo', $justinmimbs$timezone_data$TimeZone$africa__cairo),
			_Utils_Tuple2('Africa/Casablanca', $justinmimbs$timezone_data$TimeZone$africa__casablanca),
			_Utils_Tuple2('Africa/Ceuta', $justinmimbs$timezone_data$TimeZone$africa__ceuta),
			_Utils_Tuple2('Africa/Conakry', $justinmimbs$timezone_data$TimeZone$africa__conakry),
			_Utils_Tuple2('Africa/Dakar', $justinmimbs$timezone_data$TimeZone$africa__dakar),
			_Utils_Tuple2('Africa/Dar_es_Salaam', $justinmimbs$timezone_data$TimeZone$africa__dar_es_salaam),
			_Utils_Tuple2('Africa/Djibouti', $justinmimbs$timezone_data$TimeZone$africa__djibouti),
			_Utils_Tuple2('Africa/Douala', $justinmimbs$timezone_data$TimeZone$africa__douala),
			_Utils_Tuple2('Africa/El_Aaiun', $justinmimbs$timezone_data$TimeZone$africa__el_aaiun),
			_Utils_Tuple2('Africa/Freetown', $justinmimbs$timezone_data$TimeZone$africa__freetown),
			_Utils_Tuple2('Africa/Gaborone', $justinmimbs$timezone_data$TimeZone$africa__gaborone),
			_Utils_Tuple2('Africa/Harare', $justinmimbs$timezone_data$TimeZone$africa__harare),
			_Utils_Tuple2('Africa/Johannesburg', $justinmimbs$timezone_data$TimeZone$africa__johannesburg),
			_Utils_Tuple2('Africa/Juba', $justinmimbs$timezone_data$TimeZone$africa__juba),
			_Utils_Tuple2('Africa/Kampala', $justinmimbs$timezone_data$TimeZone$africa__kampala),
			_Utils_Tuple2('Africa/Khartoum', $justinmimbs$timezone_data$TimeZone$africa__khartoum),
			_Utils_Tuple2('Africa/Kigali', $justinmimbs$timezone_data$TimeZone$africa__kigali),
			_Utils_Tuple2('Africa/Kinshasa', $justinmimbs$timezone_data$TimeZone$africa__kinshasa),
			_Utils_Tuple2('Africa/Lagos', $justinmimbs$timezone_data$TimeZone$africa__lagos),
			_Utils_Tuple2('Africa/Libreville', $justinmimbs$timezone_data$TimeZone$africa__libreville),
			_Utils_Tuple2('Africa/Lome', $justinmimbs$timezone_data$TimeZone$africa__lome),
			_Utils_Tuple2('Africa/Luanda', $justinmimbs$timezone_data$TimeZone$africa__luanda),
			_Utils_Tuple2('Africa/Lubumbashi', $justinmimbs$timezone_data$TimeZone$africa__lubumbashi),
			_Utils_Tuple2('Africa/Lusaka', $justinmimbs$timezone_data$TimeZone$africa__lusaka),
			_Utils_Tuple2('Africa/Malabo', $justinmimbs$timezone_data$TimeZone$africa__malabo),
			_Utils_Tuple2('Africa/Maputo', $justinmimbs$timezone_data$TimeZone$africa__maputo),
			_Utils_Tuple2('Africa/Maseru', $justinmimbs$timezone_data$TimeZone$africa__maseru),
			_Utils_Tuple2('Africa/Mbabane', $justinmimbs$timezone_data$TimeZone$africa__mbabane),
			_Utils_Tuple2('Africa/Mogadishu', $justinmimbs$timezone_data$TimeZone$africa__mogadishu),
			_Utils_Tuple2('Africa/Monrovia', $justinmimbs$timezone_data$TimeZone$africa__monrovia),
			_Utils_Tuple2('Africa/Nairobi', $justinmimbs$timezone_data$TimeZone$africa__nairobi),
			_Utils_Tuple2('Africa/Ndjamena', $justinmimbs$timezone_data$TimeZone$africa__ndjamena),
			_Utils_Tuple2('Africa/Niamey', $justinmimbs$timezone_data$TimeZone$africa__niamey),
			_Utils_Tuple2('Africa/Nouakchott', $justinmimbs$timezone_data$TimeZone$africa__nouakchott),
			_Utils_Tuple2('Africa/Ouagadougou', $justinmimbs$timezone_data$TimeZone$africa__ouagadougou),
			_Utils_Tuple2('Africa/Porto-Novo', $justinmimbs$timezone_data$TimeZone$africa__porto_novo),
			_Utils_Tuple2('Africa/Sao_Tome', $justinmimbs$timezone_data$TimeZone$africa__sao_tome),
			_Utils_Tuple2('Africa/Tripoli', $justinmimbs$timezone_data$TimeZone$africa__tripoli),
			_Utils_Tuple2('Africa/Tunis', $justinmimbs$timezone_data$TimeZone$africa__tunis),
			_Utils_Tuple2('Africa/Windhoek', $justinmimbs$timezone_data$TimeZone$africa__windhoek),
			_Utils_Tuple2('America/Adak', $justinmimbs$timezone_data$TimeZone$america__adak),
			_Utils_Tuple2('America/Anchorage', $justinmimbs$timezone_data$TimeZone$america__anchorage),
			_Utils_Tuple2('America/Anguilla', $justinmimbs$timezone_data$TimeZone$america__anguilla),
			_Utils_Tuple2('America/Antigua', $justinmimbs$timezone_data$TimeZone$america__antigua),
			_Utils_Tuple2('America/Araguaina', $justinmimbs$timezone_data$TimeZone$america__araguaina),
			_Utils_Tuple2('America/Argentina/Buenos_Aires', $justinmimbs$timezone_data$TimeZone$america__argentina__buenos_aires),
			_Utils_Tuple2('America/Argentina/Catamarca', $justinmimbs$timezone_data$TimeZone$america__argentina__catamarca),
			_Utils_Tuple2('America/Argentina/Cordoba', $justinmimbs$timezone_data$TimeZone$america__argentina__cordoba),
			_Utils_Tuple2('America/Argentina/Jujuy', $justinmimbs$timezone_data$TimeZone$america__argentina__jujuy),
			_Utils_Tuple2('America/Argentina/La_Rioja', $justinmimbs$timezone_data$TimeZone$america__argentina__la_rioja),
			_Utils_Tuple2('America/Argentina/Mendoza', $justinmimbs$timezone_data$TimeZone$america__argentina__mendoza),
			_Utils_Tuple2('America/Argentina/Rio_Gallegos', $justinmimbs$timezone_data$TimeZone$america__argentina__rio_gallegos),
			_Utils_Tuple2('America/Argentina/Salta', $justinmimbs$timezone_data$TimeZone$america__argentina__salta),
			_Utils_Tuple2('America/Argentina/San_Juan', $justinmimbs$timezone_data$TimeZone$america__argentina__san_juan),
			_Utils_Tuple2('America/Argentina/San_Luis', $justinmimbs$timezone_data$TimeZone$america__argentina__san_luis),
			_Utils_Tuple2('America/Argentina/Tucuman', $justinmimbs$timezone_data$TimeZone$america__argentina__tucuman),
			_Utils_Tuple2('America/Argentina/Ushuaia', $justinmimbs$timezone_data$TimeZone$america__argentina__ushuaia),
			_Utils_Tuple2('America/Aruba', $justinmimbs$timezone_data$TimeZone$america__aruba),
			_Utils_Tuple2('America/Asuncion', $justinmimbs$timezone_data$TimeZone$america__asuncion),
			_Utils_Tuple2('America/Atikokan', $justinmimbs$timezone_data$TimeZone$america__atikokan),
			_Utils_Tuple2('America/Bahia', $justinmimbs$timezone_data$TimeZone$america__bahia),
			_Utils_Tuple2('America/Bahia_Banderas', $justinmimbs$timezone_data$TimeZone$america__bahia_banderas),
			_Utils_Tuple2('America/Barbados', $justinmimbs$timezone_data$TimeZone$america__barbados),
			_Utils_Tuple2('America/Belem', $justinmimbs$timezone_data$TimeZone$america__belem),
			_Utils_Tuple2('America/Belize', $justinmimbs$timezone_data$TimeZone$america__belize),
			_Utils_Tuple2('America/Blanc-Sablon', $justinmimbs$timezone_data$TimeZone$america__blanc_sablon),
			_Utils_Tuple2('America/Boa_Vista', $justinmimbs$timezone_data$TimeZone$america__boa_vista),
			_Utils_Tuple2('America/Bogota', $justinmimbs$timezone_data$TimeZone$america__bogota),
			_Utils_Tuple2('America/Boise', $justinmimbs$timezone_data$TimeZone$america__boise),
			_Utils_Tuple2('America/Cambridge_Bay', $justinmimbs$timezone_data$TimeZone$america__cambridge_bay),
			_Utils_Tuple2('America/Campo_Grande', $justinmimbs$timezone_data$TimeZone$america__campo_grande),
			_Utils_Tuple2('America/Cancun', $justinmimbs$timezone_data$TimeZone$america__cancun),
			_Utils_Tuple2('America/Caracas', $justinmimbs$timezone_data$TimeZone$america__caracas),
			_Utils_Tuple2('America/Cayenne', $justinmimbs$timezone_data$TimeZone$america__cayenne),
			_Utils_Tuple2('America/Cayman', $justinmimbs$timezone_data$TimeZone$america__cayman),
			_Utils_Tuple2('America/Chicago', $justinmimbs$timezone_data$TimeZone$america__chicago),
			_Utils_Tuple2('America/Chihuahua', $justinmimbs$timezone_data$TimeZone$america__chihuahua),
			_Utils_Tuple2('America/Costa_Rica', $justinmimbs$timezone_data$TimeZone$america__costa_rica),
			_Utils_Tuple2('America/Creston', $justinmimbs$timezone_data$TimeZone$america__creston),
			_Utils_Tuple2('America/Cuiaba', $justinmimbs$timezone_data$TimeZone$america__cuiaba),
			_Utils_Tuple2('America/Curacao', $justinmimbs$timezone_data$TimeZone$america__curacao),
			_Utils_Tuple2('America/Danmarkshavn', $justinmimbs$timezone_data$TimeZone$america__danmarkshavn),
			_Utils_Tuple2('America/Dawson', $justinmimbs$timezone_data$TimeZone$america__dawson),
			_Utils_Tuple2('America/Dawson_Creek', $justinmimbs$timezone_data$TimeZone$america__dawson_creek),
			_Utils_Tuple2('America/Denver', $justinmimbs$timezone_data$TimeZone$america__denver),
			_Utils_Tuple2('America/Detroit', $justinmimbs$timezone_data$TimeZone$america__detroit),
			_Utils_Tuple2('America/Dominica', $justinmimbs$timezone_data$TimeZone$america__dominica),
			_Utils_Tuple2('America/Edmonton', $justinmimbs$timezone_data$TimeZone$america__edmonton),
			_Utils_Tuple2('America/Eirunepe', $justinmimbs$timezone_data$TimeZone$america__eirunepe),
			_Utils_Tuple2('America/El_Salvador', $justinmimbs$timezone_data$TimeZone$america__el_salvador),
			_Utils_Tuple2('America/Fort_Nelson', $justinmimbs$timezone_data$TimeZone$america__fort_nelson),
			_Utils_Tuple2('America/Fortaleza', $justinmimbs$timezone_data$TimeZone$america__fortaleza),
			_Utils_Tuple2('America/Glace_Bay', $justinmimbs$timezone_data$TimeZone$america__glace_bay),
			_Utils_Tuple2('America/Godthab', $justinmimbs$timezone_data$TimeZone$america__godthab),
			_Utils_Tuple2('America/Goose_Bay', $justinmimbs$timezone_data$TimeZone$america__goose_bay),
			_Utils_Tuple2('America/Grand_Turk', $justinmimbs$timezone_data$TimeZone$america__grand_turk),
			_Utils_Tuple2('America/Grenada', $justinmimbs$timezone_data$TimeZone$america__grenada),
			_Utils_Tuple2('America/Guadeloupe', $justinmimbs$timezone_data$TimeZone$america__guadeloupe),
			_Utils_Tuple2('America/Guatemala', $justinmimbs$timezone_data$TimeZone$america__guatemala),
			_Utils_Tuple2('America/Guayaquil', $justinmimbs$timezone_data$TimeZone$america__guayaquil),
			_Utils_Tuple2('America/Guyana', $justinmimbs$timezone_data$TimeZone$america__guyana),
			_Utils_Tuple2('America/Halifax', $justinmimbs$timezone_data$TimeZone$america__halifax),
			_Utils_Tuple2('America/Havana', $justinmimbs$timezone_data$TimeZone$america__havana),
			_Utils_Tuple2('America/Hermosillo', $justinmimbs$timezone_data$TimeZone$america__hermosillo),
			_Utils_Tuple2('America/Indiana/Indianapolis', $justinmimbs$timezone_data$TimeZone$america__indiana__indianapolis),
			_Utils_Tuple2('America/Indiana/Knox', $justinmimbs$timezone_data$TimeZone$america__indiana__knox),
			_Utils_Tuple2('America/Indiana/Marengo', $justinmimbs$timezone_data$TimeZone$america__indiana__marengo),
			_Utils_Tuple2('America/Indiana/Petersburg', $justinmimbs$timezone_data$TimeZone$america__indiana__petersburg),
			_Utils_Tuple2('America/Indiana/Tell_City', $justinmimbs$timezone_data$TimeZone$america__indiana__tell_city),
			_Utils_Tuple2('America/Indiana/Vevay', $justinmimbs$timezone_data$TimeZone$america__indiana__vevay),
			_Utils_Tuple2('America/Indiana/Vincennes', $justinmimbs$timezone_data$TimeZone$america__indiana__vincennes),
			_Utils_Tuple2('America/Indiana/Winamac', $justinmimbs$timezone_data$TimeZone$america__indiana__winamac),
			_Utils_Tuple2('America/Inuvik', $justinmimbs$timezone_data$TimeZone$america__inuvik),
			_Utils_Tuple2('America/Iqaluit', $justinmimbs$timezone_data$TimeZone$america__iqaluit),
			_Utils_Tuple2('America/Jamaica', $justinmimbs$timezone_data$TimeZone$america__jamaica),
			_Utils_Tuple2('America/Juneau', $justinmimbs$timezone_data$TimeZone$america__juneau),
			_Utils_Tuple2('America/Kentucky/Louisville', $justinmimbs$timezone_data$TimeZone$america__kentucky__louisville),
			_Utils_Tuple2('America/Kentucky/Monticello', $justinmimbs$timezone_data$TimeZone$america__kentucky__monticello),
			_Utils_Tuple2('America/Kralendijk', $justinmimbs$timezone_data$TimeZone$america__kralendijk),
			_Utils_Tuple2('America/La_Paz', $justinmimbs$timezone_data$TimeZone$america__la_paz),
			_Utils_Tuple2('America/Lima', $justinmimbs$timezone_data$TimeZone$america__lima),
			_Utils_Tuple2('America/Los_Angeles', $justinmimbs$timezone_data$TimeZone$america__los_angeles),
			_Utils_Tuple2('America/Lower_Princes', $justinmimbs$timezone_data$TimeZone$america__lower_princes),
			_Utils_Tuple2('America/Maceio', $justinmimbs$timezone_data$TimeZone$america__maceio),
			_Utils_Tuple2('America/Managua', $justinmimbs$timezone_data$TimeZone$america__managua),
			_Utils_Tuple2('America/Manaus', $justinmimbs$timezone_data$TimeZone$america__manaus),
			_Utils_Tuple2('America/Marigot', $justinmimbs$timezone_data$TimeZone$america__marigot),
			_Utils_Tuple2('America/Martinique', $justinmimbs$timezone_data$TimeZone$america__martinique),
			_Utils_Tuple2('America/Matamoros', $justinmimbs$timezone_data$TimeZone$america__matamoros),
			_Utils_Tuple2('America/Mazatlan', $justinmimbs$timezone_data$TimeZone$america__mazatlan),
			_Utils_Tuple2('America/Menominee', $justinmimbs$timezone_data$TimeZone$america__menominee),
			_Utils_Tuple2('America/Merida', $justinmimbs$timezone_data$TimeZone$america__merida),
			_Utils_Tuple2('America/Metlakatla', $justinmimbs$timezone_data$TimeZone$america__metlakatla),
			_Utils_Tuple2('America/Mexico_City', $justinmimbs$timezone_data$TimeZone$america__mexico_city),
			_Utils_Tuple2('America/Miquelon', $justinmimbs$timezone_data$TimeZone$america__miquelon),
			_Utils_Tuple2('America/Moncton', $justinmimbs$timezone_data$TimeZone$america__moncton),
			_Utils_Tuple2('America/Monterrey', $justinmimbs$timezone_data$TimeZone$america__monterrey),
			_Utils_Tuple2('America/Montevideo', $justinmimbs$timezone_data$TimeZone$america__montevideo),
			_Utils_Tuple2('America/Montserrat', $justinmimbs$timezone_data$TimeZone$america__montserrat),
			_Utils_Tuple2('America/Nassau', $justinmimbs$timezone_data$TimeZone$america__nassau),
			_Utils_Tuple2('America/New_York', $justinmimbs$timezone_data$TimeZone$america__new_york),
			_Utils_Tuple2('America/Nipigon', $justinmimbs$timezone_data$TimeZone$america__nipigon),
			_Utils_Tuple2('America/Nome', $justinmimbs$timezone_data$TimeZone$america__nome),
			_Utils_Tuple2('America/Noronha', $justinmimbs$timezone_data$TimeZone$america__noronha),
			_Utils_Tuple2('America/North_Dakota/Beulah', $justinmimbs$timezone_data$TimeZone$america__north_dakota__beulah),
			_Utils_Tuple2('America/North_Dakota/Center', $justinmimbs$timezone_data$TimeZone$america__north_dakota__center),
			_Utils_Tuple2('America/North_Dakota/New_Salem', $justinmimbs$timezone_data$TimeZone$america__north_dakota__new_salem),
			_Utils_Tuple2('America/Ojinaga', $justinmimbs$timezone_data$TimeZone$america__ojinaga),
			_Utils_Tuple2('America/Panama', $justinmimbs$timezone_data$TimeZone$america__panama),
			_Utils_Tuple2('America/Pangnirtung', $justinmimbs$timezone_data$TimeZone$america__pangnirtung),
			_Utils_Tuple2('America/Paramaribo', $justinmimbs$timezone_data$TimeZone$america__paramaribo),
			_Utils_Tuple2('America/Phoenix', $justinmimbs$timezone_data$TimeZone$america__phoenix),
			_Utils_Tuple2('America/Port-au-Prince', $justinmimbs$timezone_data$TimeZone$america__port_au_prince),
			_Utils_Tuple2('America/Port_of_Spain', $justinmimbs$timezone_data$TimeZone$america__port_of_spain),
			_Utils_Tuple2('America/Porto_Velho', $justinmimbs$timezone_data$TimeZone$america__porto_velho),
			_Utils_Tuple2('America/Puerto_Rico', $justinmimbs$timezone_data$TimeZone$america__puerto_rico),
			_Utils_Tuple2('America/Punta_Arenas', $justinmimbs$timezone_data$TimeZone$america__punta_arenas),
			_Utils_Tuple2('America/Rainy_River', $justinmimbs$timezone_data$TimeZone$america__rainy_river),
			_Utils_Tuple2('America/Rankin_Inlet', $justinmimbs$timezone_data$TimeZone$america__rankin_inlet),
			_Utils_Tuple2('America/Recife', $justinmimbs$timezone_data$TimeZone$america__recife),
			_Utils_Tuple2('America/Regina', $justinmimbs$timezone_data$TimeZone$america__regina),
			_Utils_Tuple2('America/Resolute', $justinmimbs$timezone_data$TimeZone$america__resolute),
			_Utils_Tuple2('America/Rio_Branco', $justinmimbs$timezone_data$TimeZone$america__rio_branco),
			_Utils_Tuple2('America/Santarem', $justinmimbs$timezone_data$TimeZone$america__santarem),
			_Utils_Tuple2('America/Santiago', $justinmimbs$timezone_data$TimeZone$america__santiago),
			_Utils_Tuple2('America/Santo_Domingo', $justinmimbs$timezone_data$TimeZone$america__santo_domingo),
			_Utils_Tuple2('America/Sao_Paulo', $justinmimbs$timezone_data$TimeZone$america__sao_paulo),
			_Utils_Tuple2('America/Scoresbysund', $justinmimbs$timezone_data$TimeZone$america__scoresbysund),
			_Utils_Tuple2('America/Sitka', $justinmimbs$timezone_data$TimeZone$america__sitka),
			_Utils_Tuple2('America/St_Barthelemy', $justinmimbs$timezone_data$TimeZone$america__st_barthelemy),
			_Utils_Tuple2('America/St_Johns', $justinmimbs$timezone_data$TimeZone$america__st_johns),
			_Utils_Tuple2('America/St_Kitts', $justinmimbs$timezone_data$TimeZone$america__st_kitts),
			_Utils_Tuple2('America/St_Lucia', $justinmimbs$timezone_data$TimeZone$america__st_lucia),
			_Utils_Tuple2('America/St_Thomas', $justinmimbs$timezone_data$TimeZone$america__st_thomas),
			_Utils_Tuple2('America/St_Vincent', $justinmimbs$timezone_data$TimeZone$america__st_vincent),
			_Utils_Tuple2('America/Swift_Current', $justinmimbs$timezone_data$TimeZone$america__swift_current),
			_Utils_Tuple2('America/Tegucigalpa', $justinmimbs$timezone_data$TimeZone$america__tegucigalpa),
			_Utils_Tuple2('America/Thule', $justinmimbs$timezone_data$TimeZone$america__thule),
			_Utils_Tuple2('America/Thunder_Bay', $justinmimbs$timezone_data$TimeZone$america__thunder_bay),
			_Utils_Tuple2('America/Tijuana', $justinmimbs$timezone_data$TimeZone$america__tijuana),
			_Utils_Tuple2('America/Toronto', $justinmimbs$timezone_data$TimeZone$america__toronto),
			_Utils_Tuple2('America/Tortola', $justinmimbs$timezone_data$TimeZone$america__tortola),
			_Utils_Tuple2('America/Vancouver', $justinmimbs$timezone_data$TimeZone$america__vancouver),
			_Utils_Tuple2('America/Whitehorse', $justinmimbs$timezone_data$TimeZone$america__whitehorse),
			_Utils_Tuple2('America/Winnipeg', $justinmimbs$timezone_data$TimeZone$america__winnipeg),
			_Utils_Tuple2('America/Yakutat', $justinmimbs$timezone_data$TimeZone$america__yakutat),
			_Utils_Tuple2('America/Yellowknife', $justinmimbs$timezone_data$TimeZone$america__yellowknife),
			_Utils_Tuple2('Antarctica/Casey', $justinmimbs$timezone_data$TimeZone$antarctica__casey),
			_Utils_Tuple2('Antarctica/Davis', $justinmimbs$timezone_data$TimeZone$antarctica__davis),
			_Utils_Tuple2('Antarctica/DumontDUrville', $justinmimbs$timezone_data$TimeZone$antarctica__dumontdurville),
			_Utils_Tuple2('Antarctica/Macquarie', $justinmimbs$timezone_data$TimeZone$antarctica__macquarie),
			_Utils_Tuple2('Antarctica/Mawson', $justinmimbs$timezone_data$TimeZone$antarctica__mawson),
			_Utils_Tuple2('Antarctica/McMurdo', $justinmimbs$timezone_data$TimeZone$antarctica__mcmurdo),
			_Utils_Tuple2('Antarctica/Palmer', $justinmimbs$timezone_data$TimeZone$antarctica__palmer),
			_Utils_Tuple2('Antarctica/Rothera', $justinmimbs$timezone_data$TimeZone$antarctica__rothera),
			_Utils_Tuple2('Antarctica/Syowa', $justinmimbs$timezone_data$TimeZone$antarctica__syowa),
			_Utils_Tuple2('Antarctica/Troll', $justinmimbs$timezone_data$TimeZone$antarctica__troll),
			_Utils_Tuple2('Antarctica/Vostok', $justinmimbs$timezone_data$TimeZone$antarctica__vostok),
			_Utils_Tuple2('Arctic/Longyearbyen', $justinmimbs$timezone_data$TimeZone$arctic__longyearbyen),
			_Utils_Tuple2('Asia/Aden', $justinmimbs$timezone_data$TimeZone$asia__aden),
			_Utils_Tuple2('Asia/Almaty', $justinmimbs$timezone_data$TimeZone$asia__almaty),
			_Utils_Tuple2('Asia/Amman', $justinmimbs$timezone_data$TimeZone$asia__amman),
			_Utils_Tuple2('Asia/Anadyr', $justinmimbs$timezone_data$TimeZone$asia__anadyr),
			_Utils_Tuple2('Asia/Aqtau', $justinmimbs$timezone_data$TimeZone$asia__aqtau),
			_Utils_Tuple2('Asia/Aqtobe', $justinmimbs$timezone_data$TimeZone$asia__aqtobe),
			_Utils_Tuple2('Asia/Ashgabat', $justinmimbs$timezone_data$TimeZone$asia__ashgabat),
			_Utils_Tuple2('Asia/Atyrau', $justinmimbs$timezone_data$TimeZone$asia__atyrau),
			_Utils_Tuple2('Asia/Baghdad', $justinmimbs$timezone_data$TimeZone$asia__baghdad),
			_Utils_Tuple2('Asia/Bahrain', $justinmimbs$timezone_data$TimeZone$asia__bahrain),
			_Utils_Tuple2('Asia/Baku', $justinmimbs$timezone_data$TimeZone$asia__baku),
			_Utils_Tuple2('Asia/Bangkok', $justinmimbs$timezone_data$TimeZone$asia__bangkok),
			_Utils_Tuple2('Asia/Barnaul', $justinmimbs$timezone_data$TimeZone$asia__barnaul),
			_Utils_Tuple2('Asia/Beirut', $justinmimbs$timezone_data$TimeZone$asia__beirut),
			_Utils_Tuple2('Asia/Bishkek', $justinmimbs$timezone_data$TimeZone$asia__bishkek),
			_Utils_Tuple2('Asia/Brunei', $justinmimbs$timezone_data$TimeZone$asia__brunei),
			_Utils_Tuple2('Asia/Chita', $justinmimbs$timezone_data$TimeZone$asia__chita),
			_Utils_Tuple2('Asia/Choibalsan', $justinmimbs$timezone_data$TimeZone$asia__choibalsan),
			_Utils_Tuple2('Asia/Colombo', $justinmimbs$timezone_data$TimeZone$asia__colombo),
			_Utils_Tuple2('Asia/Damascus', $justinmimbs$timezone_data$TimeZone$asia__damascus),
			_Utils_Tuple2('Asia/Dhaka', $justinmimbs$timezone_data$TimeZone$asia__dhaka),
			_Utils_Tuple2('Asia/Dili', $justinmimbs$timezone_data$TimeZone$asia__dili),
			_Utils_Tuple2('Asia/Dubai', $justinmimbs$timezone_data$TimeZone$asia__dubai),
			_Utils_Tuple2('Asia/Dushanbe', $justinmimbs$timezone_data$TimeZone$asia__dushanbe),
			_Utils_Tuple2('Asia/Famagusta', $justinmimbs$timezone_data$TimeZone$asia__famagusta),
			_Utils_Tuple2('Asia/Gaza', $justinmimbs$timezone_data$TimeZone$asia__gaza),
			_Utils_Tuple2('Asia/Hebron', $justinmimbs$timezone_data$TimeZone$asia__hebron),
			_Utils_Tuple2('Asia/Ho_Chi_Minh', $justinmimbs$timezone_data$TimeZone$asia__ho_chi_minh),
			_Utils_Tuple2('Asia/Hong_Kong', $justinmimbs$timezone_data$TimeZone$asia__hong_kong),
			_Utils_Tuple2('Asia/Hovd', $justinmimbs$timezone_data$TimeZone$asia__hovd),
			_Utils_Tuple2('Asia/Irkutsk', $justinmimbs$timezone_data$TimeZone$asia__irkutsk),
			_Utils_Tuple2('Asia/Istanbul', $justinmimbs$timezone_data$TimeZone$asia__istanbul),
			_Utils_Tuple2('Asia/Jakarta', $justinmimbs$timezone_data$TimeZone$asia__jakarta),
			_Utils_Tuple2('Asia/Jayapura', $justinmimbs$timezone_data$TimeZone$asia__jayapura),
			_Utils_Tuple2('Asia/Jerusalem', $justinmimbs$timezone_data$TimeZone$asia__jerusalem),
			_Utils_Tuple2('Asia/Kabul', $justinmimbs$timezone_data$TimeZone$asia__kabul),
			_Utils_Tuple2('Asia/Kamchatka', $justinmimbs$timezone_data$TimeZone$asia__kamchatka),
			_Utils_Tuple2('Asia/Karachi', $justinmimbs$timezone_data$TimeZone$asia__karachi),
			_Utils_Tuple2('Asia/Kathmandu', $justinmimbs$timezone_data$TimeZone$asia__kathmandu),
			_Utils_Tuple2('Asia/Khandyga', $justinmimbs$timezone_data$TimeZone$asia__khandyga),
			_Utils_Tuple2('Asia/Kolkata', $justinmimbs$timezone_data$TimeZone$asia__kolkata),
			_Utils_Tuple2('Asia/Krasnoyarsk', $justinmimbs$timezone_data$TimeZone$asia__krasnoyarsk),
			_Utils_Tuple2('Asia/Kuala_Lumpur', $justinmimbs$timezone_data$TimeZone$asia__kuala_lumpur),
			_Utils_Tuple2('Asia/Kuching', $justinmimbs$timezone_data$TimeZone$asia__kuching),
			_Utils_Tuple2('Asia/Kuwait', $justinmimbs$timezone_data$TimeZone$asia__kuwait),
			_Utils_Tuple2('Asia/Macau', $justinmimbs$timezone_data$TimeZone$asia__macau),
			_Utils_Tuple2('Asia/Magadan', $justinmimbs$timezone_data$TimeZone$asia__magadan),
			_Utils_Tuple2('Asia/Makassar', $justinmimbs$timezone_data$TimeZone$asia__makassar),
			_Utils_Tuple2('Asia/Manila', $justinmimbs$timezone_data$TimeZone$asia__manila),
			_Utils_Tuple2('Asia/Muscat', $justinmimbs$timezone_data$TimeZone$asia__muscat),
			_Utils_Tuple2('Asia/Nicosia', $justinmimbs$timezone_data$TimeZone$asia__nicosia),
			_Utils_Tuple2('Asia/Novokuznetsk', $justinmimbs$timezone_data$TimeZone$asia__novokuznetsk),
			_Utils_Tuple2('Asia/Novosibirsk', $justinmimbs$timezone_data$TimeZone$asia__novosibirsk),
			_Utils_Tuple2('Asia/Omsk', $justinmimbs$timezone_data$TimeZone$asia__omsk),
			_Utils_Tuple2('Asia/Oral', $justinmimbs$timezone_data$TimeZone$asia__oral),
			_Utils_Tuple2('Asia/Phnom_Penh', $justinmimbs$timezone_data$TimeZone$asia__phnom_penh),
			_Utils_Tuple2('Asia/Pontianak', $justinmimbs$timezone_data$TimeZone$asia__pontianak),
			_Utils_Tuple2('Asia/Pyongyang', $justinmimbs$timezone_data$TimeZone$asia__pyongyang),
			_Utils_Tuple2('Asia/Qatar', $justinmimbs$timezone_data$TimeZone$asia__qatar),
			_Utils_Tuple2('Asia/Qostanay', $justinmimbs$timezone_data$TimeZone$asia__qostanay),
			_Utils_Tuple2('Asia/Qyzylorda', $justinmimbs$timezone_data$TimeZone$asia__qyzylorda),
			_Utils_Tuple2('Asia/Riyadh', $justinmimbs$timezone_data$TimeZone$asia__riyadh),
			_Utils_Tuple2('Asia/Sakhalin', $justinmimbs$timezone_data$TimeZone$asia__sakhalin),
			_Utils_Tuple2('Asia/Samarkand', $justinmimbs$timezone_data$TimeZone$asia__samarkand),
			_Utils_Tuple2('Asia/Seoul', $justinmimbs$timezone_data$TimeZone$asia__seoul),
			_Utils_Tuple2('Asia/Shanghai', $justinmimbs$timezone_data$TimeZone$asia__shanghai),
			_Utils_Tuple2('Asia/Singapore', $justinmimbs$timezone_data$TimeZone$asia__singapore),
			_Utils_Tuple2('Asia/Srednekolymsk', $justinmimbs$timezone_data$TimeZone$asia__srednekolymsk),
			_Utils_Tuple2('Asia/Taipei', $justinmimbs$timezone_data$TimeZone$asia__taipei),
			_Utils_Tuple2('Asia/Tashkent', $justinmimbs$timezone_data$TimeZone$asia__tashkent),
			_Utils_Tuple2('Asia/Tbilisi', $justinmimbs$timezone_data$TimeZone$asia__tbilisi),
			_Utils_Tuple2('Asia/Tehran', $justinmimbs$timezone_data$TimeZone$asia__tehran),
			_Utils_Tuple2('Asia/Thimphu', $justinmimbs$timezone_data$TimeZone$asia__thimphu),
			_Utils_Tuple2('Asia/Tokyo', $justinmimbs$timezone_data$TimeZone$asia__tokyo),
			_Utils_Tuple2('Asia/Tomsk', $justinmimbs$timezone_data$TimeZone$asia__tomsk),
			_Utils_Tuple2('Asia/Ulaanbaatar', $justinmimbs$timezone_data$TimeZone$asia__ulaanbaatar),
			_Utils_Tuple2('Asia/Urumqi', $justinmimbs$timezone_data$TimeZone$asia__urumqi),
			_Utils_Tuple2('Asia/Ust-Nera', $justinmimbs$timezone_data$TimeZone$asia__ust_nera),
			_Utils_Tuple2('Asia/Vientiane', $justinmimbs$timezone_data$TimeZone$asia__vientiane),
			_Utils_Tuple2('Asia/Vladivostok', $justinmimbs$timezone_data$TimeZone$asia__vladivostok),
			_Utils_Tuple2('Asia/Yakutsk', $justinmimbs$timezone_data$TimeZone$asia__yakutsk),
			_Utils_Tuple2('Asia/Yangon', $justinmimbs$timezone_data$TimeZone$asia__yangon),
			_Utils_Tuple2('Asia/Yekaterinburg', $justinmimbs$timezone_data$TimeZone$asia__yekaterinburg),
			_Utils_Tuple2('Asia/Yerevan', $justinmimbs$timezone_data$TimeZone$asia__yerevan),
			_Utils_Tuple2('Atlantic/Azores', $justinmimbs$timezone_data$TimeZone$atlantic__azores),
			_Utils_Tuple2('Atlantic/Bermuda', $justinmimbs$timezone_data$TimeZone$atlantic__bermuda),
			_Utils_Tuple2('Atlantic/Canary', $justinmimbs$timezone_data$TimeZone$atlantic__canary),
			_Utils_Tuple2('Atlantic/Cape_Verde', $justinmimbs$timezone_data$TimeZone$atlantic__cape_verde),
			_Utils_Tuple2('Atlantic/Faroe', $justinmimbs$timezone_data$TimeZone$atlantic__faroe),
			_Utils_Tuple2('Atlantic/Madeira', $justinmimbs$timezone_data$TimeZone$atlantic__madeira),
			_Utils_Tuple2('Atlantic/Reykjavik', $justinmimbs$timezone_data$TimeZone$atlantic__reykjavik),
			_Utils_Tuple2('Atlantic/South_Georgia', $justinmimbs$timezone_data$TimeZone$atlantic__south_georgia),
			_Utils_Tuple2('Atlantic/St_Helena', $justinmimbs$timezone_data$TimeZone$atlantic__st_helena),
			_Utils_Tuple2('Atlantic/Stanley', $justinmimbs$timezone_data$TimeZone$atlantic__stanley),
			_Utils_Tuple2('Australia/Adelaide', $justinmimbs$timezone_data$TimeZone$australia__adelaide),
			_Utils_Tuple2('Australia/Brisbane', $justinmimbs$timezone_data$TimeZone$australia__brisbane),
			_Utils_Tuple2('Australia/Broken_Hill', $justinmimbs$timezone_data$TimeZone$australia__broken_hill),
			_Utils_Tuple2('Australia/Currie', $justinmimbs$timezone_data$TimeZone$australia__currie),
			_Utils_Tuple2('Australia/Darwin', $justinmimbs$timezone_data$TimeZone$australia__darwin),
			_Utils_Tuple2('Australia/Eucla', $justinmimbs$timezone_data$TimeZone$australia__eucla),
			_Utils_Tuple2('Australia/Hobart', $justinmimbs$timezone_data$TimeZone$australia__hobart),
			_Utils_Tuple2('Australia/Lindeman', $justinmimbs$timezone_data$TimeZone$australia__lindeman),
			_Utils_Tuple2('Australia/Lord_Howe', $justinmimbs$timezone_data$TimeZone$australia__lord_howe),
			_Utils_Tuple2('Australia/Melbourne', $justinmimbs$timezone_data$TimeZone$australia__melbourne),
			_Utils_Tuple2('Australia/Perth', $justinmimbs$timezone_data$TimeZone$australia__perth),
			_Utils_Tuple2('Australia/Sydney', $justinmimbs$timezone_data$TimeZone$australia__sydney),
			_Utils_Tuple2('Europe/Amsterdam', $justinmimbs$timezone_data$TimeZone$europe__amsterdam),
			_Utils_Tuple2('Europe/Andorra', $justinmimbs$timezone_data$TimeZone$europe__andorra),
			_Utils_Tuple2('Europe/Astrakhan', $justinmimbs$timezone_data$TimeZone$europe__astrakhan),
			_Utils_Tuple2('Europe/Athens', $justinmimbs$timezone_data$TimeZone$europe__athens),
			_Utils_Tuple2('Europe/Belgrade', $justinmimbs$timezone_data$TimeZone$europe__belgrade),
			_Utils_Tuple2('Europe/Berlin', $justinmimbs$timezone_data$TimeZone$europe__berlin),
			_Utils_Tuple2('Europe/Bratislava', $justinmimbs$timezone_data$TimeZone$europe__bratislava),
			_Utils_Tuple2('Europe/Brussels', $justinmimbs$timezone_data$TimeZone$europe__brussels),
			_Utils_Tuple2('Europe/Bucharest', $justinmimbs$timezone_data$TimeZone$europe__bucharest),
			_Utils_Tuple2('Europe/Budapest', $justinmimbs$timezone_data$TimeZone$europe__budapest),
			_Utils_Tuple2('Europe/Busingen', $justinmimbs$timezone_data$TimeZone$europe__busingen),
			_Utils_Tuple2('Europe/Chisinau', $justinmimbs$timezone_data$TimeZone$europe__chisinau),
			_Utils_Tuple2('Europe/Copenhagen', $justinmimbs$timezone_data$TimeZone$europe__copenhagen),
			_Utils_Tuple2('Europe/Dublin', $justinmimbs$timezone_data$TimeZone$europe__dublin),
			_Utils_Tuple2('Europe/Gibraltar', $justinmimbs$timezone_data$TimeZone$europe__gibraltar),
			_Utils_Tuple2('Europe/Guernsey', $justinmimbs$timezone_data$TimeZone$europe__guernsey),
			_Utils_Tuple2('Europe/Helsinki', $justinmimbs$timezone_data$TimeZone$europe__helsinki),
			_Utils_Tuple2('Europe/Isle_of_Man', $justinmimbs$timezone_data$TimeZone$europe__isle_of_man),
			_Utils_Tuple2('Europe/Istanbul', $justinmimbs$timezone_data$TimeZone$europe__istanbul),
			_Utils_Tuple2('Europe/Jersey', $justinmimbs$timezone_data$TimeZone$europe__jersey),
			_Utils_Tuple2('Europe/Kaliningrad', $justinmimbs$timezone_data$TimeZone$europe__kaliningrad),
			_Utils_Tuple2('Europe/Kiev', $justinmimbs$timezone_data$TimeZone$europe__kiev),
			_Utils_Tuple2('Europe/Kirov', $justinmimbs$timezone_data$TimeZone$europe__kirov),
			_Utils_Tuple2('Europe/Lisbon', $justinmimbs$timezone_data$TimeZone$europe__lisbon),
			_Utils_Tuple2('Europe/Ljubljana', $justinmimbs$timezone_data$TimeZone$europe__ljubljana),
			_Utils_Tuple2('Europe/London', $justinmimbs$timezone_data$TimeZone$europe__london),
			_Utils_Tuple2('Europe/Luxembourg', $justinmimbs$timezone_data$TimeZone$europe__luxembourg),
			_Utils_Tuple2('Europe/Madrid', $justinmimbs$timezone_data$TimeZone$europe__madrid),
			_Utils_Tuple2('Europe/Malta', $justinmimbs$timezone_data$TimeZone$europe__malta),
			_Utils_Tuple2('Europe/Mariehamn', $justinmimbs$timezone_data$TimeZone$europe__mariehamn),
			_Utils_Tuple2('Europe/Minsk', $justinmimbs$timezone_data$TimeZone$europe__minsk),
			_Utils_Tuple2('Europe/Monaco', $justinmimbs$timezone_data$TimeZone$europe__monaco),
			_Utils_Tuple2('Europe/Moscow', $justinmimbs$timezone_data$TimeZone$europe__moscow),
			_Utils_Tuple2('Europe/Nicosia', $justinmimbs$timezone_data$TimeZone$europe__nicosia),
			_Utils_Tuple2('Europe/Oslo', $justinmimbs$timezone_data$TimeZone$europe__oslo),
			_Utils_Tuple2('Europe/Paris', $justinmimbs$timezone_data$TimeZone$europe__paris),
			_Utils_Tuple2('Europe/Podgorica', $justinmimbs$timezone_data$TimeZone$europe__podgorica),
			_Utils_Tuple2('Europe/Prague', $justinmimbs$timezone_data$TimeZone$europe__prague),
			_Utils_Tuple2('Europe/Riga', $justinmimbs$timezone_data$TimeZone$europe__riga),
			_Utils_Tuple2('Europe/Rome', $justinmimbs$timezone_data$TimeZone$europe__rome),
			_Utils_Tuple2('Europe/Samara', $justinmimbs$timezone_data$TimeZone$europe__samara),
			_Utils_Tuple2('Europe/San_Marino', $justinmimbs$timezone_data$TimeZone$europe__san_marino),
			_Utils_Tuple2('Europe/Sarajevo', $justinmimbs$timezone_data$TimeZone$europe__sarajevo),
			_Utils_Tuple2('Europe/Saratov', $justinmimbs$timezone_data$TimeZone$europe__saratov),
			_Utils_Tuple2('Europe/Simferopol', $justinmimbs$timezone_data$TimeZone$europe__simferopol),
			_Utils_Tuple2('Europe/Skopje', $justinmimbs$timezone_data$TimeZone$europe__skopje),
			_Utils_Tuple2('Europe/Sofia', $justinmimbs$timezone_data$TimeZone$europe__sofia),
			_Utils_Tuple2('Europe/Stockholm', $justinmimbs$timezone_data$TimeZone$europe__stockholm),
			_Utils_Tuple2('Europe/Tallinn', $justinmimbs$timezone_data$TimeZone$europe__tallinn),
			_Utils_Tuple2('Europe/Tirane', $justinmimbs$timezone_data$TimeZone$europe__tirane),
			_Utils_Tuple2('Europe/Ulyanovsk', $justinmimbs$timezone_data$TimeZone$europe__ulyanovsk),
			_Utils_Tuple2('Europe/Uzhgorod', $justinmimbs$timezone_data$TimeZone$europe__uzhgorod),
			_Utils_Tuple2('Europe/Vaduz', $justinmimbs$timezone_data$TimeZone$europe__vaduz),
			_Utils_Tuple2('Europe/Vatican', $justinmimbs$timezone_data$TimeZone$europe__vatican),
			_Utils_Tuple2('Europe/Vienna', $justinmimbs$timezone_data$TimeZone$europe__vienna),
			_Utils_Tuple2('Europe/Vilnius', $justinmimbs$timezone_data$TimeZone$europe__vilnius),
			_Utils_Tuple2('Europe/Volgograd', $justinmimbs$timezone_data$TimeZone$europe__volgograd),
			_Utils_Tuple2('Europe/Warsaw', $justinmimbs$timezone_data$TimeZone$europe__warsaw),
			_Utils_Tuple2('Europe/Zagreb', $justinmimbs$timezone_data$TimeZone$europe__zagreb),
			_Utils_Tuple2('Europe/Zaporozhye', $justinmimbs$timezone_data$TimeZone$europe__zaporozhye),
			_Utils_Tuple2('Europe/Zurich', $justinmimbs$timezone_data$TimeZone$europe__zurich),
			_Utils_Tuple2('Indian/Antananarivo', $justinmimbs$timezone_data$TimeZone$indian__antananarivo),
			_Utils_Tuple2('Indian/Chagos', $justinmimbs$timezone_data$TimeZone$indian__chagos),
			_Utils_Tuple2('Indian/Christmas', $justinmimbs$timezone_data$TimeZone$indian__christmas),
			_Utils_Tuple2('Indian/Cocos', $justinmimbs$timezone_data$TimeZone$indian__cocos),
			_Utils_Tuple2('Indian/Comoro', $justinmimbs$timezone_data$TimeZone$indian__comoro),
			_Utils_Tuple2('Indian/Kerguelen', $justinmimbs$timezone_data$TimeZone$indian__kerguelen),
			_Utils_Tuple2('Indian/Mahe', $justinmimbs$timezone_data$TimeZone$indian__mahe),
			_Utils_Tuple2('Indian/Maldives', $justinmimbs$timezone_data$TimeZone$indian__maldives),
			_Utils_Tuple2('Indian/Mauritius', $justinmimbs$timezone_data$TimeZone$indian__mauritius),
			_Utils_Tuple2('Indian/Mayotte', $justinmimbs$timezone_data$TimeZone$indian__mayotte),
			_Utils_Tuple2('Indian/Reunion', $justinmimbs$timezone_data$TimeZone$indian__reunion),
			_Utils_Tuple2('Pacific/Apia', $justinmimbs$timezone_data$TimeZone$pacific__apia),
			_Utils_Tuple2('Pacific/Auckland', $justinmimbs$timezone_data$TimeZone$pacific__auckland),
			_Utils_Tuple2('Pacific/Bougainville', $justinmimbs$timezone_data$TimeZone$pacific__bougainville),
			_Utils_Tuple2('Pacific/Chatham', $justinmimbs$timezone_data$TimeZone$pacific__chatham),
			_Utils_Tuple2('Pacific/Chuuk', $justinmimbs$timezone_data$TimeZone$pacific__chuuk),
			_Utils_Tuple2('Pacific/Easter', $justinmimbs$timezone_data$TimeZone$pacific__easter),
			_Utils_Tuple2('Pacific/Efate', $justinmimbs$timezone_data$TimeZone$pacific__efate),
			_Utils_Tuple2('Pacific/Enderbury', $justinmimbs$timezone_data$TimeZone$pacific__enderbury),
			_Utils_Tuple2('Pacific/Fakaofo', $justinmimbs$timezone_data$TimeZone$pacific__fakaofo),
			_Utils_Tuple2('Pacific/Fiji', $justinmimbs$timezone_data$TimeZone$pacific__fiji),
			_Utils_Tuple2('Pacific/Funafuti', $justinmimbs$timezone_data$TimeZone$pacific__funafuti),
			_Utils_Tuple2('Pacific/Galapagos', $justinmimbs$timezone_data$TimeZone$pacific__galapagos),
			_Utils_Tuple2('Pacific/Gambier', $justinmimbs$timezone_data$TimeZone$pacific__gambier),
			_Utils_Tuple2('Pacific/Guadalcanal', $justinmimbs$timezone_data$TimeZone$pacific__guadalcanal),
			_Utils_Tuple2('Pacific/Guam', $justinmimbs$timezone_data$TimeZone$pacific__guam),
			_Utils_Tuple2('Pacific/Honolulu', $justinmimbs$timezone_data$TimeZone$pacific__honolulu),
			_Utils_Tuple2('Pacific/Kiritimati', $justinmimbs$timezone_data$TimeZone$pacific__kiritimati),
			_Utils_Tuple2('Pacific/Kosrae', $justinmimbs$timezone_data$TimeZone$pacific__kosrae),
			_Utils_Tuple2('Pacific/Kwajalein', $justinmimbs$timezone_data$TimeZone$pacific__kwajalein),
			_Utils_Tuple2('Pacific/Majuro', $justinmimbs$timezone_data$TimeZone$pacific__majuro),
			_Utils_Tuple2('Pacific/Marquesas', $justinmimbs$timezone_data$TimeZone$pacific__marquesas),
			_Utils_Tuple2('Pacific/Midway', $justinmimbs$timezone_data$TimeZone$pacific__midway),
			_Utils_Tuple2('Pacific/Nauru', $justinmimbs$timezone_data$TimeZone$pacific__nauru),
			_Utils_Tuple2('Pacific/Niue', $justinmimbs$timezone_data$TimeZone$pacific__niue),
			_Utils_Tuple2('Pacific/Norfolk', $justinmimbs$timezone_data$TimeZone$pacific__norfolk),
			_Utils_Tuple2('Pacific/Noumea', $justinmimbs$timezone_data$TimeZone$pacific__noumea),
			_Utils_Tuple2('Pacific/Pago_Pago', $justinmimbs$timezone_data$TimeZone$pacific__pago_pago),
			_Utils_Tuple2('Pacific/Palau', $justinmimbs$timezone_data$TimeZone$pacific__palau),
			_Utils_Tuple2('Pacific/Pitcairn', $justinmimbs$timezone_data$TimeZone$pacific__pitcairn),
			_Utils_Tuple2('Pacific/Pohnpei', $justinmimbs$timezone_data$TimeZone$pacific__pohnpei),
			_Utils_Tuple2('Pacific/Port_Moresby', $justinmimbs$timezone_data$TimeZone$pacific__port_moresby),
			_Utils_Tuple2('Pacific/Rarotonga', $justinmimbs$timezone_data$TimeZone$pacific__rarotonga),
			_Utils_Tuple2('Pacific/Saipan', $justinmimbs$timezone_data$TimeZone$pacific__saipan),
			_Utils_Tuple2('Pacific/Tahiti', $justinmimbs$timezone_data$TimeZone$pacific__tahiti),
			_Utils_Tuple2('Pacific/Tarawa', $justinmimbs$timezone_data$TimeZone$pacific__tarawa),
			_Utils_Tuple2('Pacific/Tongatapu', $justinmimbs$timezone_data$TimeZone$pacific__tongatapu),
			_Utils_Tuple2('Pacific/Wake', $justinmimbs$timezone_data$TimeZone$pacific__wake),
			_Utils_Tuple2('Pacific/Wallis', $justinmimbs$timezone_data$TimeZone$pacific__wallis)
		]));
var $author$project$Index$Model$initialModel = function () {
	var maybeBrisbaneTimeZone = A2($elm$core$Dict$get, 'Australia/Brisbane', $justinmimbs$timezone_data$TimeZone$zones);
	var brisbaneTimeZone = function () {
		if (maybeBrisbaneTimeZone.$ === 'Nothing') {
			return _Debug_todo(
				'Index.Model',
				{
					start: {line: 58, column: 21},
					end: {line: 58, column: 31}
				})('Couldn\'t get Brisbane time zone');
		} else {
			var timeZone = maybeBrisbaneTimeZone.a;
			return timeZone(_Utils_Tuple0);
		}
	}();
	return {
		countryOfBirth: A2($author$project$Form$SearchSelect$init, 'https://restcountries.eu/rest/v2/name/', $author$project$Records$Country$countryDecoder),
		datePicker: A2($author$project$Form$DatePicker$setTimeZone, brisbaneTimeZone, $author$project$Form$DatePicker$init),
		datePicker2: A2($author$project$Form$DatePicker$setTimeZone, brisbaneTimeZone, $author$project$Form$DatePicker$init),
		datePicker3: A2($author$project$Form$DatePicker$setTimeZone, brisbaneTimeZone, $author$project$Form$DatePicker$init),
		email: $author$project$Form$Input$init,
		floatInput: $author$project$Form$FloatInput$init,
		input: $author$project$Form$Input$init,
		intInput: $author$project$Form$IntInput$init,
		isGridButtonGreen: false,
		maybeBlockSelect: $author$project$Form$Select$init($author$project$Records$MusicGenre$asNonempty),
		modalLgOpen: false,
		modalResizeOpen: false,
		modalSmOpen: false,
		multiSelect: $author$project$Form$MultiSelect$init($author$project$Records$MusicGenre$asNonempty),
		name: $author$project$Form$Input$init,
		preferredGenre: $author$project$Form$Select$init($author$project$Records$MusicGenre$asNonempty),
		searchSelect: A2($author$project$Form$SearchSelect$init, 'https://restcountries.eu/rest/v2/name/', $author$project$Records$Country$countryDecoder),
		select: $author$project$Form$Select$init($author$project$Records$MusicGenre$asNonempty),
		startDate: $author$project$Form$DatePicker$init,
		textArea: A2(
			$author$project$Form$TextArea$setReplacements,
			_List_fromArray(
				[
					_Utils_Tuple2('[]', '☐')
				]),
			$author$project$Form$TextArea$init),
		textAreaWrap: $author$project$Form$TextArea$init,
		toggle1: false,
		toggle2: false,
		toggle3: false,
		toolTip1: $author$project$ToolTip$init('This is the first ToolTip!'),
		toolTip2: $author$project$ToolTip$init('This is the second ToolTip!'),
		toolTip3: $author$project$ToolTip$init('This is the third ToolTip!'),
		toolTip4: $author$project$ToolTip$init('This is the fourth ToolTip!')
	};
}();
var $author$project$Model$initialModel = function (navigationKey) {
	return {
		db: $author$project$Model$initialDb,
		isAdminMenuOpen: false,
		navigationKey: navigationKey,
		page: $author$project$Page$Index($author$project$Index$Model$initialModel),
		toasters: $author$project$Toasters$init
	};
};
var $author$project$Page$Admin = function (a) {
	return {$: 'Admin', a: a};
};
var $author$project$Msg$IndexMsg = function (a) {
	return {$: 'IndexMsg', a: a};
};
var $author$project$Page$NotFound = {$: 'NotFound'};
var $author$project$Page$Test = {$: 'Test'};
var $author$project$Admin$Page$Courses = function (a) {
	return {$: 'Courses', a: a};
};
var $author$project$Admin$Courses$Page$Search = {$: 'Search'};
var $author$project$Admin$Page$Units = {$: 'Units'};
var $author$project$Admin$Page$fromRoute = function (route) {
	if (route.$ === 'Courses') {
		return $author$project$Admin$Page$Courses($author$project$Admin$Courses$Page$Search);
	} else {
		return $author$project$Admin$Page$Units;
	}
};
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.unvisited;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.value);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.value);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 'Nothing') {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 'Nothing') {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 'Nothing') {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0.a;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.path),
					$elm$url$Url$Parser$prepareQuery(url.query),
					url.fragment,
					$elm$core$Basics$identity)));
	});
var $author$project$Route$Admin = function (a) {
	return {$: 'Admin', a: a};
};
var $author$project$Route$Index = {$: 'Index'};
var $author$project$Route$Test = {$: 'Test'};
var $author$project$Route$Trainer = function (a) {
	return {$: 'Trainer', a: a};
};
var $elm$url$Url$Parser$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.visited;
		var unvisited = _v0.unvisited;
		var params = _v0.params;
		var frag = _v0.frag;
		var value = _v0.value;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0.a;
		return $elm$url$Url$Parser$Parser(
			function (_v1) {
				var visited = _v1.visited;
				var unvisited = _v1.unvisited;
				var params = _v1.params;
				var frag = _v1.frag;
				var value = _v1.value;
				return A2(
					$elm$core$List$map,
					$elm$url$Url$Parser$mapState(value),
					parseArg(
						A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
			});
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return $elm$url$Url$Parser$Parser(
		function (state) {
			return A2(
				$elm$core$List$concatMap,
				function (_v0) {
					var parser = _v0.a;
					return parser(state);
				},
				parsers);
		});
};
var $author$project$Admin$Route$Courses = {$: 'Courses'};
var $author$project$Admin$Route$Units = {$: 'Units'};
var $elm$url$Url$Parser$s = function (str) {
	return $elm$url$Url$Parser$Parser(
		function (_v0) {
			var visited = _v0.visited;
			var unvisited = _v0.unvisited;
			var params = _v0.params;
			var frag = _v0.frag;
			var value = _v0.value;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				return _Utils_eq(next, str) ? _List_fromArray(
					[
						A5(
						$elm$url$Url$Parser$State,
						A2($elm$core$List$cons, next, visited),
						rest,
						params,
						frag,
						value)
					]) : _List_Nil;
			}
		});
};
var $author$project$Admin$Route$routeParser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Admin$Route$Courses,
			$elm$url$Url$Parser$s('courses')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Admin$Route$Units,
			$elm$url$Url$Parser$s('units'))
		]));
var $author$project$Trainer$Route$Settings = {$: 'Settings'};
var $author$project$Trainer$Route$TrainingPlan = {$: 'TrainingPlan'};
var $author$project$Trainer$Route$routeParser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Trainer$Route$TrainingPlan,
			$elm$url$Url$Parser$s('training-plan')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Trainer$Route$Settings,
			$elm$url$Url$Parser$s('settings'))
		]));
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0.a;
		var parseAfter = _v1.a;
		return $elm$url$Url$Parser$Parser(
			function (state) {
				return A2(
					$elm$core$List$concatMap,
					parseAfter,
					parseBefore(state));
			});
	});
var $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(
	function (state) {
		return _List_fromArray(
			[state]);
	});
var $author$project$Route$routeParser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$url$Url$Parser$map, $author$project$Route$Index, $elm$url$Url$Parser$top),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Admin,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('admin'),
				$author$project$Admin$Route$routeParser)),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Trainer,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('trainer'),
				$author$project$Trainer$Route$routeParser)),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Test,
			$elm$url$Url$Parser$s('test'))
		]));
var $author$project$Route$fromUrl = $elm$url$Url$Parser$parse($author$project$Route$routeParser);
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 'Nothing') {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 'Nothing') {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.protocol;
		if (_v0.$ === 'Http') {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.fragment,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.query,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.port_,
					_Utils_ap(http, url.host)),
				url.path)));
};
var $author$project$Index$Msg$DatePicker2Msg = function (a) {
	return {$: 'DatePicker2Msg', a: a};
};
var $author$project$Index$Msg$DatePicker3Msg = function (a) {
	return {$: 'DatePicker3Msg', a: a};
};
var $author$project$Index$Msg$DatePickerMsg = function (a) {
	return {$: 'DatePickerMsg', a: a};
};
var $author$project$Index$Msg$MultiSelectMsg = function (a) {
	return {$: 'MultiSelectMsg', a: a};
};
var $author$project$Index$Msg$SearchSelectMsg = function (a) {
	return {$: 'SearchSelectMsg', a: a};
};
var $author$project$Index$Msg$SelectMsg = function (a) {
	return {$: 'SelectMsg', a: a};
};
var $author$project$Index$Msg$UpdateCountryOfBirth = function (a) {
	return {$: 'UpdateCountryOfBirth', a: a};
};
var $author$project$Index$Msg$UpdateStartDate = function (a) {
	return {$: 'UpdateStartDate', a: a};
};
var $author$project$Form$DatePicker$Internal$DomFocus = function (a) {
	return {$: 'DomFocus', a: a};
};
var $author$project$Form$DatePicker$Internal$Hours = {$: 'Hours'};
var $author$project$Form$DatePicker$Internal$Minutes = {$: 'Minutes'};
var $author$project$Form$DatePicker$Internal$Seconds = {$: 'Seconds'};
var $author$project$Form$DatePicker$Internal$UpdateHours = function (a) {
	return {$: 'UpdateHours', a: a};
};
var $author$project$Form$DatePicker$Internal$UpdateMinutes = function (a) {
	return {$: 'UpdateMinutes', a: a};
};
var $author$project$Form$DatePicker$Internal$UpdateSeconds = function (a) {
	return {$: 'UpdateSeconds', a: a};
};
var $justinmimbs$time_extra$Time$Extra$Month = {$: 'Month'};
var $justinmimbs$time_extra$Time$Extra$Day = {$: 'Day'};
var $justinmimbs$date$Date$Days = {$: 'Days'};
var $justinmimbs$time_extra$Time$Extra$Millisecond = {$: 'Millisecond'};
var $justinmimbs$date$Date$Months = {$: 'Months'};
var $justinmimbs$date$Date$RD = function (a) {
	return {$: 'RD', a: a};
};
var $justinmimbs$date$Date$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$date$Date$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$date$Date$isLeapYear(y) ? 1 : 0;
		switch (m.$) {
			case 'Jan':
				return 0;
			case 'Feb':
				return 31;
			case 'Mar':
				return 59 + leapDays;
			case 'Apr':
				return 90 + leapDays;
			case 'May':
				return 120 + leapDays;
			case 'Jun':
				return 151 + leapDays;
			case 'Jul':
				return 181 + leapDays;
			case 'Aug':
				return 212 + leapDays;
			case 'Sep':
				return 243 + leapDays;
			case 'Oct':
				return 273 + leapDays;
			case 'Nov':
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$date$Date$floorDiv = F2(
	function (a, b) {
		return $elm$core$Basics$floor(a / b);
	});
var $justinmimbs$date$Date$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (A2($justinmimbs$date$Date$floorDiv, y, 4) - A2($justinmimbs$date$Date$floorDiv, y, 100)) + A2($justinmimbs$date$Date$floorDiv, y, 400);
	return (365 * y) + leapYears;
};
var $justinmimbs$date$Date$daysInMonth = F2(
	function (y, m) {
		switch (m.$) {
			case 'Jan':
				return 31;
			case 'Feb':
				return $justinmimbs$date$Date$isLeapYear(y) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $justinmimbs$date$Date$monthToNumber = function (m) {
	switch (m.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $justinmimbs$date$Date$numberToMonth = function (mn) {
	var _v0 = A2($elm$core$Basics$max, 1, mn);
	switch (_v0) {
		case 1:
			return $elm$time$Time$Jan;
		case 2:
			return $elm$time$Time$Feb;
		case 3:
			return $elm$time$Time$Mar;
		case 4:
			return $elm$time$Time$Apr;
		case 5:
			return $elm$time$Time$May;
		case 6:
			return $elm$time$Time$Jun;
		case 7:
			return $elm$time$Time$Jul;
		case 8:
			return $elm$time$Time$Aug;
		case 9:
			return $elm$time$Time$Sep;
		case 10:
			return $elm$time$Time$Oct;
		case 11:
			return $elm$time$Time$Nov;
		default:
			return $elm$time$Time$Dec;
	}
};
var $justinmimbs$date$Date$toCalendarDateHelp = F3(
	function (y, m, d) {
		toCalendarDateHelp:
		while (true) {
			var monthDays = A2($justinmimbs$date$Date$daysInMonth, y, m);
			var mn = $justinmimbs$date$Date$monthToNumber(m);
			if ((mn < 12) && (_Utils_cmp(d, monthDays) > 0)) {
				var $temp$y = y,
					$temp$m = $justinmimbs$date$Date$numberToMonth(mn + 1),
					$temp$d = d - monthDays;
				y = $temp$y;
				m = $temp$m;
				d = $temp$d;
				continue toCalendarDateHelp;
			} else {
				return {day: d, month: m, year: y};
			}
		}
	});
var $justinmimbs$date$Date$divWithRemainder = F2(
	function (a, b) {
		return _Utils_Tuple2(
			A2($justinmimbs$date$Date$floorDiv, a, b),
			A2($elm$core$Basics$modBy, b, a));
	});
var $justinmimbs$date$Date$year = function (_v0) {
	var rd = _v0.a;
	var _v1 = A2($justinmimbs$date$Date$divWithRemainder, rd, 146097);
	var n400 = _v1.a;
	var r400 = _v1.b;
	var _v2 = A2($justinmimbs$date$Date$divWithRemainder, r400, 36524);
	var n100 = _v2.a;
	var r100 = _v2.b;
	var _v3 = A2($justinmimbs$date$Date$divWithRemainder, r100, 1461);
	var n4 = _v3.a;
	var r4 = _v3.b;
	var _v4 = A2($justinmimbs$date$Date$divWithRemainder, r4, 365);
	var n1 = _v4.a;
	var r1 = _v4.b;
	var n = (!r1) ? 0 : 1;
	return ((((n400 * 400) + (n100 * 100)) + (n4 * 4)) + n1) + n;
};
var $justinmimbs$date$Date$toOrdinalDate = function (_v0) {
	var rd = _v0.a;
	var y = $justinmimbs$date$Date$year(
		$justinmimbs$date$Date$RD(rd));
	return {
		ordinalDay: rd - $justinmimbs$date$Date$daysBeforeYear(y),
		year: y
	};
};
var $justinmimbs$date$Date$toCalendarDate = function (_v0) {
	var rd = _v0.a;
	var date = $justinmimbs$date$Date$toOrdinalDate(
		$justinmimbs$date$Date$RD(rd));
	return A3($justinmimbs$date$Date$toCalendarDateHelp, date.year, $elm$time$Time$Jan, date.ordinalDay);
};
var $justinmimbs$date$Date$add = F3(
	function (unit, n, _v0) {
		var rd = _v0.a;
		switch (unit.$) {
			case 'Years':
				return A3(
					$justinmimbs$date$Date$add,
					$justinmimbs$date$Date$Months,
					12 * n,
					$justinmimbs$date$Date$RD(rd));
			case 'Months':
				var date = $justinmimbs$date$Date$toCalendarDate(
					$justinmimbs$date$Date$RD(rd));
				var wholeMonths = ((12 * (date.year - 1)) + ($justinmimbs$date$Date$monthToNumber(date.month) - 1)) + n;
				var m = $justinmimbs$date$Date$numberToMonth(
					A2($elm$core$Basics$modBy, 12, wholeMonths) + 1);
				var y = A2($justinmimbs$date$Date$floorDiv, wholeMonths, 12) + 1;
				return $justinmimbs$date$Date$RD(
					($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A2(
						$elm$core$Basics$min,
						date.day,
						A2($justinmimbs$date$Date$daysInMonth, y, m)));
			case 'Weeks':
				return $justinmimbs$date$Date$RD(rd + (7 * n));
			default:
				return $justinmimbs$date$Date$RD(rd + n);
		}
	});
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $justinmimbs$date$Date$fromCalendarDate = F3(
	function (y, m, d) {
		return $justinmimbs$date$Date$RD(
			($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A3(
				$elm$core$Basics$clamp,
				1,
				A2($justinmimbs$date$Date$daysInMonth, y, m),
				d));
	});
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0.a;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.start, posixMinutes) < 0) {
					return posixMinutes + era.offset;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		day: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		month: month,
		year: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).day;
	});
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).month;
		switch (_v0) {
			case 1:
				return $elm$time$Time$Jan;
			case 2:
				return $elm$time$Time$Feb;
			case 3:
				return $elm$time$Time$Mar;
			case 4:
				return $elm$time$Time$Apr;
			case 5:
				return $elm$time$Time$May;
			case 6:
				return $elm$time$Time$Jun;
			case 7:
				return $elm$time$Time$Jul;
			case 8:
				return $elm$time$Time$Aug;
			case 9:
				return $elm$time$Time$Sep;
			case 10:
				return $elm$time$Time$Oct;
			case 11:
				return $elm$time$Time$Nov;
			default:
				return $elm$time$Time$Dec;
		}
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).year;
	});
var $justinmimbs$date$Date$fromPosix = F2(
	function (zone, posix) {
		return A3(
			$justinmimbs$date$Date$fromCalendarDate,
			A2($elm$time$Time$toYear, zone, posix),
			A2($elm$time$Time$toMonth, zone, posix),
			A2($elm$time$Time$toDay, zone, posix));
	});
var $elm$time$Time$Posix = function (a) {
	return {$: 'Posix', a: a};
};
var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
var $justinmimbs$date$Date$toRataDie = function (_v0) {
	var rd = _v0.a;
	return rd;
};
var $justinmimbs$time_extra$Time$Extra$dateToMillis = function (date) {
	var daysSinceEpoch = $justinmimbs$date$Date$toRataDie(date) - 719163;
	return daysSinceEpoch * 86400000;
};
var $justinmimbs$time_extra$Time$Extra$timeFromClock = F4(
	function (hour, minute, second, millisecond) {
		return (((hour * 3600000) + (minute * 60000)) + (second * 1000)) + millisecond;
	});
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $justinmimbs$time_extra$Time$Extra$timeFromPosix = F2(
	function (zone, posix) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$timeFromClock,
			A2($elm$time$Time$toHour, zone, posix),
			A2($elm$time$Time$toMinute, zone, posix),
			A2($elm$time$Time$toSecond, zone, posix),
			A2($elm$time$Time$toMillis, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$toOffset = F2(
	function (zone, posix) {
		var millis = $elm$time$Time$posixToMillis(posix);
		var localMillis = $justinmimbs$time_extra$Time$Extra$dateToMillis(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix);
		return ((localMillis - millis) / 60000) | 0;
	});
var $justinmimbs$time_extra$Time$Extra$posixFromDateTime = F3(
	function (zone, date, time) {
		var millis = $justinmimbs$time_extra$Time$Extra$dateToMillis(date) + time;
		var offset0 = A2(
			$justinmimbs$time_extra$Time$Extra$toOffset,
			zone,
			$elm$time$Time$millisToPosix(millis));
		var posix1 = $elm$time$Time$millisToPosix(millis - (offset0 * 60000));
		var offset1 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix1);
		if (_Utils_eq(offset0, offset1)) {
			return posix1;
		} else {
			var posix2 = $elm$time$Time$millisToPosix(millis - (offset1 * 60000));
			var offset2 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix2);
			return _Utils_eq(offset1, offset2) ? posix2 : posix1;
		}
	});
var $justinmimbs$time_extra$Time$Extra$add = F4(
	function (interval, n, zone, posix) {
		add:
		while (true) {
			switch (interval.$) {
				case 'Millisecond':
					return $elm$time$Time$millisToPosix(
						$elm$time$Time$posixToMillis(posix) + n);
				case 'Second':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 1000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Minute':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 60000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Hour':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 3600000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Day':
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							$justinmimbs$date$Date$Days,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 'Month':
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							$justinmimbs$date$Date$Months,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 'Year':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Month,
						$temp$n = n * 12,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Quarter':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Month,
						$temp$n = n * 3,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Week':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Day,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				default:
					var weekday = interval;
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Day,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
			}
		}
	});
var $author$project$Time$Bdt$addMonths = F3(
	function (timeZone, number, posix) {
		return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Month, number, timeZone, posix);
	});
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2(
					$elm$core$Task$onError,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Err),
					A2(
						$elm$core$Task$andThen,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
							$elm$core$Result$Ok),
						task))));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $author$project$Form$Select$Internal$getIsOpen = function ($) {
	return $.isOpen;
};
var $author$project$Form$Select$getIsOpen = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$Select$Internal$getIsOpen(state);
};
var $author$project$Resettable$getValue = function (resettable) {
	if (resettable.$ === 'Initial') {
		var initialValue = resettable.a;
		return initialValue;
	} else {
		var updatedValue = resettable.b;
		return updatedValue;
	}
};
var $author$project$Form$Select$Internal$getSelectedOption = function (state) {
	return $author$project$Resettable$getValue(state.selectedOption);
};
var $author$project$Form$Select$getSelectedOption = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$Select$Internal$getSelectedOption(state);
};
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Time$Bdt$clamp = F3(
	function (minPosix, maxPosix, posix) {
		return (_Utils_cmp(
			$elm$time$Time$posixToMillis(posix),
			$elm$time$Time$posixToMillis(minPosix)) < 0) ? minPosix : ((_Utils_cmp(
			$elm$time$Time$posixToMillis(posix),
			$elm$time$Time$posixToMillis(maxPosix)) > 0) ? maxPosix : posix);
	});
var $author$project$Time$Bdt$maybeClamp = F3(
	function (mMinPosix, mMaxPosix, posix) {
		var _v0 = _Utils_Tuple2(mMinPosix, mMaxPosix);
		if (_v0.a.$ === 'Just') {
			if (_v0.b.$ === 'Just') {
				var minPosix = _v0.a.a;
				var maxPosix = _v0.b.a;
				return A3($author$project$Time$Bdt$clamp, minPosix, maxPosix, posix);
			} else {
				var minPosix = _v0.a.a;
				return A3($author$project$Time$Bdt$clamp, minPosix, posix, posix);
			}
		} else {
			if (_v0.b.$ === 'Just') {
				var maxPosix = _v0.b.a;
				return A3($author$project$Time$Bdt$clamp, posix, maxPosix, posix);
			} else {
				return posix;
			}
		}
	});
var $author$project$Form$DatePicker$Internal$InitWithCurrentDate = F3(
	function (a, b, c) {
		return {$: 'InitWithCurrentDate', a: a, b: b, c: c};
	});
var $elm$time$Time$Name = function (a) {
	return {$: 'Name', a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 'Offset', a: a};
};
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $author$project$Form$DatePicker$Internal$openCmd = F4(
	function (date, minPosix, maxPosix, includeTime) {
		if (date.$ === 'Nothing') {
			return A2(
				$elm$core$Task$perform,
				A2($author$project$Form$DatePicker$Internal$InitWithCurrentDate, minPosix, maxPosix),
				$elm$time$Time$now);
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $author$project$Form$DatePicker$Internal$openTimeSelect = function (timeSelect) {
	switch (timeSelect.$) {
		case 'Hours':
			return A2(
				$elm$core$Task$attempt,
				$author$project$Form$DatePicker$Internal$DomFocus,
				$elm$browser$Browser$Dom$focus('FORM_DATEPICKER_HOURS'));
		case 'Minutes':
			return A2(
				$elm$core$Task$attempt,
				$author$project$Form$DatePicker$Internal$DomFocus,
				$elm$browser$Browser$Dom$focus('FORM_DATEPICKER_MINUTES'));
		default:
			return A2(
				$elm$core$Task$attempt,
				$author$project$Form$DatePicker$Internal$DomFocus,
				$elm$browser$Browser$Dom$focus('FORM_DATEPICKER_SECONDS'));
	}
};
var $justinmimbs$time_extra$Time$Extra$partsToPosix = F2(
	function (zone, _v0) {
		var year = _v0.year;
		var month = _v0.month;
		var day = _v0.day;
		var hour = _v0.hour;
		var minute = _v0.minute;
		var second = _v0.second;
		var millisecond = _v0.millisecond;
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A3($justinmimbs$date$Date$fromCalendarDate, year, month, day),
			A4(
				$justinmimbs$time_extra$Time$Extra$timeFromClock,
				A3($elm$core$Basics$clamp, 0, 23, hour),
				A3($elm$core$Basics$clamp, 0, 59, minute),
				A3($elm$core$Basics$clamp, 0, 59, second),
				A3($elm$core$Basics$clamp, 0, 999, millisecond)));
	});
var $author$project$Form$Select$Internal$setInitialOption = F2(
	function (selectedOption, state) {
		return _Utils_update(
			state,
			{
				selectedOption: $author$project$Resettable$init(selectedOption)
			});
	});
var $author$project$Form$Select$setInitialOption = F2(
	function (selectedOption, _v0) {
		var state = _v0.a;
		return $author$project$Form$Select$Model(
			A2($author$project$Form$Select$Internal$setInitialOption, selectedOption, state));
	});
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			if (!list.b) {
				return _List_Nil;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var $elm$core$String$toLower = _String_toLower;
var $author$project$Form$Select$Internal$filterOptions = F3(
	function (searchText, toLabel, options) {
		return A2(
			$elm$core$List$filter,
			A2(
				$elm$core$Basics$composeR,
				toLabel,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$String$toLower,
					$elm$core$String$contains(searchText))),
			options);
	});
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$Form$Select$Internal$getNextOption = F4(
	function (options, mFocusedOption, searchText, toLabel) {
		var filteredOptions = A3($author$project$Form$Select$Internal$filterOptions, searchText, toLabel, options);
		var mFilteredFocusOption = A2(
			$elm$core$Maybe$andThen,
			function (option) {
				return A2($elm$core$List$member, option, filteredOptions) ? $elm$core$Maybe$Just(option) : $elm$core$Maybe$Nothing;
			},
			mFocusedOption);
		if (mFilteredFocusOption.$ === 'Nothing') {
			return $elm$core$List$head(filteredOptions);
		} else {
			var focusedOption = mFilteredFocusOption.a;
			return $elm$core$List$head(
				A2(
					$elm$core$List$drop,
					1,
					A2(
						$elm_community$list_extra$List$Extra$dropWhile,
						$elm$core$Basics$neq(focusedOption),
						filteredOptions)));
		}
	});
var $author$project$Form$Select$Internal$getPreviousOption = F4(
	function (options, focusedOption, searchText, toLabel) {
		return A4(
			$author$project$Form$Select$Internal$getNextOption,
			$elm$core$List$reverse(options),
			focusedOption,
			searchText,
			toLabel);
	});
var $mgold$elm_nonempty_list$List$Nonempty$toList = function (_v0) {
	var x = _v0.a;
	var xs = _v0.b;
	return A2($elm$core$List$cons, x, xs);
};
var $author$project$Resettable$Updated = F2(
	function (a, b) {
		return {$: 'Updated', a: a, b: b};
	});
var $author$project$Resettable$update = F2(
	function (newValue, resettable) {
		if (resettable.$ === 'Initial') {
			var initialValue = resettable.a;
			var _v1 = _Utils_eq(newValue, initialValue);
			if (_v1) {
				return resettable;
			} else {
				return A2($author$project$Resettable$Updated, initialValue, newValue);
			}
		} else {
			var initialValue = resettable.a;
			var currentValue = resettable.b;
			var _v2 = _Utils_Tuple2(
				_Utils_eq(currentValue, newValue),
				_Utils_eq(initialValue, newValue));
			if (_v2.a) {
				return resettable;
			} else {
				if (_v2.b) {
					return $author$project$Resettable$Initial(initialValue);
				} else {
					return A2($author$project$Resettable$Updated, initialValue, newValue);
				}
			}
		}
	});
var $author$project$Form$Select$Internal$updateSelectedOption = F2(
	function (option, state) {
		return _Utils_update(
			state,
			{
				focusedOption: $elm$core$Maybe$Nothing,
				isOpen: false,
				searchText: '',
				selectedOption: A2(
					$author$project$Resettable$update,
					$elm$core$Maybe$Just(option),
					state.selectedOption)
			});
	});
var $author$project$Form$Select$Internal$update = F2(
	function (msg, state) {
		switch (msg.$) {
			case 'Open':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{isOpen: true}),
					$elm$core$Platform$Cmd$none);
			case 'Blur':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{focusedOption: $elm$core$Maybe$Nothing, isOpen: false, searchText: ''}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateSearchText':
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{searchText: value}),
					$elm$core$Platform$Cmd$none);
			case 'Select':
				var option = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Form$Select$Internal$updateSelectedOption, option, state),
					$elm$core$Platform$Cmd$none);
			case 'Clear':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							searchText: '',
							selectedOption: A2($author$project$Resettable$update, $elm$core$Maybe$Nothing, state.selectedOption)
						}),
					$elm$core$Platform$Cmd$none);
			case 'SelectKey':
				switch (msg.c.$) {
					case 'Up':
						var toLabel = msg.b;
						var _v1 = msg.c;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A4(
										$author$project$Form$Select$Internal$getPreviousOption,
										$mgold$elm_nonempty_list$List$Nonempty$toList(state.options),
										state.focusedOption,
										state.searchText,
										toLabel)
								}),
							$elm$core$Platform$Cmd$none);
					case 'Down':
						var toLabel = msg.b;
						var _v2 = msg.c;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A4(
										$author$project$Form$Select$Internal$getNextOption,
										$mgold$elm_nonempty_list$List$Nonempty$toList(state.options),
										state.focusedOption,
										state.searchText,
										toLabel)
								}),
							$elm$core$Platform$Cmd$none);
					default:
						var isOptionDisabled = msg.a;
						var _v3 = state.focusedOption;
						if (_v3.$ === 'Nothing') {
							return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
						} else {
							var focusedOption = _v3.a;
							var _v4 = isOptionDisabled(focusedOption);
							if (_v4) {
								return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
							} else {
								return _Utils_Tuple2(
									A2($author$project$Form$Select$Internal$updateSelectedOption, focusedOption, state),
									$elm$core$Platform$Cmd$none);
							}
						}
				}
			default:
				return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Form$Select$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return A2(
			$elm$core$Tuple$mapFirst,
			$author$project$Form$Select$Model,
			A2($author$project$Form$Select$Internal$update, msg, state));
	});
var $author$project$Form$DatePicker$Internal$update = F2(
	function (msg, state) {
		switch (msg.$) {
			case 'Open':
				var minPosix = msg.a;
				var maxPosix = msg.b;
				var includeTime = msg.c;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							desiredPosix: $author$project$Resettable$getValue(state.selectedPosix),
							focusedSelect: $elm$core$Maybe$Nothing,
							hours: function (option) {
								return A2(
									$author$project$Form$Select$setInitialOption,
									$elm$core$Maybe$Just(
										A2($elm$core$Maybe$withDefault, 0, option)),
									state.hours);
							}(
								A2(
									$elm$core$Maybe$map,
									$elm$time$Time$toHour(state.timeZone),
									$author$project$Resettable$getValue(state.selectedPosix))),
							isOpen: true,
							minutes: function (option) {
								return A2(
									$author$project$Form$Select$setInitialOption,
									$elm$core$Maybe$Just(
										A2($elm$core$Maybe$withDefault, 0, option)),
									state.minutes);
							}(
								A2(
									$elm$core$Maybe$map,
									$elm$time$Time$toMinute(state.timeZone),
									$author$project$Resettable$getValue(state.selectedPosix))),
							navigationPosix: $author$project$Resettable$getValue(state.selectedPosix),
							seconds: function (option) {
								return A2(
									$author$project$Form$Select$setInitialOption,
									$elm$core$Maybe$Just(
										A2($elm$core$Maybe$withDefault, 0, option)),
									state.seconds);
							}(
								A2(
									$elm$core$Maybe$map,
									$elm$time$Time$toSecond(state.timeZone),
									$author$project$Resettable$getValue(state.selectedPosix)))
						}),
					A4(
						$author$project$Form$DatePicker$Internal$openCmd,
						$author$project$Resettable$getValue(state.selectedPosix),
						minPosix,
						maxPosix,
						includeTime));
			case 'Blur':
				var _v1 = _Utils_eq(state.focusedSelect, $elm$core$Maybe$Nothing);
				if (_v1) {
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{isOpen: false}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
				}
			case 'InitWithCurrentDate':
				var minPosix = msg.a;
				var maxPosix = msg.b;
				var posix = msg.c;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							navigationPosix: $elm$core$Maybe$Just(
								A3($author$project$Time$Bdt$maybeClamp, minPosix, maxPosix, posix))
						}),
					$elm$core$Platform$Cmd$none);
			case 'PreviousYear':
				var minPosix = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							navigationPosix: A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									A2($author$project$Time$Bdt$addMonths, state.timeZone, -12),
									A2($author$project$Time$Bdt$maybeClamp, minPosix, state.navigationPosix)),
								state.navigationPosix)
						}),
					$elm$core$Platform$Cmd$none);
			case 'PreviousMonth':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							navigationPosix: A2(
								$elm$core$Maybe$map,
								A2($author$project$Time$Bdt$addMonths, state.timeZone, -1),
								state.navigationPosix)
						}),
					$elm$core$Platform$Cmd$none);
			case 'NextYear':
				var maxPosix = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							navigationPosix: A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									A2($author$project$Time$Bdt$addMonths, state.timeZone, 12),
									A2($author$project$Time$Bdt$maybeClamp, state.navigationPosix, maxPosix)),
								state.navigationPosix)
						}),
					$elm$core$Platform$Cmd$none);
			case 'NextMonth':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							navigationPosix: A2(
								$elm$core$Maybe$map,
								A2($author$project$Time$Bdt$addMonths, state.timeZone, 1),
								state.navigationPosix)
						}),
					$elm$core$Platform$Cmd$none);
			case 'SelectDay':
				var posix = msg.a;
				var includeTime = msg.b;
				if (!includeTime) {
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{
								isOpen: false,
								selectedPosix: A2(
									$author$project$Resettable$update,
									$elm$core$Maybe$Just(posix),
									state.selectedPosix)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{
								desiredPosix: $elm$core$Maybe$Just(posix)
							}),
						$elm$core$Platform$Cmd$none);
				}
			case 'Apply':
				var _v3 = state.desiredPosix;
				if (_v3.$ === 'Nothing') {
					return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
				} else {
					var desiredPosix = _v3.a;
					var newPosix = A2(
						$justinmimbs$time_extra$Time$Extra$partsToPosix,
						state.timeZone,
						{
							day: A2($elm$time$Time$toDay, state.timeZone, desiredPosix),
							hour: A2(
								$elm$core$Maybe$withDefault,
								0,
								$author$project$Form$Select$getSelectedOption(state.hours)),
							millisecond: 0,
							minute: A2(
								$elm$core$Maybe$withDefault,
								0,
								$author$project$Form$Select$getSelectedOption(state.minutes)),
							month: A2($elm$time$Time$toMonth, state.timeZone, desiredPosix),
							second: A2(
								$elm$core$Maybe$withDefault,
								0,
								$author$project$Form$Select$getSelectedOption(state.seconds)),
							year: A2($elm$time$Time$toYear, state.timeZone, desiredPosix)
						});
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{
								isOpen: false,
								selectedPosix: A2(
									$author$project$Resettable$update,
									$elm$core$Maybe$Just(newPosix),
									state.selectedPosix)
							}),
						$elm$core$Platform$Cmd$none);
				}
			case 'Clear':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							isOpen: false,
							selectedPosix: A2($author$project$Resettable$update, $elm$core$Maybe$Nothing, state.selectedPosix)
						}),
					$elm$core$Platform$Cmd$none);
			case 'OpenTimeSelect':
				var select = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							focusedSelect: $elm$core$Maybe$Just(select)
						}),
					$author$project$Form$DatePicker$Internal$openTimeSelect(select));
			case 'UpdateHours':
				var selectMsg = msg.a;
				var _v4 = A2($author$project$Form$Select$update, selectMsg, state.hours);
				var newSelect = _v4.a;
				var cmd = _v4.b;
				var focusedSelect = ((!$author$project$Form$Select$getIsOpen(newSelect)) && _Utils_eq(
					state.focusedSelect,
					$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Hours))) ? $elm$core$Maybe$Nothing : state.focusedSelect;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{focusedSelect: focusedSelect, hours: newSelect}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2($elm$core$Platform$Cmd$map, $author$project$Form$DatePicker$Internal$UpdateHours, cmd),
								(!_Utils_eq(focusedSelect, $elm$core$Maybe$Nothing)) ? $elm$core$Platform$Cmd$none : A2(
								$elm$core$Task$attempt,
								$author$project$Form$DatePicker$Internal$DomFocus,
								$elm$browser$Browser$Dom$focus('FORM_DATEPICKER'))
							])));
			case 'UpdateMinutes':
				var selectMsg = msg.a;
				var _v5 = A2($author$project$Form$Select$update, selectMsg, state.minutes);
				var newSelect = _v5.a;
				var cmd = _v5.b;
				var focusedSelect = ((!$author$project$Form$Select$getIsOpen(newSelect)) && _Utils_eq(
					state.focusedSelect,
					$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Minutes))) ? $elm$core$Maybe$Nothing : state.focusedSelect;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{focusedSelect: focusedSelect, minutes: newSelect}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2($elm$core$Platform$Cmd$map, $author$project$Form$DatePicker$Internal$UpdateMinutes, cmd),
								(!_Utils_eq(focusedSelect, $elm$core$Maybe$Nothing)) ? $elm$core$Platform$Cmd$none : A2(
								$elm$core$Task$attempt,
								$author$project$Form$DatePicker$Internal$DomFocus,
								$elm$browser$Browser$Dom$focus('FORM_DATEPICKER'))
							])));
			case 'UpdateSeconds':
				var selectMsg = msg.a;
				var _v6 = A2($author$project$Form$Select$update, selectMsg, state.seconds);
				var newSelect = _v6.a;
				var cmd = _v6.b;
				var focusedSelect = ((!$author$project$Form$Select$getIsOpen(newSelect)) && _Utils_eq(
					state.focusedSelect,
					$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Seconds))) ? $elm$core$Maybe$Nothing : state.focusedSelect;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{focusedSelect: focusedSelect, seconds: newSelect}),
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2($elm$core$Platform$Cmd$map, $author$project$Form$DatePicker$Internal$UpdateSeconds, cmd),
								(!_Utils_eq(focusedSelect, $elm$core$Maybe$Nothing)) ? $elm$core$Platform$Cmd$none : A2(
								$elm$core$Task$attempt,
								$author$project$Form$DatePicker$Internal$DomFocus,
								$elm$browser$Browser$Dom$focus('FORM_DATEPICKER'))
							])));
			case 'DomFocus':
				return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Form$DatePicker$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return A2(
			$elm$core$Tuple$mapFirst,
			$author$project$Form$DatePicker$Model,
			A2($author$project$Form$DatePicker$Internal$update, msg, state));
	});
var $elm$core$String$toFloat = _String_toFloat;
var $author$project$Form$FloatInput$Internal$update = F2(
	function (_v0, state) {
		var string = _v0.a;
		var _v1 = _Utils_Tuple2(
			$elm$core$String$toFloat(string),
			string === '');
		if ((_v1.a.$ === 'Nothing') && (!_v1.b)) {
			var _v2 = _v1.a;
			return _Utils_update(
				state,
				{bypassLazy: state.bypassLazy + 1});
		} else {
			return _Utils_update(
				state,
				{
					value: A2($author$project$Resettable$update, string, state.value)
				});
		}
	});
var $author$project$Form$FloatInput$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return $author$project$Form$FloatInput$Model(
			A2($author$project$Form$FloatInput$Internal$update, msg, state));
	});
var $author$project$Form$Input$Internal$update = F2(
	function (_v0, state) {
		var string = _v0.a;
		return _Utils_update(
			state,
			{
				value: A2($author$project$Resettable$update, string, state.value)
			});
	});
var $author$project$Form$Input$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return $author$project$Form$Input$Model(
			A2($author$project$Form$Input$Internal$update, msg, state));
	});
var $author$project$Form$IntInput$Internal$update = F2(
	function (_v0, state) {
		var string = _v0.a;
		var _v1 = _Utils_Tuple2(
			$elm$core$String$toInt(string),
			string === '');
		if ((_v1.a.$ === 'Nothing') && (!_v1.b)) {
			var _v2 = _v1.a;
			return _Utils_update(
				state,
				{bypassLazy: state.bypassLazy + 1});
		} else {
			return _Utils_update(
				state,
				{
					value: A2($author$project$Resettable$update, string, state.value)
				});
		}
	});
var $author$project$Form$IntInput$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return $author$project$Form$IntInput$Model(
			A2($author$project$Form$IntInput$Internal$update, msg, state));
	});
var $author$project$Form$Helpers$getNextOption = F2(
	function (options, mFocusedOption) {
		if (mFocusedOption.$ === 'Nothing') {
			return $elm$core$List$head(options);
		} else {
			var focusedOption = mFocusedOption.a;
			return $elm$core$List$head(
				A2(
					$elm$core$List$drop,
					1,
					A2(
						$elm_community$list_extra$List$Extra$dropWhile,
						$elm$core$Basics$neq(focusedOption),
						options)));
		}
	});
var $author$project$Form$Helpers$getPreviousOption = F2(
	function (options, focusedOption) {
		return A2(
			$author$project$Form$Helpers$getNextOption,
			$elm$core$List$reverse(options),
			focusedOption);
	});
var $author$project$Form$MultiSelect$Internal$toggleOption = F2(
	function (option, selectedOptions) {
		var options = $author$project$Resettable$getValue(selectedOptions);
		var newOptions = function () {
			var _v0 = A2($elm$core$List$member, option, options);
			if (_v0) {
				return A2(
					$elm$core$List$filter,
					$elm$core$Basics$neq(option),
					options);
			} else {
				return A2($elm$core$List$cons, option, options);
			}
		}();
		return A2($author$project$Resettable$update, newOptions, selectedOptions);
	});
var $author$project$Form$MultiSelect$Internal$update = F2(
	function (msg, state) {
		switch (msg.$) {
			case 'Open':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{isOpen: true}),
					$elm$core$Platform$Cmd$none);
			case 'Blur':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{isOpen: false, searchText: ''}),
					$elm$core$Platform$Cmd$none);
			case 'Select':
				var option = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							selectedOptions: A2($author$project$Form$MultiSelect$Internal$toggleOption, option, state.selectedOptions)
						}),
					$elm$core$Platform$Cmd$none);
			case 'Clear':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							selectedOptions: A2($author$project$Resettable$update, _List_Nil, state.selectedOptions)
						}),
					$elm$core$Platform$Cmd$none);
			case 'SelectKey':
				switch (msg.b.$) {
					case 'Up':
						var _v1 = msg.b;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A2(
										$author$project$Form$Helpers$getPreviousOption,
										$mgold$elm_nonempty_list$List$Nonempty$toList(state.options),
										state.focusedOption)
								}),
							$elm$core$Platform$Cmd$none);
					case 'Down':
						var _v2 = msg.b;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A2(
										$author$project$Form$Helpers$getNextOption,
										$mgold$elm_nonempty_list$List$Nonempty$toList(state.options),
										state.focusedOption)
								}),
							$elm$core$Platform$Cmd$none);
					case 'Backspace':
						var _v3 = msg.b;
						return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
					case 'AlphaNum':
						return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
					default:
						var isOptionDisabled = msg.a;
						var _v4 = state.focusedOption;
						if (_v4.$ === 'Nothing') {
							return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
						} else {
							var focusedOption = _v4.a;
							var _v5 = isOptionDisabled(focusedOption);
							if (_v5) {
								return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
							} else {
								return _Utils_Tuple2(
									_Utils_update(
										state,
										{
											selectedOptions: A2($author$project$Form$MultiSelect$Internal$toggleOption, focusedOption, state.selectedOptions)
										}),
									$elm$core$Platform$Cmd$none);
							}
						}
				}
			case 'UpdateSearchText':
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{searchText: value}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Form$MultiSelect$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return A2(
			$elm$core$Tuple$mapFirst,
			$author$project$Form$MultiSelect$Model,
			A2($author$project$Form$MultiSelect$Internal$update, msg, state));
	});
var $author$project$Form$SearchSelect$Internal$Response = function (a) {
	return {$: 'Response', a: a};
};
var $elm$http$Http$Internal$EmptyBody = {$: 'EmptyBody'};
var $elm$http$Http$emptyBody = $elm$http$Http$Internal$EmptyBody;
var $elm$http$Http$BadPayload = F2(
	function (a, b) {
		return {$: 'BadPayload', a: a, b: b};
	});
var $elm$http$Http$BadStatus = function (a) {
	return {$: 'BadStatus', a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 'BadUrl', a: a};
};
var $elm$http$Http$Internal$FormDataBody = function (a) {
	return {$: 'FormDataBody', a: a};
};
var $elm$http$Http$NetworkError = {$: 'NetworkError'};
var $elm$http$Http$Timeout = {$: 'Timeout'};
var $elm$core$Maybe$isJust = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $elm$http$Http$Internal$isStringBody = function (body) {
	if (body.$ === 'StringBody') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (ra.$ === 'Ok') {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$http$Http$expectStringResponse = _Http_expectStringResponse;
var $elm$http$Http$expectJson = function (decoder) {
	return $elm$http$Http$expectStringResponse(
		function (response) {
			var _v0 = A2($elm$json$Json$Decode$decodeString, decoder, response.body);
			if (_v0.$ === 'Err') {
				var decodeError = _v0.a;
				return $elm$core$Result$Err(
					$elm$json$Json$Decode$errorToString(decodeError));
			} else {
				var value = _v0.a;
				return $elm$core$Result$Ok(value);
			}
		});
};
var $elm$http$Http$Internal$Request = function (a) {
	return {$: 'Request', a: a};
};
var $elm$http$Http$request = $elm$http$Http$Internal$Request;
var $elm$http$Http$get = F2(
	function (url, decoder) {
		return $elm$http$Http$request(
			{
				body: $elm$http$Http$emptyBody,
				expect: $elm$http$Http$expectJson(decoder),
				headers: _List_Nil,
				method: 'GET',
				timeout: $elm$core$Maybe$Nothing,
				url: url,
				withCredentials: false
			});
	});
var $author$project$Form$SearchSelect$Internal$searchResponseDecoder = function (optionDecoder) {
	return $elm$json$Json$Decode$list(optionDecoder);
};
var $elm$http$Http$toTask = function (_v0) {
	var request_ = _v0.a;
	return A2(_Http_toTask, request_, $elm$core$Maybe$Nothing);
};
var $elm$http$Http$send = F2(
	function (resultToMessage, request_) {
		return A2(
			$elm$core$Task$attempt,
			resultToMessage,
			$elm$http$Http$toTask(request_));
	});
var $author$project$Form$SearchSelect$Internal$searchRequest = F3(
	function (searchUrl, input, optionDecoder) {
		return A2(
			$elm$http$Http$send,
			$author$project$Form$SearchSelect$Internal$Response,
			A2(
				$elm$http$Http$get,
				_Utils_ap(searchUrl, input),
				$author$project$Form$SearchSelect$Internal$searchResponseDecoder(optionDecoder)));
	});
var $author$project$Form$SearchSelect$Internal$shouldSearch = F2(
	function (inputMinimum, input) {
		return _Utils_cmp(
			$elm$core$String$length(input),
			inputMinimum) > -1;
	});
var $author$project$Form$SearchSelect$Internal$update = F2(
	function (msg, state) {
		switch (msg.$) {
			case 'Open':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{isOpen: true}),
					$elm$core$Platform$Cmd$none);
			case 'Blur':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{focusedOption: $elm$core$Maybe$Nothing, input: '', isOpen: false}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateSearchInput':
				var inputMinimum = msg.a;
				var value = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							input: value,
							isSearching: A2($author$project$Form$SearchSelect$Internal$shouldSearch, inputMinimum, value)
						}),
					A2($author$project$Form$SearchSelect$Internal$shouldSearch, inputMinimum, value) ? A3($author$project$Form$SearchSelect$Internal$searchRequest, state.searchUrl, value, state.optionDecoder) : $elm$core$Platform$Cmd$none);
			case 'Response':
				var result = msg.a;
				if (result.$ === 'Err') {
					var error = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{isSearching: false}),
						$elm$core$Platform$Cmd$none);
				} else {
					var options = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							state,
							{focusedOption: $elm$core$Maybe$Nothing, isSearching: false, options: options}),
						$elm$core$Platform$Cmd$none);
				}
			case 'Clear':
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							selectedOption: A2($author$project$Resettable$update, $elm$core$Maybe$Nothing, state.selectedOption)
						}),
					$elm$core$Platform$Cmd$none);
			case 'Select':
				var selectedOption = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						state,
						{
							input: '',
							selectedOption: A2(
								$author$project$Resettable$update,
								$elm$core$Maybe$Just(selectedOption),
								state.selectedOption)
						}),
					$elm$core$Platform$Cmd$none);
			default:
				switch (msg.a.$) {
					case 'Up':
						var _v2 = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A2($author$project$Form$Helpers$getPreviousOption, state.options, state.focusedOption)
								}),
							$elm$core$Platform$Cmd$none);
					case 'Down':
						var _v3 = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								state,
								{
									focusedOption: A2($author$project$Form$Helpers$getNextOption, state.options, state.focusedOption)
								}),
							$elm$core$Platform$Cmd$none);
					default:
						var _v4 = state.focusedOption;
						if (_v4.$ === 'Nothing') {
							return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
						} else {
							var focusedOption = _v4.a;
							return _Utils_Tuple2(
								_Utils_update(
									state,
									{
										input: '',
										isOpen: false,
										selectedOption: A2(
											$author$project$Resettable$update,
											$elm$core$Maybe$Just(focusedOption),
											state.selectedOption)
									}),
								$elm$core$Platform$Cmd$none);
						}
				}
		}
	});
var $author$project$Form$SearchSelect$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return A2(
			$elm$core$Tuple$mapFirst,
			$author$project$Form$SearchSelect$Model,
			A2($author$project$Form$SearchSelect$Internal$update, msg, state));
	});
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $author$project$Form$TextArea$Internal$replace = F2(
	function (_v0, acc) {
		var search = _v0.a;
		var replacement = _v0.b;
		return A3($elm$core$String$replace, search, replacement, acc);
	});
var $author$project$Form$TextArea$Internal$update = F2(
	function (msg, state) {
		var string = msg.a;
		return _Utils_update(
			state,
			{
				value: A2(
					$author$project$Resettable$update,
					A3($elm$core$List$foldl, $author$project$Form$TextArea$Internal$replace, string, state.replacements),
					state.value)
			});
	});
var $author$project$Form$TextArea$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		return $author$project$Form$TextArea$Model(
			A2($author$project$Form$TextArea$Internal$update, msg, state));
	});
var $author$project$ToolTip$update = F2(
	function (msg, _v0) {
		var state = _v0.a;
		if (msg.$ === 'MouseEnter') {
			return $author$project$ToolTip$Model(
				_Utils_update(
					state,
					{isOpen: true}));
		} else {
			return $author$project$ToolTip$Model(
				_Utils_update(
					state,
					{isOpen: false}));
		}
	});
var $author$project$Index$Update$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 'AddGreenToaster':
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 'AddRedToaster':
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 'InputMsg':
				var inputMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							input: A2($author$project$Form$Input$update, inputMsg, model.input)
						}),
					$elm$core$Platform$Cmd$none);
			case 'IntInputMsg':
				var intInputMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							intInput: A2($author$project$Form$IntInput$update, intInputMsg, model.intInput)
						}),
					$elm$core$Platform$Cmd$none);
			case 'FloatInputMsg':
				var floatInputMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							floatInput: A2($author$project$Form$FloatInput$update, floatInputMsg, model.floatInput)
						}),
					$elm$core$Platform$Cmd$none);
			case 'SelectMsg':
				var selectMsg = msg.a;
				var _v1 = A2($author$project$Form$Select$update, selectMsg, model.select);
				var newSelect = _v1.a;
				var cmd = _v1.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{select: newSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$SelectMsg, cmd));
			case 'MultiSelectMsg':
				var multiSelectMsg = msg.a;
				var _v2 = A2($author$project$Form$MultiSelect$update, multiSelectMsg, model.multiSelect);
				var newMultiSelect = _v2.a;
				var cmd = _v2.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{multiSelect: newMultiSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$MultiSelectMsg, cmd));
			case 'SearchSelectMsg':
				var searchSelectMsg = msg.a;
				var _v3 = A2($author$project$Form$SearchSelect$update, searchSelectMsg, model.searchSelect);
				var newSearchSelect = _v3.a;
				var cmd = _v3.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{searchSelect: newSearchSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$SearchSelectMsg, cmd));
			case 'DatePickerMsg':
				var datePickerMsg = msg.a;
				var _v4 = A2($author$project$Form$DatePicker$update, datePickerMsg, model.datePicker);
				var newDatePicker = _v4.a;
				var cmd = _v4.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{datePicker: newDatePicker}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$DatePickerMsg, cmd));
			case 'DatePicker2Msg':
				var datePickerMsg = msg.a;
				var _v5 = A2($author$project$Form$DatePicker$update, datePickerMsg, model.datePicker2);
				var newDatePicker = _v5.a;
				var cmd = _v5.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{datePicker2: newDatePicker}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$DatePicker2Msg, cmd));
			case 'DatePicker3Msg':
				var datePickerMsg = msg.a;
				var _v6 = A2($author$project$Form$DatePicker$update, datePickerMsg, model.datePicker3);
				var newDatePicker = _v6.a;
				var cmd = _v6.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{datePicker3: newDatePicker}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$DatePicker3Msg, cmd));
			case 'TextAreaMsg':
				var textAreaMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							textArea: A2($author$project$Form$TextArea$update, textAreaMsg, model.textArea)
						}),
					$elm$core$Platform$Cmd$none);
			case 'TextAreaWrapMsg':
				var textAreaWrapMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							textAreaWrap: A2($author$project$Form$TextArea$update, textAreaWrapMsg, model.textAreaWrap)
						}),
					$elm$core$Platform$Cmd$none);
			case 'Toggle1':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{toggle1: !model.toggle1}),
					$elm$core$Platform$Cmd$none);
			case 'Toggle2':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{toggle2: !model.toggle2}),
					$elm$core$Platform$Cmd$none);
			case 'DisabledToggle':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{toggle3: !model.toggle3}),
					$elm$core$Platform$Cmd$none);
			case 'ToolTip1Msg':
				var toolTipMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							toolTip1: A2($author$project$ToolTip$update, toolTipMsg, model.toolTip1)
						}),
					$elm$core$Platform$Cmd$none);
			case 'ToolTip2Msg':
				var toolTipMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							toolTip2: A2($author$project$ToolTip$update, toolTipMsg, model.toolTip2)
						}),
					$elm$core$Platform$Cmd$none);
			case 'ToolTip3Msg':
				var toolTipMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							toolTip3: A2($author$project$ToolTip$update, toolTipMsg, model.toolTip3)
						}),
					$elm$core$Platform$Cmd$none);
			case 'ToolTip4Msg':
				var toolTipMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							toolTip4: A2($author$project$ToolTip$update, toolTipMsg, model.toolTip4)
						}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateName':
				var inputMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							name: A2($author$project$Form$Input$update, inputMsg, model.name)
						}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateStartDate':
				var datePickerMsg = msg.a;
				var _v7 = A2($author$project$Form$DatePicker$update, datePickerMsg, model.startDate);
				var newDatePicker = _v7.a;
				var cmd = _v7.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{startDate: newDatePicker}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$UpdateStartDate, cmd));
			case 'UpdateEmail':
				var inputMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							email: A2($author$project$Form$Input$update, inputMsg, model.email)
						}),
					$elm$core$Platform$Cmd$none);
			case 'UpdatePreferredGenre':
				var selectMsg = msg.a;
				var _v8 = A2($author$project$Form$Select$update, selectMsg, model.preferredGenre);
				var newSelect = _v8.a;
				var cmd = _v8.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{preferredGenre: newSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$SelectMsg, cmd));
			case 'UpdateCountryOfBirth':
				var searchSelectMsg = msg.a;
				var _v9 = A2($author$project$Form$SearchSelect$update, searchSelectMsg, model.countryOfBirth);
				var newSearchSelect = _v9.a;
				var cmd = _v9.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{countryOfBirth: newSearchSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$UpdateCountryOfBirth, cmd));
			case 'ToggleSmModal':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalSmOpen: !model.modalSmOpen}),
					$elm$core$Platform$Cmd$none);
			case 'ToggleLgModal':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalLgOpen: !model.modalLgOpen}),
					$elm$core$Platform$Cmd$none);
			case 'ToggleResizeModal':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalResizeOpen: !model.modalResizeOpen}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateMaybeBLockSelect':
				var selectMsg = msg.a;
				var _v10 = A2($author$project$Form$Select$update, selectMsg, model.maybeBlockSelect);
				var newSelect = _v10.a;
				var cmd = _v10.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{maybeBlockSelect: newSelect}),
					A2($elm$core$Platform$Cmd$map, $author$project$Index$Msg$SelectMsg, cmd));
			default:
				var isGreen = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{isGridButtonGreen: isGreen}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Toasters$Internal$tick = F2(
	function (toaster, toasters) {
		var _v0 = toaster.ticks > 100;
		if (_v0) {
			return toasters;
		} else {
			return A2(
				$elm$core$List$append,
				toasters,
				_List_fromArray(
					[
						_Utils_update(
						toaster,
						{ticks: toaster.ticks + 1})
					]));
		}
	});
var $author$project$Toasters$Internal$update = F2(
	function (toasterMsg, toasters) {
		if (toasterMsg.$ === 'Close') {
			var toaster = toasterMsg.a;
			return A2(
				$elm$core$List$filter,
				$elm$core$Basics$neq(toaster),
				toasters);
		} else {
			return A3($elm$core$List$foldl, $author$project$Toasters$Internal$tick, _List_Nil, toasters);
		}
	});
var $author$project$Toasters$update = F2(
	function (_v0, _v1) {
		var internalMsg = _v0.a;
		var toasters = _v1.a;
		return $author$project$Toasters$Model(
			A2($author$project$Toasters$Internal$update, internalMsg, toasters));
	});
var $author$project$Update$update = F2(
	function (msg, model) {
		var _v0 = _Utils_Tuple2(msg, model.page);
		_v0$6:
		while (true) {
			switch (_v0.a.$) {
				case 'Navigate':
					if (_v0.a.a.$ === 'Internal') {
						var url = _v0.a.a.a;
						return _Utils_Tuple2(
							model,
							A2(
								$elm$browser$Browser$Navigation$pushUrl,
								model.navigationKey,
								$elm$url$Url$toString(url)));
					} else {
						var href = _v0.a.a.a;
						return _Utils_Tuple2(
							model,
							$elm$browser$Browser$Navigation$load(href));
					}
				case 'UrlChange':
					var url = _v0.a.a;
					var _v1 = $author$project$Route$fromUrl(url);
					if (_v1.$ === 'Nothing') {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{page: $author$project$Page$NotFound}),
							$elm$core$Platform$Cmd$none);
					} else {
						switch (_v1.a.$) {
							case 'Index':
								var _v2 = _v1.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											page: $author$project$Page$Index($author$project$Index$Model$initialModel)
										}),
									$elm$core$Platform$Cmd$none);
							case 'Admin':
								var adminRoute = _v1.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{
											page: $author$project$Page$Admin(
												$author$project$Admin$Page$fromRoute(adminRoute))
										}),
									$elm$core$Platform$Cmd$none);
							case 'Trainer':
								var trainerRoute = _v1.a.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{page: $author$project$Page$NotFound}),
									$elm$core$Platform$Cmd$none);
							default:
								var _v3 = _v1.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{page: $author$project$Page$Test}),
									$elm$core$Platform$Cmd$none);
						}
					}
				case 'ToastersMsg':
					var toasterMsg = _v0.a.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								toasters: A2($author$project$Toasters$update, toasterMsg, model.toasters)
							}),
						$elm$core$Platform$Cmd$none);
				case 'ToggleAdminMenu':
					var _v4 = _v0.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{isAdminMenuOpen: !model.isAdminMenuOpen}),
						$elm$core$Platform$Cmd$none);
				case 'IndexMsg':
					if (_v0.b.$ === 'Index') {
						var indexMsg = _v0.a.a;
						var indexModel = _v0.b.a;
						return A2(
							$elm$core$Tuple$mapSecond,
							$elm$core$Platform$Cmd$map($author$project$Msg$IndexMsg),
							A2(
								$elm$core$Tuple$mapFirst,
								function (indexModel_) {
									return _Utils_update(
										model,
										{
											page: $author$project$Page$Index(indexModel_)
										});
								},
								A2($author$project$Index$Update$update, indexMsg, indexModel)));
					} else {
						break _v0$6;
					}
				default:
					break _v0$6;
			}
		}
		return _Debug_todo(
			'Update',
			{
				start: {line: 54, column: 13},
				end: {line: 54, column: 23}
			})('other updates');
	});
var $author$project$Main$init = F2(
	function (url, navigationKey) {
		return A2(
			$author$project$Update$update,
			$author$project$Msg$UrlChange(url),
			$author$project$Model$initialModel(navigationKey));
	});
var $author$project$Msg$ToastersMsg = function (a) {
	return {$: 'ToastersMsg', a: a};
};
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $author$project$Toasters$InternalMsg = function (a) {
	return {$: 'InternalMsg', a: a};
};
var $author$project$Toasters$Internal$Tick = {$: 'Tick'};
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 'Every', a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {processes: processes, taggers: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 'Nothing') {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.processes;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(_Utils_Tuple0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $author$project$Toasters$Internal$subscription = function (toasters) {
	var _v0 = $elm$core$List$isEmpty(toasters);
	if (!_v0) {
		return A2(
			$elm$time$Time$every,
			50,
			$elm$core$Basics$always($author$project$Toasters$Internal$Tick));
	} else {
		return $elm$core$Platform$Sub$none;
	}
};
var $author$project$Toasters$subscription = function (_v0) {
	var toasters = _v0.a;
	return A2(
		$elm$core$Platform$Sub$map,
		$author$project$Toasters$InternalMsg,
		$author$project$Toasters$Internal$subscription(toasters));
};
var $author$project$Subscriptions$subscriptions = function (model) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				A2(
				$elm$core$Platform$Sub$map,
				$author$project$Msg$ToastersMsg,
				$author$project$Toasters$subscription(model.toasters))
			]));
};
var $rtfeldman$elm_css$VirtualDom$Styled$Node = F3(
	function (a, b, c) {
		return {$: 'Node', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$Node;
var $rtfeldman$elm_css$Html$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$node;
var $rtfeldman$elm_css$Html$Styled$div = $rtfeldman$elm_css$Html$Styled$node('div');
var $rtfeldman$elm_css$VirtualDom$Styled$KeyedNode = F3(
	function (a, b, c) {
		return {$: 'KeyedNode', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$KeyedNodeNS = F4(
	function (a, b, c, d) {
		return {$: 'KeyedNodeNS', a: a, b: b, c: c, d: d};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$NodeNS = F4(
	function (a, b, c, d) {
		return {$: 'NodeNS', a: a, b: b, c: c, d: d};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$Unstyled = function (a) {
	return {$: 'Unstyled', a: a};
};
var $rtfeldman$elm_css$VirtualDom$Styled$Attribute = F3(
	function (a, b, c) {
		return {$: 'Attribute', a: a, b: b, c: c};
	});
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $rtfeldman$elm_css$VirtualDom$Styled$mapAttribute = F2(
	function (transform, _v0) {
		var prop = _v0.a;
		var styles = _v0.b;
		var classname = _v0.c;
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$mapAttribute, transform, prop),
			styles,
			classname);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$map = F2(
	function (transform, vdomNode) {
		switch (vdomNode.$) {
			case 'Node':
				var elemType = vdomNode.a;
				var properties = vdomNode.b;
				var children = vdomNode.c;
				return A3(
					$rtfeldman$elm_css$VirtualDom$Styled$Node,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$map(transform),
						children));
			case 'NodeNS':
				var ns = vdomNode.a;
				var elemType = vdomNode.b;
				var properties = vdomNode.c;
				var children = vdomNode.d;
				return A4(
					$rtfeldman$elm_css$VirtualDom$Styled$NodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$map(transform),
						children));
			case 'KeyedNode':
				var elemType = vdomNode.a;
				var properties = vdomNode.b;
				var children = vdomNode.c;
				return A3(
					$rtfeldman$elm_css$VirtualDom$Styled$KeyedNode,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						function (_v1) {
							var key = _v1.a;
							var child = _v1.b;
							return _Utils_Tuple2(
								key,
								A2($rtfeldman$elm_css$VirtualDom$Styled$map, transform, child));
						},
						children));
			case 'KeyedNodeNS':
				var ns = vdomNode.a;
				var elemType = vdomNode.b;
				var properties = vdomNode.c;
				var children = vdomNode.d;
				return A4(
					$rtfeldman$elm_css$VirtualDom$Styled$KeyedNodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						function (_v2) {
							var key = _v2.a;
							var child = _v2.b;
							return _Utils_Tuple2(
								key,
								A2($rtfeldman$elm_css$VirtualDom$Styled$map, transform, child));
						},
						children));
			default:
				var vdom = vdomNode.a;
				return $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(
					A2($elm$virtual_dom$VirtualDom$map, transform, vdom));
		}
	});
var $rtfeldman$elm_css$Html$Styled$map = $rtfeldman$elm_css$VirtualDom$Styled$map;
var $rtfeldman$elm_css$Html$Styled$a = $rtfeldman$elm_css$Html$Styled$node('a');
var $rtfeldman$elm_css$VirtualDom$Styled$text = function (str) {
	return $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(
		$elm$virtual_dom$VirtualDom$text(str));
};
var $rtfeldman$elm_css$Html$Styled$text = $rtfeldman$elm_css$VirtualDom$Styled$text;
var $author$project$View$adminMenu = function (isOpen) {
	if (!isOpen) {
		return $rtfeldman$elm_css$Html$Styled$text('');
	} else {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text('Admin Menu!')
				]));
	}
};
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$property = F2(
	function (key, value) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$property, key, value),
			_List_Nil,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$href = function (url) {
	return A2($rtfeldman$elm_css$Html$Styled$Attributes$stringProperty, 'href', url);
};
var $author$project$Admin$Route$toString = function (route) {
	if (route.$ === 'Courses') {
		return '/courses';
	} else {
		return '/units';
	}
};
var $author$project$Trainer$Route$toString = function (route) {
	if (route.$ === 'TrainingPlan') {
		return '/training-plan';
	} else {
		return '/settings';
	}
};
var $author$project$Route$toString = function (route) {
	switch (route.$) {
		case 'Index':
			return '/';
		case 'Admin':
			var adminRoute = route.a;
			return '/admin' + $author$project$Admin$Route$toString(adminRoute);
		case 'Trainer':
			var trainerRoute = route.a;
			return '/trainer' + $author$project$Trainer$Route$toString(trainerRoute);
		default:
			return '/test';
	}
};
var $author$project$Route$href = function (targetRoute) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$href(
		$author$project$Route$toString(targetRoute));
};
var $author$project$View$menu = function (isAdminMenuOpen) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$a,
				_List_fromArray(
					[
						$author$project$Route$href($author$project$Route$Index)
					]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('Index')
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$a,
				_List_fromArray(
					[
						$author$project$Route$href(
						$author$project$Route$Admin($author$project$Admin$Route$Courses))
					]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('Admin')
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$a,
				_List_fromArray(
					[
						$author$project$Route$href(
						$author$project$Route$Trainer($author$project$Trainer$Route$TrainingPlan))
					]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('Trainer')
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$a,
				_List_fromArray(
					[
						$author$project$Route$href($author$project$Route$Test)
					]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('Test')
					])),
				$author$project$View$adminMenu(isAdminMenuOpen)
			]));
};
var $author$project$Msg$AdminMsg = function (a) {
	return {$: 'AdminMsg', a: a};
};
var $author$project$Admin$View$view = function (page) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_Nil,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$text('admin view')
			]));
};
var $author$project$Index$Msg$AddGreenToaster = {$: 'AddGreenToaster'};
var $author$project$Index$Msg$AddRedToaster = {$: 'AddRedToaster'};
var $author$project$Index$Msg$DisabledToggle = {$: 'DisabledToggle'};
var $author$project$Index$Msg$FloatInputMsg = function (a) {
	return {$: 'FloatInputMsg', a: a};
};
var $author$project$Grid$Size$Four = {$: 'Four'};
var $author$project$Index$Msg$InputMsg = function (a) {
	return {$: 'InputMsg', a: a};
};
var $author$project$Index$Msg$IntInputMsg = function (a) {
	return {$: 'IntInputMsg', a: a};
};
var $author$project$Grid$Size$Lg = {$: 'Lg'};
var $author$project$Index$Msg$SetGridButtonGreen = function (a) {
	return {$: 'SetGridButtonGreen', a: a};
};
var $author$project$Grid$Size$Six = {$: 'Six'};
var $author$project$Grid$Size$Sm = {$: 'Sm'};
var $author$project$Index$Msg$TextAreaMsg = function (a) {
	return {$: 'TextAreaMsg', a: a};
};
var $author$project$Grid$Size$Three = {$: 'Three'};
var $author$project$Index$Msg$Toggle1 = {$: 'Toggle1'};
var $author$project$Index$Msg$Toggle2 = {$: 'Toggle2'};
var $author$project$Index$Msg$ToggleLgModal = {$: 'ToggleLgModal'};
var $author$project$Index$Msg$ToggleResizeModal = {$: 'ToggleResizeModal'};
var $author$project$Index$Msg$ToggleSmModal = {$: 'ToggleSmModal'};
var $author$project$Index$Msg$ToolTip1Msg = function (a) {
	return {$: 'ToolTip1Msg', a: a};
};
var $author$project$Index$Msg$ToolTip2Msg = function (a) {
	return {$: 'ToolTip2Msg', a: a};
};
var $author$project$Index$Msg$ToolTip3Msg = function (a) {
	return {$: 'ToolTip3Msg', a: a};
};
var $author$project$Index$Msg$ToolTip4Msg = function (a) {
	return {$: 'ToolTip4Msg', a: a};
};
var $author$project$Grid$Size$Twelve = {$: 'Twelve'};
var $author$project$Grid$Size$Two = {$: 'Two'};
var $author$project$Index$Msg$UpdateEmail = function (a) {
	return {$: 'UpdateEmail', a: a};
};
var $author$project$Index$Msg$UpdateMaybeBLockSelect = function (a) {
	return {$: 'UpdateMaybeBLockSelect', a: a};
};
var $author$project$Index$Msg$UpdateName = function (a) {
	return {$: 'UpdateName', a: a};
};
var $author$project$Index$Msg$UpdatePreferredGenre = function (a) {
	return {$: 'UpdatePreferredGenre', a: a};
};
var $author$project$Grid$Size$Xl = {$: 'Xl'};
var $author$project$Grid$Size$Xs = {$: 'Xs'};
var $author$project$Card$CardBlock = function (a) {
	return {$: 'CardBlock', a: a};
};
var $author$project$Card$CardBlockConfig = F3(
	function (defaultCols, sizes, children) {
		return {children: children, defaultCols: defaultCols, sizes: sizes};
	});
var $author$project$Card$block = F2(
	function (cols, children) {
		return $author$project$Card$CardBlock(
			A3($author$project$Card$CardBlockConfig, cols, _List_Nil, children));
	});
var $author$project$Modal$ModalBlock = function (a) {
	return {$: 'ModalBlock', a: a};
};
var $author$project$Modal$ModalBlockConfig = F3(
	function (defaultCols, sizes, children) {
		return {children: children, defaultCols: defaultCols, sizes: sizes};
	});
var $author$project$Modal$block = F2(
	function (cols, children) {
		return $author$project$Modal$ModalBlock(
			A3($author$project$Modal$ModalBlockConfig, cols, _List_Nil, children));
	});
var $author$project$Modal$blockSizes = F3(
	function (cols, sizes, children) {
		return $author$project$Modal$ModalBlock(
			A3($author$project$Modal$ModalBlockConfig, cols, sizes, children));
	});
var $author$project$ToolTip$Blue = {$: 'Blue'};
var $author$project$ToolTip$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$ToolTip$blue = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{color: $author$project$ToolTip$Blue}));
};
var $author$project$Card$Config = function (a) {
	return {$: 'Config', a: a};
};
var $author$project$Card$body = F2(
	function (cardBlocks, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Card$Config(
			_Utils_update(
				viewConfig,
				{cardBlocks: cardBlocks}));
	});
var $author$project$Modal$Config = function (a) {
	return {$: 'Config', a: a};
};
var $author$project$Modal$body = F2(
	function (modalBlocks, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Modal$Config(
			_Utils_update(
				viewConfig,
				{modalBlocks: modalBlocks}));
	});
var $author$project$ToolTip$Bottom = {$: 'Bottom'};
var $author$project$ToolTip$bottom = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{placement: $author$project$ToolTip$Bottom}));
};
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');
var $feathericons$elm_feather$FeatherIcons$Icon = function (a) {
	return {$: 'Icon', a: a};
};
var $feathericons$elm_feather$FeatherIcons$defaultAttributes = function (name) {
	return {
		_class: $elm$core$Maybe$Just('feather feather-' + name),
		size: 24,
		sizeUnit: '',
		strokeWidth: 2,
		viewBox: '0 0 24 24'
	};
};
var $feathericons$elm_feather$FeatherIcons$makeBuilder = F2(
	function (name, src) {
		return $feathericons$elm_feather$FeatherIcons$Icon(
			{
				attrs: $feathericons$elm_feather$FeatherIcons$defaultAttributes(name),
				src: src
			});
	});
var $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');
var $elm$svg$Svg$Attributes$rx = _VirtualDom_attribute('rx');
var $elm$svg$Svg$Attributes$ry = _VirtualDom_attribute('ry');
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');
var $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');
var $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');
var $feathericons$elm_feather$FeatherIcons$xmlns = function (s) {
	return A2(
		$elm$virtual_dom$VirtualDom$property,
		'xmlns',
		$elm$json$Json$Encode$string(s));
};
var $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');
var $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');
var $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');
var $feathericons$elm_feather$FeatherIcons$calendar = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'calendar',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-calendar')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('3'),
							$elm$svg$Svg$Attributes$y('4'),
							$elm$svg$Svg$Attributes$width('18'),
							$elm$svg$Svg$Attributes$height('18'),
							$elm$svg$Svg$Attributes$rx('2'),
							$elm$svg$Svg$Attributes$ry('2')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('16'),
							$elm$svg$Svg$Attributes$y1('2'),
							$elm$svg$Svg$Attributes$x2('16'),
							$elm$svg$Svg$Attributes$y2('6')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('8'),
							$elm$svg$Svg$Attributes$y1('2'),
							$elm$svg$Svg$Attributes$x2('8'),
							$elm$svg$Svg$Attributes$y2('6')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('3'),
							$elm$svg$Svg$Attributes$y1('10'),
							$elm$svg$Svg$Attributes$x2('21'),
							$elm$svg$Svg$Attributes$y2('10')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Grid$Col = function (a) {
	return {$: 'Col', a: a};
};
var $author$project$Grid$ColConfig = F3(
	function (defaultCols, sizes, children) {
		return {children: children, defaultCols: defaultCols, sizes: sizes};
	});
var $author$project$Grid$col = F2(
	function (cols, children) {
		return $author$project$Grid$Col(
			A3($author$project$Grid$ColConfig, cols, _List_Nil, children));
	});
var $author$project$Grid$colSizes = F3(
	function (cols, sizes, children) {
		return $author$project$Grid$Col(
			A3($author$project$Grid$ColConfig, cols, sizes, children));
	});
var $elm$svg$Svg$circle = $elm$svg$Svg$trustedNode('circle');
var $elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');
var $elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');
var $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');
var $elm$svg$Svg$polygon = $elm$svg$Svg$trustedNode('polygon');
var $elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');
var $feathericons$elm_feather$FeatherIcons$compass = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'compass',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-compass')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$circle,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$cx('12'),
							$elm$svg$Svg$Attributes$cy('12'),
							$elm$svg$Svg$Attributes$r('10')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$polygon,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76')
						]),
					_List_Nil)
				]))
		]));
var $rtfeldman$elm_css$Css$Structure$Compatible = {$: 'Compatible'};
var $rtfeldman$elm_css$Css$auto = {alignItemsOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, cursor: $rtfeldman$elm_css$Css$Structure$Compatible, flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible, intOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, justifyContentOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, overflow: $rtfeldman$elm_css$Css$Structure$Compatible, pointerEvents: $rtfeldman$elm_css$Css$Structure$Compatible, tableLayout: $rtfeldman$elm_css$Css$Structure$Compatible, textRendering: $rtfeldman$elm_css$Css$Structure$Compatible, touchAction: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'auto'};
var $rtfeldman$elm_css$Css$borderBox = {backgroundClip: $rtfeldman$elm_css$Css$Structure$Compatible, boxSizing: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'border-box'};
var $rtfeldman$elm_css$Css$Preprocess$AppendProperty = function (a) {
	return {$: 'AppendProperty', a: a};
};
var $rtfeldman$elm_css$Css$property = F2(
	function (key, value) {
		return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(key + (':' + value));
	});
var $rtfeldman$elm_css$Css$prop1 = F2(
	function (key, arg) {
		return A2($rtfeldman$elm_css$Css$property, key, arg.value);
	});
var $rtfeldman$elm_css$Css$boxSizing = $rtfeldman$elm_css$Css$prop1('box-sizing');
var $rtfeldman$elm_css$Css$calcExpressionToString = function (expression) {
	if (expression.$ === 'Addition') {
		return '+';
	} else {
		return '-';
	}
};
var $rtfeldman$elm_css$Css$cssFunction = F2(
	function (funcName, args) {
		return funcName + ('(' + (A2($elm$core$String$join, ', ', args) + ')'));
	});
var $rtfeldman$elm_css$Css$calc = F3(
	function (firstExpr, expression, secondExpr) {
		var withoutCalcStr = function (l) {
			return A2($elm$core$String$startsWith, 'calc(', l.value) ? A2($elm$core$String$dropLeft, 4, l.value) : l.value;
		};
		var calcs = A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					withoutCalcStr(firstExpr),
					$rtfeldman$elm_css$Css$calcExpressionToString(expression),
					withoutCalcStr(secondExpr)
				]));
		var value = A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'calc',
			_List_fromArray(
				[calcs]));
		return {calc: $rtfeldman$elm_css$Css$Structure$Compatible, flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible, fontSize: $rtfeldman$elm_css$Css$Structure$Compatible, length: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, textIndent: $rtfeldman$elm_css$Css$Structure$Compatible, value: value};
	});
var $rtfeldman$elm_css$Css$Structure$AllQuery = function (a) {
	return {$: 'AllQuery', a: a};
};
var $rtfeldman$elm_css$Css$Media$all = $rtfeldman$elm_css$Css$Structure$AllQuery;
var $author$project$Grid$SizeHelpers$breakpointPxWidth = function (size) {
	switch (size.$) {
		case 'Xs':
			return 576;
		case 'Sm':
			return 768;
		case 'Md':
			return 992;
		case 'Lg':
			return 1200;
		default:
			return 1600;
	}
};
var $author$project$Grid$SizeHelpers$containerPxWidth = function (size) {
	switch (size.$) {
		case 'Xs':
			return 540;
		case 'Sm':
			return 720;
		case 'Md':
			return 960;
		case 'Lg':
			return 1140;
		default:
			return 1540;
	}
};
var $rtfeldman$elm_css$Css$Media$feature = F2(
	function (key, _v0) {
		var value = _v0.value;
		return {
			feature: key,
			value: $elm$core$Maybe$Just(value)
		};
	});
var $rtfeldman$elm_css$Css$Media$minWidth = function (value) {
	return A2($rtfeldman$elm_css$Css$Media$feature, 'min-width', value);
};
var $rtfeldman$elm_css$Css$PxUnits = {$: 'PxUnits'};
var $elm$core$String$fromFloat = _String_fromNumber;
var $rtfeldman$elm_css$Css$Internal$lengthConverter = F3(
	function (units, unitLabel, numericValue) {
		return {
			absoluteLength: $rtfeldman$elm_css$Css$Structure$Compatible,
			calc: $rtfeldman$elm_css$Css$Structure$Compatible,
			flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible,
			fontSize: $rtfeldman$elm_css$Css$Structure$Compatible,
			length: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
			numericValue: numericValue,
			textIndent: $rtfeldman$elm_css$Css$Structure$Compatible,
			unitLabel: unitLabel,
			units: units,
			value: _Utils_ap(
				$elm$core$String$fromFloat(numericValue),
				unitLabel)
		};
	});
var $rtfeldman$elm_css$Css$px = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$PxUnits, 'px');
var $rtfeldman$elm_css$Css$width = $rtfeldman$elm_css$Css$prop1('width');
var $rtfeldman$elm_css$Css$Preprocess$WithMedia = F2(
	function (a, b) {
		return {$: 'WithMedia', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Media$withMedia = $rtfeldman$elm_css$Css$Preprocess$WithMedia;
var $author$project$Grid$Css$containerWidth = function (size) {
	return A2(
		$rtfeldman$elm_css$Css$Media$withMedia,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Media$all(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$Media$minWidth(
						$rtfeldman$elm_css$Css$px(
							$author$project$Grid$SizeHelpers$breakpointPxWidth(size)))
					]))
			]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$width(
				$rtfeldman$elm_css$Css$px(
					$author$project$Grid$SizeHelpers$containerPxWidth(size)))
			]));
};
var $rtfeldman$elm_css$Css$Subtraction = {$: 'Subtraction'};
var $rtfeldman$elm_css$Css$minus = $rtfeldman$elm_css$Css$Subtraction;
var $rtfeldman$elm_css$Css$PercentageUnits = {$: 'PercentageUnits'};
var $rtfeldman$elm_css$Css$pct = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$PercentageUnits, '%');
var $rtfeldman$elm_css$Css$RemUnits = {$: 'RemUnits'};
var $rtfeldman$elm_css$Css$rem = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$RemUnits, 'rem');
var $author$project$Grid$Size$Md = {$: 'Md'};
var $author$project$Grid$SizeHelpers$sizeAsList = _List_fromArray(
	[$author$project$Grid$Size$Xs, $author$project$Grid$Size$Sm, $author$project$Grid$Size$Md, $author$project$Grid$Size$Lg, $author$project$Grid$Size$Xl]);
var $author$project$Grid$Css$containerWidths = _Utils_ap(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$width(
			A3(
				$rtfeldman$elm_css$Css$calc,
				$rtfeldman$elm_css$Css$pct(100),
				$rtfeldman$elm_css$Css$minus,
				$rtfeldman$elm_css$Css$rem(2)))
		]),
	A2(
		$elm$core$List$map,
		$author$project$Grid$Css$containerWidth,
		$elm$core$List$reverse($author$project$Grid$SizeHelpers$sizeAsList)));
var $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence = function (a) {
	return {$: 'UniversalSelectorSequence', a: a};
};
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $rtfeldman$elm_css$Css$Structure$compactHelp = F2(
	function (declaration, _v0) {
		var keyframesByName = _v0.a;
		var declarations = _v0.b;
		switch (declaration.$) {
			case 'StyleBlockDeclaration':
				var _v2 = declaration.a;
				var properties = _v2.c;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'MediaRule':
				var styleBlocks = declaration.b;
				return A2(
					$elm$core$List$all,
					function (_v3) {
						var properties = _v3.c;
						return $elm$core$List$isEmpty(properties);
					},
					styleBlocks) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'SupportsRule':
				var otherDeclarations = declaration.b;
				return $elm$core$List$isEmpty(otherDeclarations) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'DocumentRule':
				return _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'PageRule':
				var properties = declaration.b;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'FontFace':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'Keyframes':
				var record = declaration.a;
				return $elm$core$String$isEmpty(record.declaration) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					A3($elm$core$Dict$insert, record.name, record.declaration, keyframesByName),
					declarations);
			case 'Viewport':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'CounterStyle':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			default:
				var tuples = declaration.a;
				return A2(
					$elm$core$List$all,
					function (_v4) {
						var properties = _v4.b;
						return $elm$core$List$isEmpty(properties);
					},
					tuples) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
		}
	});
var $rtfeldman$elm_css$Css$Structure$Keyframes = function (a) {
	return {$: 'Keyframes', a: a};
};
var $rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations = F2(
	function (keyframesByName, compactedDeclarations) {
		return A2(
			$elm$core$List$append,
			A2(
				$elm$core$List$map,
				function (_v0) {
					var name = _v0.a;
					var decl = _v0.b;
					return $rtfeldman$elm_css$Css$Structure$Keyframes(
						{declaration: decl, name: name});
				},
				$elm$core$Dict$toList(keyframesByName)),
			compactedDeclarations);
	});
var $rtfeldman$elm_css$Css$Structure$compactStylesheet = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var declarations = _v0.declarations;
	var _v1 = A3(
		$elm$core$List$foldr,
		$rtfeldman$elm_css$Css$Structure$compactHelp,
		_Utils_Tuple2($elm$core$Dict$empty, _List_Nil),
		declarations);
	var keyframesByName = _v1.a;
	var compactedDeclarations = _v1.b;
	var finalDeclarations = A2($rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations, keyframesByName, compactedDeclarations);
	return {charset: charset, declarations: finalDeclarations, imports: imports, namespaces: namespaces};
};
var $rtfeldman$elm_css$Css$Structure$Output$charsetToString = function (charset) {
	return A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			function (str) {
				return '@charset \"' + (str + '\"');
			},
			charset));
};
var $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString = function (expression) {
	return '(' + (expression.feature + (A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			$elm$core$Basics$append(': '),
			expression.value)) + ')'));
};
var $rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString = function (mediaType) {
	switch (mediaType.$) {
		case 'Print':
			return 'print';
		case 'Screen':
			return 'screen';
		default:
			return 'speech';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString = function (mediaQuery) {
	var prefixWith = F3(
		function (str, mediaType, expressions) {
			return str + (' ' + A2(
				$elm$core$String$join,
				' and ',
				A2(
					$elm$core$List$cons,
					$rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString(mediaType),
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, expressions))));
		});
	switch (mediaQuery.$) {
		case 'AllQuery':
			var expressions = mediaQuery.a;
			return A2(
				$elm$core$String$join,
				' and ',
				A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, expressions));
		case 'OnlyQuery':
			var mediaType = mediaQuery.a;
			var expressions = mediaQuery.b;
			return A3(prefixWith, 'only', mediaType, expressions);
		case 'NotQuery':
			var mediaType = mediaQuery.a;
			var expressions = mediaQuery.b;
			return A3(prefixWith, 'not', mediaType, expressions);
		default:
			var str = mediaQuery.a;
			return str;
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString = F2(
	function (name, mediaQuery) {
		return '@import \"' + (name + ($rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString(mediaQuery) + '\"'));
	});
var $rtfeldman$elm_css$Css$Structure$Output$importToString = function (_v0) {
	var name = _v0.a;
	var mediaQueries = _v0.b;
	return A2(
		$elm$core$String$join,
		'\n',
		A2(
			$elm$core$List$map,
			$rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString(name),
			mediaQueries));
};
var $rtfeldman$elm_css$Css$Structure$Output$namespaceToString = function (_v0) {
	var prefix = _v0.a;
	var str = _v0.b;
	return '@namespace ' + (prefix + ('\"' + (str + '\"')));
};
var $rtfeldman$elm_css$Css$Structure$Output$spaceIndent = '    ';
var $rtfeldman$elm_css$Css$Structure$Output$indent = function (str) {
	return _Utils_ap($rtfeldman$elm_css$Css$Structure$Output$spaceIndent, str);
};
var $rtfeldman$elm_css$Css$Structure$Output$noIndent = '';
var $rtfeldman$elm_css$Css$Structure$Output$emitProperty = function (str) {
	return str + ';';
};
var $rtfeldman$elm_css$Css$Structure$Output$emitProperties = function (properties) {
	return A2(
		$elm$core$String$join,
		'\n',
		A2(
			$elm$core$List$map,
			A2($elm$core$Basics$composeL, $rtfeldman$elm_css$Css$Structure$Output$indent, $rtfeldman$elm_css$Css$Structure$Output$emitProperty),
			properties));
};
var $elm$core$String$append = _String_append;
var $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString = function (_v0) {
	var str = _v0.a;
	return '::' + str;
};
var $rtfeldman$elm_css$Css$Structure$Output$combinatorToString = function (combinator) {
	switch (combinator.$) {
		case 'AdjacentSibling':
			return '+';
		case 'GeneralSibling':
			return '~';
		case 'Child':
			return '>';
		default:
			return '';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString = function (repeatableSimpleSelector) {
	switch (repeatableSimpleSelector.$) {
		case 'ClassSelector':
			var str = repeatableSimpleSelector.a;
			return '.' + str;
		case 'IdSelector':
			var str = repeatableSimpleSelector.a;
			return '#' + str;
		case 'PseudoClassSelector':
			var str = repeatableSimpleSelector.a;
			return ':' + str;
		default:
			var str = repeatableSimpleSelector.a;
			return '[' + (str + ']');
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString = function (simpleSelectorSequence) {
	switch (simpleSelectorSequence.$) {
		case 'TypeSelectorSequence':
			var str = simpleSelectorSequence.a.a;
			var repeatableSimpleSelectors = simpleSelectorSequence.b;
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$cons,
					str,
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, repeatableSimpleSelectors)));
		case 'UniversalSelectorSequence':
			var repeatableSimpleSelectors = simpleSelectorSequence.a;
			return $elm$core$List$isEmpty(repeatableSimpleSelectors) ? '*' : A2(
				$elm$core$String$join,
				'',
				A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, repeatableSimpleSelectors));
		default:
			var str = simpleSelectorSequence.a;
			var repeatableSimpleSelectors = simpleSelectorSequence.b;
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$cons,
					str,
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, repeatableSimpleSelectors)));
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString = function (_v0) {
	var combinator = _v0.a;
	var sequence = _v0.b;
	return A2(
		$elm$core$String$join,
		' ',
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Structure$Output$combinatorToString(combinator),
				$rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(sequence)
			]));
};
var $rtfeldman$elm_css$Css$Structure$Output$selectorToString = function (_v0) {
	var simpleSelectorSequence = _v0.a;
	var chain = _v0.b;
	var pseudoElement = _v0.c;
	var segments = A2(
		$elm$core$List$cons,
		$rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(simpleSelectorSequence),
		A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString, chain));
	var pseudoElementsString = A2(
		$elm$core$String$join,
		'',
		_List_fromArray(
			[
				A2(
				$elm$core$Maybe$withDefault,
				'',
				A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString, pseudoElement))
			]));
	return A2(
		$elm$core$String$append,
		A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$filter,
				A2($elm$core$Basics$composeL, $elm$core$Basics$not, $elm$core$String$isEmpty),
				segments)),
		pseudoElementsString);
};
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock = F2(
	function (indentLevel, _v0) {
		var firstSelector = _v0.a;
		var otherSelectors = _v0.b;
		var properties = _v0.c;
		var selectorStr = A2(
			$elm$core$String$join,
			', ',
			A2(
				$elm$core$List$map,
				$rtfeldman$elm_css$Css$Structure$Output$selectorToString,
				A2($elm$core$List$cons, firstSelector, otherSelectors)));
		return A2(
			$elm$core$String$join,
			'',
			_List_fromArray(
				[
					selectorStr,
					' {\n',
					indentLevel,
					$rtfeldman$elm_css$Css$Structure$Output$emitProperties(properties),
					'\n',
					indentLevel,
					'}'
				]));
	});
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration = function (decl) {
	switch (decl.$) {
		case 'StyleBlockDeclaration':
			var styleBlock = decl.a;
			return A2($rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock, $rtfeldman$elm_css$Css$Structure$Output$noIndent, styleBlock);
		case 'MediaRule':
			var mediaQueries = decl.a;
			var styleBlocks = decl.b;
			var query = A2(
				$elm$core$String$join,
				',\n',
				A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString, mediaQueries));
			var blocks = A2(
				$elm$core$String$join,
				'\n\n',
				A2(
					$elm$core$List$map,
					A2(
						$elm$core$Basics$composeL,
						$rtfeldman$elm_css$Css$Structure$Output$indent,
						$rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock($rtfeldman$elm_css$Css$Structure$Output$spaceIndent)),
					styleBlocks));
			return '@media ' + (query + (' {\n' + (blocks + '\n}')));
		case 'SupportsRule':
			return 'TODO';
		case 'DocumentRule':
			return 'TODO';
		case 'PageRule':
			return 'TODO';
		case 'FontFace':
			return 'TODO';
		case 'Keyframes':
			var name = decl.a.name;
			var declaration = decl.a.declaration;
			return '@keyframes ' + (name + (' {\n' + (declaration + '\n}')));
		case 'Viewport':
			return 'TODO';
		case 'CounterStyle':
			return 'TODO';
		default:
			return 'TODO';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrint = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var declarations = _v0.declarations;
	return A2(
		$elm$core$String$join,
		'\n\n',
		A2(
			$elm$core$List$filter,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, $elm$core$String$isEmpty),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$Output$charsetToString(charset),
					A2(
					$elm$core$String$join,
					'\n',
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$importToString, imports)),
					A2(
					$elm$core$String$join,
					'\n',
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$namespaceToString, namespaces)),
					A2(
					$elm$core$String$join,
					'\n\n',
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration, declarations))
				])));
};
var $rtfeldman$elm_css$Css$Structure$CounterStyle = function (a) {
	return {$: 'CounterStyle', a: a};
};
var $rtfeldman$elm_css$Css$Structure$FontFace = function (a) {
	return {$: 'FontFace', a: a};
};
var $rtfeldman$elm_css$Css$Structure$PageRule = F2(
	function (a, b) {
		return {$: 'PageRule', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$Selector = F3(
	function (a, b, c) {
		return {$: 'Selector', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Structure$StyleBlock = F3(
	function (a, b, c) {
		return {$: 'StyleBlock', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration = function (a) {
	return {$: 'StyleBlockDeclaration', a: a};
};
var $rtfeldman$elm_css$Css$Structure$SupportsRule = F2(
	function (a, b) {
		return {$: 'SupportsRule', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$Viewport = function (a) {
	return {$: 'Viewport', a: a};
};
var $rtfeldman$elm_css$Css$Structure$MediaRule = F2(
	function (a, b) {
		return {$: 'MediaRule', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$mapLast = F2(
	function (update, list) {
		if (!list.b) {
			return list;
		} else {
			if (!list.b.b) {
				var only = list.a;
				return _List_fromArray(
					[
						update(only)
					]);
			} else {
				var first = list.a;
				var rest = list.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$mapLast, update, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$withPropertyAppended = F2(
	function (property, _v0) {
		var firstSelector = _v0.a;
		var otherSelectors = _v0.b;
		var properties = _v0.c;
		return A3(
			$rtfeldman$elm_css$Css$Structure$StyleBlock,
			firstSelector,
			otherSelectors,
			_Utils_ap(
				properties,
				_List_fromArray(
					[property])));
	});
var $rtfeldman$elm_css$Css$Structure$appendProperty = F2(
	function (property, declarations) {
		if (!declarations.b) {
			return declarations;
		} else {
			if (!declarations.b.b) {
				switch (declarations.a.$) {
					case 'StyleBlockDeclaration':
						var styleBlock = declarations.a.a;
						return _List_fromArray(
							[
								$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
								A2($rtfeldman$elm_css$Css$Structure$withPropertyAppended, property, styleBlock))
							]);
					case 'MediaRule':
						var _v1 = declarations.a;
						var mediaQueries = _v1.a;
						var styleBlocks = _v1.b;
						return _List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Css$Structure$MediaRule,
								mediaQueries,
								A2(
									$rtfeldman$elm_css$Css$Structure$mapLast,
									$rtfeldman$elm_css$Css$Structure$withPropertyAppended(property),
									styleBlocks))
							]);
					default:
						return declarations;
				}
			} else {
				var first = declarations.a;
				var rest = declarations.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$appendProperty, property, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendToLastSelector = F2(
	function (f, styleBlock) {
		if (!styleBlock.b.b) {
			var only = styleBlock.a;
			var properties = styleBlock.c;
			return _List_fromArray(
				[
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, only, _List_Nil, properties),
					A3(
					$rtfeldman$elm_css$Css$Structure$StyleBlock,
					f(only),
					_List_Nil,
					_List_Nil)
				]);
		} else {
			var first = styleBlock.a;
			var rest = styleBlock.b;
			var properties = styleBlock.c;
			var newRest = A2($elm$core$List$map, f, rest);
			var newFirst = f(first);
			return _List_fromArray(
				[
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, rest, properties),
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, newFirst, newRest, _List_Nil)
				]);
		}
	});
var $rtfeldman$elm_css$Css$Structure$applyPseudoElement = F2(
	function (pseudo, _v0) {
		var sequence = _v0.a;
		var selectors = _v0.b;
		return A3(
			$rtfeldman$elm_css$Css$Structure$Selector,
			sequence,
			selectors,
			$elm$core$Maybe$Just(pseudo));
	});
var $rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector = F2(
	function (pseudo, styleBlock) {
		return A2(
			$rtfeldman$elm_css$Css$Structure$appendToLastSelector,
			$rtfeldman$elm_css$Css$Structure$applyPseudoElement(pseudo),
			styleBlock);
	});
var $rtfeldman$elm_css$Css$Structure$CustomSelector = F2(
	function (a, b) {
		return {$: 'CustomSelector', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$TypeSelectorSequence = F2(
	function (a, b) {
		return {$: 'TypeSelectorSequence', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatable = F2(
	function (selector, sequence) {
		switch (sequence.$) {
			case 'TypeSelectorSequence':
				var typeSelector = sequence.a;
				var list = sequence.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence,
					typeSelector,
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
			case 'UniversalSelectorSequence':
				var list = sequence.a;
				return $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
			default:
				var str = sequence.a;
				var list = sequence.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$CustomSelector,
					str,
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator = F2(
	function (selector, list) {
		if (!list.b) {
			return _List_Nil;
		} else {
			if (!list.b.b) {
				var _v1 = list.a;
				var combinator = _v1.a;
				var sequence = _v1.b;
				return _List_fromArray(
					[
						_Utils_Tuple2(
						combinator,
						A2($rtfeldman$elm_css$Css$Structure$appendRepeatable, selector, sequence))
					]);
			} else {
				var first = list.a;
				var rest = list.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, selector, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableSelector = F2(
	function (repeatableSimpleSelector, selector) {
		if (!selector.b.b) {
			var sequence = selector.a;
			var pseudoElement = selector.c;
			return A3(
				$rtfeldman$elm_css$Css$Structure$Selector,
				A2($rtfeldman$elm_css$Css$Structure$appendRepeatable, repeatableSimpleSelector, sequence),
				_List_Nil,
				pseudoElement);
		} else {
			var firstSelector = selector.a;
			var tuples = selector.b;
			var pseudoElement = selector.c;
			return A3(
				$rtfeldman$elm_css$Css$Structure$Selector,
				firstSelector,
				A2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, repeatableSimpleSelector, tuples),
				pseudoElement);
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector = F2(
	function (selector, styleBlock) {
		return A2(
			$rtfeldman$elm_css$Css$Structure$appendToLastSelector,
			$rtfeldman$elm_css$Css$Structure$appendRepeatableSelector(selector),
			styleBlock);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors = function (declarations) {
	collectSelectors:
	while (true) {
		if (!declarations.b) {
			return _List_Nil;
		} else {
			if (declarations.a.$ === 'StyleBlockDeclaration') {
				var _v1 = declarations.a.a;
				var firstSelector = _v1.a;
				var otherSelectors = _v1.b;
				var rest = declarations.b;
				return _Utils_ap(
					A2($elm$core$List$cons, firstSelector, otherSelectors),
					$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(rest));
			} else {
				var rest = declarations.b;
				var $temp$declarations = rest;
				declarations = $temp$declarations;
				continue collectSelectors;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Structure$DocumentRule = F5(
	function (a, b, c, d, e) {
		return {$: 'DocumentRule', a: a, b: b, c: c, d: d, e: e};
	});
var $rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock = F2(
	function (update, declarations) {
		_v0$12:
		while (true) {
			if (!declarations.b) {
				return declarations;
			} else {
				if (!declarations.b.b) {
					switch (declarations.a.$) {
						case 'StyleBlockDeclaration':
							var styleBlock = declarations.a.a;
							return A2(
								$elm$core$List$map,
								$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration,
								update(styleBlock));
						case 'MediaRule':
							if (declarations.a.b.b) {
								if (!declarations.a.b.b.b) {
									var _v1 = declarations.a;
									var mediaQueries = _v1.a;
									var _v2 = _v1.b;
									var styleBlock = _v2.a;
									return _List_fromArray(
										[
											A2(
											$rtfeldman$elm_css$Css$Structure$MediaRule,
											mediaQueries,
											update(styleBlock))
										]);
								} else {
									var _v3 = declarations.a;
									var mediaQueries = _v3.a;
									var _v4 = _v3.b;
									var first = _v4.a;
									var rest = _v4.b;
									var _v5 = A2(
										$rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock,
										update,
										_List_fromArray(
											[
												A2($rtfeldman$elm_css$Css$Structure$MediaRule, mediaQueries, rest)
											]));
									if ((_v5.b && (_v5.a.$ === 'MediaRule')) && (!_v5.b.b)) {
										var _v6 = _v5.a;
										var newMediaQueries = _v6.a;
										var newStyleBlocks = _v6.b;
										return _List_fromArray(
											[
												A2(
												$rtfeldman$elm_css$Css$Structure$MediaRule,
												newMediaQueries,
												A2($elm$core$List$cons, first, newStyleBlocks))
											]);
									} else {
										var newDeclarations = _v5;
										return newDeclarations;
									}
								}
							} else {
								break _v0$12;
							}
						case 'SupportsRule':
							var _v7 = declarations.a;
							var str = _v7.a;
							var nestedDeclarations = _v7.b;
							return _List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Css$Structure$SupportsRule,
									str,
									A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, nestedDeclarations))
								]);
						case 'DocumentRule':
							var _v8 = declarations.a;
							var str1 = _v8.a;
							var str2 = _v8.b;
							var str3 = _v8.c;
							var str4 = _v8.d;
							var styleBlock = _v8.e;
							return A2(
								$elm$core$List$map,
								A4($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4),
								update(styleBlock));
						case 'PageRule':
							var _v9 = declarations.a;
							return declarations;
						case 'FontFace':
							return declarations;
						case 'Keyframes':
							return declarations;
						case 'Viewport':
							return declarations;
						case 'CounterStyle':
							return declarations;
						default:
							return declarations;
					}
				} else {
					break _v0$12;
				}
			}
		}
		var first = declarations.a;
		var rest = declarations.b;
		return A2(
			$elm$core$List$cons,
			first,
			A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, rest));
	});
var $elm$core$String$cons = _String_cons;
var $Skinney$murmur3$Murmur3$HashData = F4(
	function (shift, seed, hash, charsProcessed) {
		return {charsProcessed: charsProcessed, hash: hash, seed: seed, shift: shift};
	});
var $Skinney$murmur3$Murmur3$mur = F2(
	function (c, h) {
		return 4294967295 & (((h & 65535) * c) + ((65535 & ((h >>> 16) * c)) << 16));
	});
var $elm$core$Bitwise$or = _Bitwise_or;
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $Skinney$murmur3$Murmur3$mix = F2(
	function (h1, h2) {
		var k1 = A2($Skinney$murmur3$Murmur3$mur, 3432918353, h2);
		return h1 ^ A2($Skinney$murmur3$Murmur3$mur, 461845907, (k1 >>> 17) | (k1 << 15));
	});
var $Skinney$murmur3$Murmur3$finalize = function (data) {
	var acc = (!(!data.hash)) ? A2($Skinney$murmur3$Murmur3$mix, data.seed, data.hash) : data.seed;
	var h1 = acc ^ data.charsProcessed;
	var h2 = A2($Skinney$murmur3$Murmur3$mur, 2246822507, h1 ^ (h1 >>> 16));
	var h3 = A2($Skinney$murmur3$Murmur3$mur, 3266489909, h2 ^ (h2 >>> 13));
	return (h3 ^ (h3 >>> 16)) >>> 0;
};
var $Skinney$murmur3$UTF8$accumulate = F3(
	function (add, _char, _v0) {
		var acc = _v0.a;
		var combine = _v0.b;
		if (combine.$ === 'Nothing') {
			return (_char < 128) ? _Utils_Tuple2(
				A2(add, _char, acc),
				$elm$core$Maybe$Nothing) : ((_char < 2048) ? _Utils_Tuple2(
				A2(
					add,
					128 | (63 & _char),
					A2(add, 192 | (_char >>> 6), acc)),
				$elm$core$Maybe$Nothing) : (((_char < 55296) || (_char >= 57344)) ? _Utils_Tuple2(
				A2(
					add,
					128 | (63 & _char),
					A2(
						add,
						128 | (63 & (_char >>> 6)),
						A2(add, 224 | (_char >>> 12), acc))),
				$elm$core$Maybe$Nothing) : _Utils_Tuple2(
				acc,
				$elm$core$Maybe$Just(_char))));
		} else {
			var prev = combine.a;
			var combined = ((1023 & _char) | ((1023 & prev) << 10)) + 65536;
			return _Utils_Tuple2(
				A2(
					add,
					128 | (63 & combined),
					A2(
						add,
						128 | (63 & (combined >>> 6)),
						A2(
							add,
							128 | (63 & (combined >>> 12)),
							A2(add, 240 | (combined >>> 18), acc)))),
				$elm$core$Maybe$Nothing);
		}
	});
var $elm$core$String$foldl = _String_foldl;
var $Skinney$murmur3$UTF8$foldl = F3(
	function (op, acc, input) {
		var helper = F2(
			function (_char, res) {
				return A3(
					$Skinney$murmur3$UTF8$accumulate,
					op,
					$elm$core$Char$toCode(_char),
					res);
			});
		return A3(
			$elm$core$String$foldl,
			helper,
			_Utils_Tuple2(acc, $elm$core$Maybe$Nothing),
			input).a;
	});
var $Skinney$murmur3$Murmur3$step = function (acc) {
	var h1 = A2($Skinney$murmur3$Murmur3$mur, 5, (acc >>> 19) | (acc << 13));
	return ((h1 & 65535) + 27492) + ((65535 & ((h1 >>> 16) + 58964)) << 16);
};
var $Skinney$murmur3$Murmur3$hashFold = F2(
	function (c, data) {
		var res = data.hash | (c << data.shift);
		var _v0 = data.shift;
		if (_v0 === 24) {
			var newHash = $Skinney$murmur3$Murmur3$step(
				A2($Skinney$murmur3$Murmur3$mix, data.seed, res));
			return {charsProcessed: data.charsProcessed + 1, hash: 0, seed: newHash, shift: 0};
		} else {
			return {charsProcessed: data.charsProcessed + 1, hash: res, seed: data.seed, shift: data.shift + 8};
		}
	});
var $Skinney$murmur3$Murmur3$hashString = F2(
	function (seed, str) {
		return $Skinney$murmur3$Murmur3$finalize(
			A3(
				$Skinney$murmur3$UTF8$foldl,
				$Skinney$murmur3$Murmur3$hashFold,
				A4($Skinney$murmur3$Murmur3$HashData, 0, seed, 0, 0),
				str));
	});
var $rtfeldman$elm_css$Hash$murmurSeed = 15739;
var $elm$core$String$fromList = _String_fromList;
var $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {
	unsafeToDigit:
	while (true) {
		switch (num) {
			case 0:
				return _Utils_chr('0');
			case 1:
				return _Utils_chr('1');
			case 2:
				return _Utils_chr('2');
			case 3:
				return _Utils_chr('3');
			case 4:
				return _Utils_chr('4');
			case 5:
				return _Utils_chr('5');
			case 6:
				return _Utils_chr('6');
			case 7:
				return _Utils_chr('7');
			case 8:
				return _Utils_chr('8');
			case 9:
				return _Utils_chr('9');
			case 10:
				return _Utils_chr('a');
			case 11:
				return _Utils_chr('b');
			case 12:
				return _Utils_chr('c');
			case 13:
				return _Utils_chr('d');
			case 14:
				return _Utils_chr('e');
			case 15:
				return _Utils_chr('f');
			default:
				var $temp$num = num;
				num = $temp$num;
				continue unsafeToDigit;
		}
	}
};
var $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (num < 16) {
				return A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(num),
					digits);
			} else {
				var $temp$digits = A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(
						A2($elm$core$Basics$modBy, 16, num)),
					digits),
					$temp$num = (num / 16) | 0;
				digits = $temp$digits;
				num = $temp$num;
				continue unsafePositiveToDigits;
			}
		}
	});
var $rtfeldman$elm_hex$Hex$toString = function (num) {
	return $elm$core$String$fromList(
		(num < 0) ? A2(
			$elm$core$List$cons,
			_Utils_chr('-'),
			A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));
};
var $rtfeldman$elm_css$Hash$fromString = function (str) {
	return A2(
		$elm$core$String$cons,
		_Utils_chr('_'),
		$rtfeldman$elm_hex$Hex$toString(
			A2($Skinney$murmur3$Murmur3$hashString, $rtfeldman$elm_css$Hash$murmurSeed, str)));
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$last = function (list) {
	last:
	while (true) {
		if (!list.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!list.b.b) {
				var singleton = list.a;
				return $elm$core$Maybe$Just(singleton);
			} else {
				var rest = list.b;
				var $temp$list = rest;
				list = $temp$list;
				continue last;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration = function (declarations) {
	lastDeclaration:
	while (true) {
		if (!declarations.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!declarations.b.b) {
				var x = declarations.a;
				return $elm$core$Maybe$Just(
					_List_fromArray(
						[x]));
			} else {
				var xs = declarations.b;
				var $temp$declarations = xs;
				declarations = $temp$declarations;
				continue lastDeclaration;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf = function (maybes) {
	oneOf:
	while (true) {
		if (!maybes.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var maybe = maybes.a;
			var rest = maybes.b;
			if (maybe.$ === 'Nothing') {
				var $temp$maybes = rest;
				maybes = $temp$maybes;
				continue oneOf;
			} else {
				return maybe;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Structure$FontFeatureValues = function (a) {
	return {$: 'FontFeatureValues', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues = function (tuples) {
	var expandTuples = function (tuplesToExpand) {
		if (!tuplesToExpand.b) {
			return _List_Nil;
		} else {
			var properties = tuplesToExpand.a;
			var rest = tuplesToExpand.b;
			return A2(
				$elm$core$List$cons,
				properties,
				expandTuples(rest));
		}
	};
	var newTuples = expandTuples(tuples);
	return _List_fromArray(
		[
			$rtfeldman$elm_css$Css$Structure$FontFeatureValues(newTuples)
		]);
};
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule = F2(
	function (mediaQueries, declaration) {
		if (declaration.$ === 'StyleBlockDeclaration') {
			var styleBlock = declaration.a;
			return A2(
				$rtfeldman$elm_css$Css$Structure$MediaRule,
				mediaQueries,
				_List_fromArray(
					[styleBlock]));
		} else {
			return declaration;
		}
	});
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule = F5(
	function (str1, str2, str3, str4, declaration) {
		if (declaration.$ === 'StyleBlockDeclaration') {
			var structureStyleBlock = declaration.a;
			return A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);
		} else {
			return declaration;
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule = F2(
	function (mediaQueries, declaration) {
		switch (declaration.$) {
			case 'StyleBlockDeclaration':
				var structureStyleBlock = declaration.a;
				return A2(
					$rtfeldman$elm_css$Css$Structure$MediaRule,
					mediaQueries,
					_List_fromArray(
						[structureStyleBlock]));
			case 'MediaRule':
				var newMediaQueries = declaration.a;
				var structureStyleBlocks = declaration.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$MediaRule,
					_Utils_ap(mediaQueries, newMediaQueries),
					structureStyleBlocks);
			case 'SupportsRule':
				var str = declaration.a;
				var declarations = declaration.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$SupportsRule,
					str,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),
						declarations));
			case 'DocumentRule':
				var str1 = declaration.a;
				var str2 = declaration.b;
				var str3 = declaration.c;
				var str4 = declaration.d;
				var structureStyleBlock = declaration.e;
				return A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);
			case 'PageRule':
				return declaration;
			case 'FontFace':
				return declaration;
			case 'Keyframes':
				return declaration;
			case 'Viewport':
				return declaration;
			case 'CounterStyle':
				return declaration;
			default:
				return declaration;
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet = function (_v0) {
	var declarations = _v0.a;
	return declarations;
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast = F4(
	function (nestedStyles, rest, f, declarations) {
		var withoutParent = function (decls) {
			return A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				$elm$core$List$tail(decls));
		};
		var nextResult = A2(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
			rest,
			A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));
		var newDeclarations = function () {
			var _v14 = _Utils_Tuple2(
				$elm$core$List$head(nextResult),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$last(declarations));
			if ((_v14.a.$ === 'Just') && (_v14.b.$ === 'Just')) {
				var nextResultParent = _v14.a.a;
				var originalParent = _v14.b.a;
				return _Utils_ap(
					A2(
						$elm$core$List$take,
						$elm$core$List$length(declarations) - 1,
						declarations),
					_List_fromArray(
						[
							(!_Utils_eq(originalParent, nextResultParent)) ? nextResultParent : originalParent
						]));
			} else {
				return declarations;
			}
		}();
		var insertStylesToNestedDecl = function (lastDecl) {
			return $elm$core$List$concat(
				A2(
					$rtfeldman$elm_css$Css$Structure$mapLast,
					$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles(nestedStyles),
					A2(
						$elm$core$List$map,
						$elm$core$List$singleton,
						A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, f, lastDecl))));
		};
		var initialResult = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				insertStylesToNestedDecl,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));
		return _Utils_ap(
			newDeclarations,
			_Utils_ap(
				withoutParent(initialResult),
				withoutParent(nextResult)));
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles = F2(
	function (styles, declarations) {
		if (!styles.b) {
			return declarations;
		} else {
			switch (styles.a.$) {
				case 'AppendProperty':
					var property = styles.a.a;
					var rest = styles.b;
					return A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						rest,
						A2($rtfeldman$elm_css$Css$Structure$appendProperty, property, declarations));
				case 'ExtendSelector':
					var _v4 = styles.a;
					var selector = _v4.a;
					var nestedStyles = _v4.b;
					var rest = styles.b;
					return A4(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,
						nestedStyles,
						rest,
						$rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector(selector),
						declarations);
				case 'NestSnippet':
					var _v5 = styles.a;
					var selectorCombinator = _v5.a;
					var snippets = _v5.b;
					var rest = styles.b;
					var chain = F2(
						function (_v9, _v10) {
							var originalSequence = _v9.a;
							var originalTuples = _v9.b;
							var originalPseudoElement = _v9.c;
							var newSequence = _v10.a;
							var newTuples = _v10.b;
							var newPseudoElement = _v10.c;
							return A3(
								$rtfeldman$elm_css$Css$Structure$Selector,
								originalSequence,
								_Utils_ap(
									originalTuples,
									A2(
										$elm$core$List$cons,
										_Utils_Tuple2(selectorCombinator, newSequence),
										newTuples)),
								$rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf(
									_List_fromArray(
										[newPseudoElement, originalPseudoElement])));
						});
					var expandDeclaration = function (declaration) {
						switch (declaration.$) {
							case 'StyleBlockDeclaration':
								var _v7 = declaration.a;
								var firstSelector = _v7.a;
								var otherSelectors = _v7.b;
								var nestedStyles = _v7.c;
								var newSelectors = A2(
									$elm$core$List$concatMap,
									function (originalSelector) {
										return A2(
											$elm$core$List$map,
											chain(originalSelector),
											A2($elm$core$List$cons, firstSelector, otherSelectors));
									},
									$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations));
								var newDeclarations = function () {
									if (!newSelectors.b) {
										return _List_Nil;
									} else {
										var first = newSelectors.a;
										var remainder = newSelectors.b;
										return _List_fromArray(
											[
												$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
												A3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, remainder, _List_Nil))
											]);
									}
								}();
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, nestedStyles, newDeclarations);
							case 'MediaRule':
								var mediaQueries = declaration.a;
								var styleBlocks = declaration.b;
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);
							case 'SupportsRule':
								var str = declaration.a;
								var otherSnippets = declaration.b;
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, otherSnippets);
							case 'DocumentRule':
								var str1 = declaration.a;
								var str2 = declaration.b;
								var str3 = declaration.c;
								var str4 = declaration.d;
								var styleBlock = declaration.e;
								return A2(
									$elm$core$List$map,
									A4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),
									$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
							case 'PageRule':
								var str = declaration.a;
								var properties = declaration.b;
								return _List_fromArray(
									[
										A2($rtfeldman$elm_css$Css$Structure$PageRule, str, properties)
									]);
							case 'FontFace':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$FontFace(properties)
									]);
							case 'Viewport':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$Viewport(properties)
									]);
							case 'CounterStyle':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)
									]);
							default:
								var tuples = declaration.a;
								return $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);
						}
					};
					return $elm$core$List$concat(
						_Utils_ap(
							_List_fromArray(
								[
									A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations)
								]),
							A2(
								$elm$core$List$map,
								expandDeclaration,
								A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets))));
				case 'WithPseudoElement':
					var _v11 = styles.a;
					var pseudoElement = _v11.a;
					var nestedStyles = _v11.b;
					var rest = styles.b;
					return A4(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,
						nestedStyles,
						rest,
						$rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector(pseudoElement),
						declarations);
				case 'WithKeyframes':
					var str = styles.a.a;
					var rest = styles.b;
					var name = $rtfeldman$elm_css$Hash$fromString(str);
					var newProperty = 'animation-name:' + name;
					var newDeclarations = A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						rest,
						A2($rtfeldman$elm_css$Css$Structure$appendProperty, newProperty, declarations));
					return A2(
						$elm$core$List$append,
						newDeclarations,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$Structure$Keyframes(
								{declaration: str, name: name})
							]));
				case 'WithMedia':
					var _v12 = styles.a;
					var mediaQueries = _v12.a;
					var nestedStyles = _v12.b;
					var rest = styles.b;
					var extraDeclarations = function () {
						var _v13 = $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations);
						if (!_v13.b) {
							return _List_Nil;
						} else {
							var firstSelector = _v13.a;
							var otherSelectors = _v13.b;
							return A2(
								$elm$core$List$map,
								$rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule(mediaQueries),
								A2(
									$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
									nestedStyles,
									$elm$core$List$singleton(
										$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
											A3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil)))));
						}
					}();
					return _Utils_ap(
						A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations),
						extraDeclarations);
				default:
					var otherStyles = styles.a.a;
					var rest = styles.b;
					return A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						_Utils_ap(otherStyles, rest),
						declarations);
			}
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock = function (_v2) {
	var firstSelector = _v2.a;
	var otherSelectors = _v2.b;
	var styles = _v2.c;
	return A2(
		$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
		styles,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
				A3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil))
			]));
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$extract = function (snippetDeclarations) {
	if (!snippetDeclarations.b) {
		return _List_Nil;
	} else {
		var first = snippetDeclarations.a;
		var rest = snippetDeclarations.b;
		return _Utils_ap(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations(first),
			$rtfeldman$elm_css$Css$Preprocess$Resolve$extract(rest));
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule = F2(
	function (mediaQueries, styleBlocks) {
		var handleStyleBlock = function (styleBlock) {
			return A2(
				$elm$core$List$map,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
		};
		return A2($elm$core$List$concatMap, handleStyleBlock, styleBlocks);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule = F2(
	function (str, snippets) {
		var declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(
			A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));
		return _List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$Structure$SupportsRule, str, declarations)
			]);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations = function (snippetDeclaration) {
	switch (snippetDeclaration.$) {
		case 'StyleBlockDeclaration':
			var styleBlock = snippetDeclaration.a;
			return $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock);
		case 'MediaRule':
			var mediaQueries = snippetDeclaration.a;
			var styleBlocks = snippetDeclaration.b;
			return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);
		case 'SupportsRule':
			var str = snippetDeclaration.a;
			var snippets = snippetDeclaration.b;
			return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, snippets);
		case 'DocumentRule':
			var str1 = snippetDeclaration.a;
			var str2 = snippetDeclaration.b;
			var str3 = snippetDeclaration.c;
			var str4 = snippetDeclaration.d;
			var styleBlock = snippetDeclaration.e;
			return A2(
				$elm$core$List$map,
				A4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
		case 'PageRule':
			var str = snippetDeclaration.a;
			var properties = snippetDeclaration.b;
			return _List_fromArray(
				[
					A2($rtfeldman$elm_css$Css$Structure$PageRule, str, properties)
				]);
		case 'FontFace':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$FontFace(properties)
				]);
		case 'Viewport':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$Viewport(properties)
				]);
		case 'CounterStyle':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)
				]);
		default:
			var tuples = snippetDeclaration.a;
			return $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var snippets = _v0.snippets;
	var declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(
		A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));
	return {charset: charset, declarations: declarations, imports: imports, namespaces: namespaces};
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$compileHelp = function (sheet) {
	return $rtfeldman$elm_css$Css$Structure$Output$prettyPrint(
		$rtfeldman$elm_css$Css$Structure$compactStylesheet(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure(sheet)));
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$compile = function (styles) {
	return A2(
		$elm$core$String$join,
		'\n\n',
		A2($elm$core$List$map, $rtfeldman$elm_css$Css$Preprocess$Resolve$compileHelp, styles));
};
var $rtfeldman$elm_css$Css$Preprocess$Snippet = function (a) {
	return {$: 'Snippet', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$StyleBlock = F3(
	function (a, b, c) {
		return {$: 'StyleBlock', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration = function (a) {
	return {$: 'StyleBlockDeclaration', a: a};
};
var $rtfeldman$elm_css$VirtualDom$Styled$makeSnippet = F2(
	function (styles, sequence) {
		var selector = A3($rtfeldman$elm_css$Css$Structure$Selector, sequence, _List_Nil, $elm$core$Maybe$Nothing);
		return $rtfeldman$elm_css$Css$Preprocess$Snippet(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration(
					A3($rtfeldman$elm_css$Css$Preprocess$StyleBlock, selector, _List_Nil, styles))
				]));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$murmurSeed = 15739;
var $rtfeldman$elm_css$Css$Preprocess$stylesheet = function (snippets) {
	return {charset: $elm$core$Maybe$Nothing, imports: _List_Nil, namespaces: _List_Nil, snippets: snippets};
};
var $rtfeldman$elm_css$VirtualDom$Styled$getClassname = function (styles) {
	return $elm$core$List$isEmpty(styles) ? 'unstyled' : A2(
		$elm$core$String$cons,
		_Utils_chr('_'),
		$rtfeldman$elm_hex$Hex$toString(
			A2(
				$Skinney$murmur3$Murmur3$hashString,
				$rtfeldman$elm_css$VirtualDom$Styled$murmurSeed,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$compile(
					$elm$core$List$singleton(
						$rtfeldman$elm_css$Css$Preprocess$stylesheet(
							$elm$core$List$singleton(
								A2(
									$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet,
									styles,
									$rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(_List_Nil)))))))));
};
var $rtfeldman$elm_css$Html$Styled$Internal$css = function (styles) {
	var classname = $rtfeldman$elm_css$VirtualDom$Styled$getClassname(styles);
	var classProperty = A2(
		$elm$virtual_dom$VirtualDom$property,
		'className',
		$elm$json$Json$Encode$string(classname));
	return A3($rtfeldman$elm_css$VirtualDom$Styled$Attribute, classProperty, styles, classname);
};
var $rtfeldman$elm_css$Html$Styled$Attributes$css = $rtfeldman$elm_css$Html$Styled$Internal$css;
var $rtfeldman$elm_css$Css$stringsToValue = function (list) {
	return $elm$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A2(
			$elm$core$String$join,
			', ',
			A2(
				$elm$core$List$map,
				function (s) {
					return s;
				},
				list))
	};
};
var $rtfeldman$elm_css$Css$fontFamilies = A2(
	$elm$core$Basics$composeL,
	$rtfeldman$elm_css$Css$prop1('font-family'),
	$rtfeldman$elm_css$Css$stringsToValue);
var $rtfeldman$elm_css$Css$marginLeft = $rtfeldman$elm_css$Css$prop1('margin-left');
var $rtfeldman$elm_css$Css$marginRight = $rtfeldman$elm_css$Css$prop1('margin-right');
var $rtfeldman$elm_css$Css$maxWidth = $rtfeldman$elm_css$Css$prop1('max-width');
var $rtfeldman$elm_css$Css$paddingLeft = $rtfeldman$elm_css$Css$prop1('padding-left');
var $rtfeldman$elm_css$Css$paddingRight = $rtfeldman$elm_css$Css$prop1('padding-right');
var $author$project$Grid$Css$container = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_Utils_ap(
		$author$project$Grid$Css$containerWidths,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$maxWidth(
				$rtfeldman$elm_css$Css$pct(100)),
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				$rtfeldman$elm_css$Css$paddingLeft(
				$rtfeldman$elm_css$Css$px(15)),
				$rtfeldman$elm_css$Css$paddingRight(
				$rtfeldman$elm_css$Css$px(15)),
				$rtfeldman$elm_css$Css$marginLeft($rtfeldman$elm_css$Css$auto),
				$rtfeldman$elm_css$Css$marginRight($rtfeldman$elm_css$Css$auto),
				$rtfeldman$elm_css$Css$fontFamilies(
				_List_fromArray(
					['Arial']))
			])));
var $author$project$Grid$container = F2(
	function (attributes, children) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_Utils_ap(
				_List_fromArray(
					[$author$project$Grid$Css$container]),
				attributes),
			children);
	});
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $feathericons$elm_feather$FeatherIcons$edit = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'edit',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-edit')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M20 14.66V20a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h5.34')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$polygon,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('18 2 22 6 12 16 8 16 8 12 18 2')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Card$footer = F2(
	function (buttons, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Card$Config(
			_Utils_update(
				viewConfig,
				{footerButtons: buttons}));
	});
var $author$project$Modal$footer = F2(
	function (buttons, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Modal$Config(
			_Utils_update(
				viewConfig,
				{footerButtons: buttons}));
	});
var $author$project$Form$SearchSelect$Internal$getSelectedOption = function (state) {
	return $author$project$Resettable$getValue(state.selectedOption);
};
var $author$project$Form$SearchSelect$getSelectedOption = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$SearchSelect$Internal$getSelectedOption(state);
};
var $author$project$Form$DatePicker$Internal$getSelectedPosix = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.selectedPosix;
	},
	$author$project$Resettable$getValue);
var $author$project$Form$DatePicker$getSelectedPosix = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$DatePicker$Internal$getSelectedPosix(state);
};
var $author$project$Form$FloatInput$Internal$getValue = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.value;
	},
	A2($elm$core$Basics$composeR, $author$project$Resettable$getValue, $elm$core$String$toFloat));
var $author$project$Form$FloatInput$getValue = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$FloatInput$Internal$getValue(state);
};
var $author$project$Form$Input$Internal$getValue = function (state) {
	return $author$project$Resettable$getValue(state.value);
};
var $author$project$Form$Input$getValue = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$Input$Internal$getValue(state);
};
var $author$project$Form$IntInput$Internal$getValue = A2(
	$elm$core$Basics$composeR,
	function ($) {
		return $.value;
	},
	A2($elm$core$Basics$composeR, $author$project$Resettable$getValue, $elm$core$String$toInt));
var $author$project$Form$IntInput$getValue = function (_v0) {
	var state = _v0.a;
	return $author$project$Form$IntInput$Internal$getValue(state);
};
var $author$project$Button$Button = function (a) {
	return {$: 'Button', a: a};
};
var $rtfeldman$elm_css$Css$rgb = F3(
	function (r, g, b) {
		return {
			alpha: 1,
			blue: b,
			color: $rtfeldman$elm_css$Css$Structure$Compatible,
			green: g,
			red: r,
			value: A2(
				$rtfeldman$elm_css$Css$cssFunction,
				'rgb',
				A2(
					$elm$core$List$map,
					$elm$core$String$fromInt,
					_List_fromArray(
						[r, g, b])))
		};
	});
var $author$project$Button$green = F2(
	function (shouldBeGreen, _v0) {
		var config = _v0.a;
		return shouldBeGreen ? $author$project$Button$Button(
			_Utils_update(
				config,
				{
					color: A3($rtfeldman$elm_css$Css$rgb, 81, 163, 81)
				})) : $author$project$Button$Button(config);
	});
var $author$project$ToolTip$Green = {$: 'Green'};
var $author$project$ToolTip$green = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{color: $author$project$ToolTip$Green}));
};
var $feathericons$elm_feather$FeatherIcons$grid = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'grid',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-grid')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('3'),
							$elm$svg$Svg$Attributes$y('3'),
							$elm$svg$Svg$Attributes$width('7'),
							$elm$svg$Svg$Attributes$height('7')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('14'),
							$elm$svg$Svg$Attributes$y('3'),
							$elm$svg$Svg$Attributes$width('7'),
							$elm$svg$Svg$Attributes$height('7')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('14'),
							$elm$svg$Svg$Attributes$y('14'),
							$elm$svg$Svg$Attributes$width('7'),
							$elm$svg$Svg$Attributes$height('7')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('3'),
							$elm$svg$Svg$Attributes$y('14'),
							$elm$svg$Svg$Attributes$width('7'),
							$elm$svg$Svg$Attributes$height('7')
						]),
					_List_Nil)
				]))
		]));
var $rtfeldman$elm_css$Html$Styled$h1 = $rtfeldman$elm_css$Html$Styled$node('h1');
var $author$project$Card$header = F3(
	function (title, buttons, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Card$Config(
			_Utils_update(
				viewConfig,
				{headerButtons: buttons, headerTitle: title}));
	});
var $author$project$Modal$header = F3(
	function (title, buttons, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Modal$Config(
			_Utils_update(
				viewConfig,
				{headerButtons: buttons, headerTitle: title}));
	});
var $author$project$Button$href = F2(
	function (url, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{
					href: $elm$core$Maybe$Just(
						{blank: false, url: url})
				}));
	});
var $author$project$Content$Icon = function (a) {
	return {$: 'Icon', a: a};
};
var $author$project$Button$icon = F2(
	function (icon_, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{
					content: $author$project$Content$Icon(icon_)
				}));
	});
var $author$project$ToolTip$icon = F2(
	function (featherIcon, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$ToolTip$View,
			state,
			_Utils_update(
				viewState,
				{
					content: $author$project$Content$Icon(featherIcon)
				}));
	});
var $author$project$Button$isDisabled = F2(
	function (isDisabled_, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{isDisabled: isDisabled_}));
	});
var $author$project$Toggle$Toggle = function (a) {
	return {$: 'Toggle', a: a};
};
var $author$project$Toggle$isDisabled = F2(
	function (isDisabled_, _v0) {
		var config = _v0.a;
		return $author$project$Toggle$Toggle(
			_Utils_update(
				config,
				{isDisabled: isDisabled_}));
	});
var $author$project$Button$isLoading = F2(
	function (isLoading_, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{isLoading: isLoading_}));
	});
var $author$project$Toggle$label = F2(
	function (label_, _v0) {
		var config = _v0.a;
		return $author$project$Toggle$Toggle(
			_Utils_update(
				config,
				{label: label_}));
	});
var $author$project$ToolTip$Left = {$: 'Left'};
var $author$project$ToolTip$left = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{placement: $author$project$ToolTip$Left}));
};
var $feathericons$elm_feather$FeatherIcons$list = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'list',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-list')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('8'),
							$elm$svg$Svg$Attributes$y1('6'),
							$elm$svg$Svg$Attributes$x2('21'),
							$elm$svg$Svg$Attributes$y2('6')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('8'),
							$elm$svg$Svg$Attributes$y1('12'),
							$elm$svg$Svg$Attributes$x2('21'),
							$elm$svg$Svg$Attributes$y2('12')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('8'),
							$elm$svg$Svg$Attributes$y1('18'),
							$elm$svg$Svg$Attributes$x2('21'),
							$elm$svg$Svg$Attributes$y2('18')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('3'),
							$elm$svg$Svg$Attributes$y1('6'),
							$elm$svg$Svg$Attributes$x2('3'),
							$elm$svg$Svg$Attributes$y2('6')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('3'),
							$elm$svg$Svg$Attributes$y1('12'),
							$elm$svg$Svg$Attributes$x2('3'),
							$elm$svg$Svg$Attributes$y2('12')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('3'),
							$elm$svg$Svg$Attributes$y1('18'),
							$elm$svg$Svg$Attributes$x2('3'),
							$elm$svg$Svg$Attributes$y2('18')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$Label$Label = function (a) {
	return {$: 'Label', a: a};
};
var $author$project$Form$Label$mandatory = F2(
	function (bool, _v0) {
		var config = _v0.a;
		return $author$project$Form$Label$Label(
			_Utils_update(
				config,
				{mandatory: bool}));
	});
var $author$project$Card$maybeBlock = F3(
	function (cols, maybe, children) {
		if (maybe.$ === 'Nothing') {
			return $author$project$Card$CardBlock(
				A3($author$project$Card$CardBlockConfig, cols, _List_Nil, _List_Nil));
		} else {
			var a = maybe.a;
			return $author$project$Card$CardBlock(
				A3(
					$author$project$Card$CardBlockConfig,
					cols,
					_List_Nil,
					children(a)));
		}
	});
var $rtfeldman$elm_css$Html$Styled$p = $rtfeldman$elm_css$Html$Styled$node('p');
var $author$project$Records$MusicGenre$toLabel = function (genre) {
	switch (genre.$) {
		case 'Rock':
			return 'Rock';
		case 'Metal':
			return 'Metal';
		case 'Blues':
			return 'Blues';
		case 'Jazz':
			return 'Jazz';
		case 'Pop':
			return 'Pop';
		default:
			return 'Blackened Heavy progressive Alternative New-age Rockabilly Glam-core Retro-folk Neo-soul Acid-funk Doo-wop Electrical Dream-pop';
	}
};
var $author$project$Index$View$maybeBlockView = function (musicGenre) {
	return _List_fromArray(
		[
			A2(
			$rtfeldman$elm_css$Html$Styled$p,
			_List_Nil,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text('This Block only appears if the Select is Just. It is hidden of the select is Nothing (clear select to make it disapear).')
				])),
			A2(
			$rtfeldman$elm_css$Html$Styled$p,
			_List_Nil,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text(
					'Selected: ' + $author$project$Records$MusicGenre$toLabel(musicGenre))
				]))
		]);
};
var $author$project$Html$Styled$Bdt$maybeView = F2(
	function (maybe, f) {
		if (maybe.$ === 'Nothing') {
			return $rtfeldman$elm_css$Html$Styled$text('');
		} else {
			var a = maybe.a;
			return f(a);
		}
	});
var $author$project$Button$onClick = F2(
	function (msg, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{
					onClick: $elm$core$Maybe$Just(msg)
				}));
	});
var $author$project$Button$red = F2(
	function (shouldBeRed, _v0) {
		var config = _v0.a;
		return shouldBeRed ? $author$project$Button$Button(
			_Utils_update(
				config,
				{
					color: A3($rtfeldman$elm_css$Css$rgb, 189, 54, 47)
				})) : $author$project$Button$Button(config);
	});
var $author$project$ToolTip$Red = {$: 'Red'};
var $author$project$ToolTip$red = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{color: $author$project$ToolTip$Red}));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$class = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('className');
var $author$project$Html$Styled$Bdt$attributeIf = F2(
	function (bool, attribute) {
		return bool ? attribute : $rtfeldman$elm_css$Html$Styled$Attributes$class('');
	});
var $rtfeldman$elm_css$Css$Preprocess$ApplyStyles = function (a) {
	return {$: 'ApplyStyles', a: a};
};
var $rtfeldman$elm_css$Css$Internal$property = F2(
	function (key, value) {
		return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(key + (':' + value));
	});
var $rtfeldman$elm_css$Css$Internal$getOverloadedProperty = F3(
	function (functionName, desiredKey, style) {
		getOverloadedProperty:
		while (true) {
			switch (style.$) {
				case 'AppendProperty':
					var str = style.a;
					var key = A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(
							A2($elm$core$String$split, ':', str)));
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, key);
				case 'ExtendSelector':
					var selector = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-selector'));
				case 'NestSnippet':
					var combinator = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-combinator'));
				case 'WithPseudoElement':
					var pseudoElement = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-pseudo-element setter'));
				case 'WithMedia':
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-media-query'));
				case 'WithKeyframes':
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-keyframes'));
				default:
					if (!style.a.b) {
						return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-empty-Style'));
					} else {
						if (!style.a.b.b) {
							var _v1 = style.a;
							var only = _v1.a;
							var $temp$functionName = functionName,
								$temp$desiredKey = desiredKey,
								$temp$style = only;
							functionName = $temp$functionName;
							desiredKey = $temp$desiredKey;
							style = $temp$style;
							continue getOverloadedProperty;
						} else {
							var _v2 = style.a;
							var first = _v2.a;
							var rest = _v2.b;
							var $temp$functionName = functionName,
								$temp$desiredKey = desiredKey,
								$temp$style = $rtfeldman$elm_css$Css$Preprocess$ApplyStyles(rest);
							functionName = $temp$functionName;
							desiredKey = $temp$desiredKey;
							style = $temp$style;
							continue getOverloadedProperty;
						}
					}
			}
		}
	});
var $rtfeldman$elm_css$Css$Internal$IncompatibleUnits = {$: 'IncompatibleUnits'};
var $rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty = A3($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$Internal$IncompatibleUnits, '', 0);
var $rtfeldman$elm_css$Css$alignItems = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'alignItems',
		'align-items',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$backgroundColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'background-color', c.value);
};
var $rtfeldman$elm_css$Css$prop3 = F4(
	function (key, argA, argB, argC) {
		return A2(
			$rtfeldman$elm_css$Css$property,
			key,
			A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					[argA.value, argB.value, argC.value])));
	});
var $rtfeldman$elm_css$Css$border3 = $rtfeldman$elm_css$Css$prop3('border');
var $rtfeldman$elm_css$Css$borderRadius = $rtfeldman$elm_css$Css$prop1('border-radius');
var $author$project$Button$Css$buttonHeight = function (size) {
	if (size.$ === 'Small') {
		return $rtfeldman$elm_css$Css$rem(1.4);
	} else {
		return $rtfeldman$elm_css$Css$rem(1.8);
	}
};
var $author$project$Button$Css$buttonPadding = F2(
	function (content, size) {
		var _v0 = _Utils_Tuple2(content, size);
		if (_v0.a.$ === 'Text') {
			if (_v0.b.$ === 'Small') {
				var _v1 = _v0.b;
				return $rtfeldman$elm_css$Css$rem(0.5);
			} else {
				var _v2 = _v0.b;
				return $rtfeldman$elm_css$Css$rem(0.8);
			}
		} else {
			return $rtfeldman$elm_css$Css$rem(0);
		}
	});
var $author$project$Button$Css$buttonWidth = F2(
	function (content, size) {
		var _v0 = _Utils_Tuple2(content, size);
		if (_v0.a.$ === 'Icon') {
			if (_v0.b.$ === 'Small') {
				var _v1 = _v0.b;
				return $rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$rem(1.4));
			} else {
				var _v2 = _v0.b;
				return $rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$rem(1.8));
			}
		} else {
			return $rtfeldman$elm_css$Css$width($rtfeldman$elm_css$Css$auto);
		}
	});
var $rtfeldman$elm_css$Css$center = $rtfeldman$elm_css$Css$prop1('center');
var $rtfeldman$elm_css$Css$color = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'color', c.value);
};
var $rtfeldman$elm_css$Css$cursor = $rtfeldman$elm_css$Css$prop1('cursor');
var $rtfeldman$elm_css$Css$display = $rtfeldman$elm_css$Css$prop1('display');
var $rtfeldman$elm_css$Css$fontSize = $rtfeldman$elm_css$Css$prop1('font-size');
var $rtfeldman$elm_css$Css$height = $rtfeldman$elm_css$Css$prop1('height');
var $rtfeldman$elm_css$Css$hidden = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, overflow: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'hidden', visibility: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Css$Preprocess$ExtendSelector = F2(
	function (a, b) {
		return {$: 'ExtendSelector', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$PseudoClassSelector = function (a) {
	return {$: 'PseudoClassSelector', a: a};
};
var $rtfeldman$elm_css$Css$pseudoClass = function (_class) {
	return $rtfeldman$elm_css$Css$Preprocess$ExtendSelector(
		$rtfeldman$elm_css$Css$Structure$PseudoClassSelector(_class));
};
var $rtfeldman$elm_css$Css$hover = $rtfeldman$elm_css$Css$pseudoClass('hover');
var $elm$core$String$endsWith = _String_endsWith;
var $rtfeldman$elm_css$Css$makeImportant = function (str) {
	return A2(
		$elm$core$String$endsWith,
		' !important',
		$elm$core$String$toLower(str)) ? str : (str + ' !important');
};
var $rtfeldman$elm_css$Css$Preprocess$mapAllLastProperty = F2(
	function (update, styles) {
		if (!styles.b) {
			return styles;
		} else {
			if (!styles.b.b) {
				var only = styles.a;
				return _List_fromArray(
					[
						A2($rtfeldman$elm_css$Css$Preprocess$mapLastProperty, update, only)
					]);
			} else {
				var first = styles.a;
				var rest = styles.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Preprocess$mapAllLastProperty, update, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$mapLastProperty = F2(
	function (update, style) {
		switch (style.$) {
			case 'AppendProperty':
				var property = style.a;
				return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(
					update(property));
			case 'ExtendSelector':
				var selector = style.a;
				var styles = style.b;
				return A2(
					$rtfeldman$elm_css$Css$Preprocess$ExtendSelector,
					selector,
					A2($rtfeldman$elm_css$Css$Preprocess$mapAllLastProperty, update, styles));
			case 'NestSnippet':
				return style;
			case 'WithPseudoElement':
				return style;
			case 'WithMedia':
				return style;
			case 'WithKeyframes':
				return style;
			default:
				var otherStyles = style.a;
				return $rtfeldman$elm_css$Css$Preprocess$ApplyStyles(
					A2(
						$rtfeldman$elm_css$Css$Structure$mapLast,
						$rtfeldman$elm_css$Css$Preprocess$mapLastProperty(update),
						otherStyles));
		}
	});
var $rtfeldman$elm_css$Css$important = $rtfeldman$elm_css$Css$Preprocess$mapLastProperty($rtfeldman$elm_css$Css$makeImportant);
var $rtfeldman$elm_css$Css$inlineFlex = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'inline-flex'};
var $rtfeldman$elm_css$Css$justifyContent = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'justifyContent',
		'justify-content',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$rgba = F4(
	function (r, g, b, alpha) {
		return {
			alpha: alpha,
			blue: b,
			color: $rtfeldman$elm_css$Css$Structure$Compatible,
			green: g,
			red: r,
			value: A2(
				$rtfeldman$elm_css$Css$cssFunction,
				'rgba',
				_Utils_ap(
					A2(
						$elm$core$List$map,
						$elm$core$String$fromInt,
						_List_fromArray(
							[r, g, b])),
					_List_fromArray(
						[
							$elm$core$String$fromFloat(alpha)
						])))
		};
	});
var $author$project$Button$Css$lightenColor = function (color) {
	return A4($rtfeldman$elm_css$Css$rgba, color.red, color.green, color.blue, 0.2);
};
var $rtfeldman$elm_css$Css$prop2 = F3(
	function (key, argA, argB) {
		return A2(
			$rtfeldman$elm_css$Css$property,
			key,
			A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					[argA.value, argB.value])));
	});
var $rtfeldman$elm_css$Css$margin2 = $rtfeldman$elm_css$Css$prop2('margin');
var $rtfeldman$elm_css$Css$middle = $rtfeldman$elm_css$Css$prop1('middle');
var $rtfeldman$elm_css$Css$noWrap = {flexDirectionOrWrap: $rtfeldman$elm_css$Css$Structure$Compatible, flexWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'nowrap', whiteSpace: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Css$none = {backgroundImage: $rtfeldman$elm_css$Css$Structure$Compatible, blockAxisOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, cursor: $rtfeldman$elm_css$Css$Structure$Compatible, display: $rtfeldman$elm_css$Css$Structure$Compatible, hoverCapability: $rtfeldman$elm_css$Css$Structure$Compatible, inlineAxisOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, keyframes: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleType: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleTypeOrPositionOrImage: $rtfeldman$elm_css$Css$Structure$Compatible, none: $rtfeldman$elm_css$Css$Structure$Compatible, outline: $rtfeldman$elm_css$Css$Structure$Compatible, pointerDevice: $rtfeldman$elm_css$Css$Structure$Compatible, pointerEvents: $rtfeldman$elm_css$Css$Structure$Compatible, resize: $rtfeldman$elm_css$Css$Structure$Compatible, scriptingSupport: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationLine: $rtfeldman$elm_css$Css$Structure$Compatible, textTransform: $rtfeldman$elm_css$Css$Structure$Compatible, touchAction: $rtfeldman$elm_css$Css$Structure$Compatible, transform: $rtfeldman$elm_css$Css$Structure$Compatible, updateFrequency: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'none'};
var $rtfeldman$elm_css$Css$notAllowed = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'not-allowed'};
var $rtfeldman$elm_css$Css$UnitlessFloat = {$: 'UnitlessFloat'};
var $rtfeldman$elm_css$Css$num = function (val) {
	return {
		lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
		number: $rtfeldman$elm_css$Css$Structure$Compatible,
		numericValue: val,
		unitLabel: '',
		units: $rtfeldman$elm_css$Css$UnitlessFloat,
		value: $elm$core$String$fromFloat(val)
	};
};
var $rtfeldman$elm_css$Css$opacity = $rtfeldman$elm_css$Css$prop1('opacity');
var $rtfeldman$elm_css$Css$outlineWidth = $rtfeldman$elm_css$Css$prop1('outline-width');
var $rtfeldman$elm_css$Css$overflow = $rtfeldman$elm_css$Css$prop1('overflow');
var $rtfeldman$elm_css$Css$padding2 = $rtfeldman$elm_css$Css$prop2('padding');
var $rtfeldman$elm_css$Css$pointer = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'pointer'};
var $rtfeldman$elm_css$Css$solid = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationStyle: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'solid'};
var $rtfeldman$elm_css$Css$textDecoration = $rtfeldman$elm_css$Css$prop1('text-decoration');
var $rtfeldman$elm_css$Css$transparent = {color: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'transparent'};
var $rtfeldman$elm_css$Css$verticalAlign = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'verticalAlign',
		'vertical-align',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$whiteSpace = $rtfeldman$elm_css$Css$prop1('white-space');
var $author$project$Button$Css$button = F5(
	function (size, content, color, isDisabled, isLoading) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					A4($rtfeldman$elm_css$Css$rgba, color.red, color.green, color.blue, 0.2)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(2)),
					$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$transparent),
					$rtfeldman$elm_css$Css$important(
					$rtfeldman$elm_css$Css$color(color)),
					$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
					$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
					$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
					$rtfeldman$elm_css$Css$outlineWidth(
					$rtfeldman$elm_css$Css$px(0)),
					$rtfeldman$elm_css$Css$cursor(
					(isDisabled || isLoading) ? $rtfeldman$elm_css$Css$notAllowed : $rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$opacity(
					isDisabled ? $rtfeldman$elm_css$Css$num(0.4) : $rtfeldman$elm_css$Css$num(1)),
					$rtfeldman$elm_css$Css$height(
					$author$project$Button$Css$buttonHeight(size)),
					A2($author$project$Button$Css$buttonWidth, content, size),
					A2(
					$rtfeldman$elm_css$Css$padding2,
					$rtfeldman$elm_css$Css$px(0),
					A2($author$project$Button$Css$buttonPadding, content, size)),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					A2(
					$rtfeldman$elm_css$Css$margin2,
					$rtfeldman$elm_css$Css$px(0),
					$rtfeldman$elm_css$Css$rem(0.2)),
					$rtfeldman$elm_css$Css$fontSize(
					$rtfeldman$elm_css$Css$rem(0.8)),
					$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$middle),
					$rtfeldman$elm_css$Css$important(
					$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none)),
					A2($rtfeldman$elm_css$Css$property, 'user-select', 'none'),
					$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
					$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
					$rtfeldman$elm_css$Css$hover(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$backgroundColor(
							$author$project$Button$Css$lightenColor(color))
						]))
				]));
	});
var $rtfeldman$elm_css$Html$Styled$button = $rtfeldman$elm_css$Html$Styled$node('button');
var $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode = $rtfeldman$elm_css$VirtualDom$Styled$Unstyled;
var $rtfeldman$elm_css$Html$Styled$fromUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode;
var $author$project$Button$iconSize = function (size) {
	if (size.$ === 'Small') {
		return 14;
	} else {
		return 18;
	}
};
var $author$project$Button$Css$loading = function (size) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$property, 'animation', 'spin 1.5s linear infinite'),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$px(size))
			]));
};
var $author$project$Button$Css$loadingText = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$marginLeft(
			$rtfeldman$elm_css$Css$rem(0.25))
		]));
var $rtfeldman$elm_css$Css$displayFlex = A2($rtfeldman$elm_css$Css$property, 'display', 'flex');
var $author$project$Button$Css$loadingTextContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
		]));
var $elm$svg$Svg$polyline = $elm$svg$Svg$trustedNode('polyline');
var $feathericons$elm_feather$FeatherIcons$refreshCw = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'refresh-cw',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-refresh-cw')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('23 4 23 10 17 10')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('1 20 1 14 7 14')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15')
						]),
					_List_Nil)
				]))
		]));
var $elm$svg$Svg$map = $elm$virtual_dom$VirtualDom$map;
var $feathericons$elm_feather$FeatherIcons$toHtml = F2(
	function (attributes, _v0) {
		var src = _v0.a.src;
		var attrs = _v0.a.attrs;
		var strSize = $elm$core$String$fromFloat(attrs.size);
		var baseAttributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$fill('none'),
				$elm$svg$Svg$Attributes$height(
				_Utils_ap(strSize, attrs.sizeUnit)),
				$elm$svg$Svg$Attributes$width(
				_Utils_ap(strSize, attrs.sizeUnit)),
				$elm$svg$Svg$Attributes$stroke('currentColor'),
				$elm$svg$Svg$Attributes$strokeLinecap('round'),
				$elm$svg$Svg$Attributes$strokeLinejoin('round'),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(attrs.strokeWidth)),
				$elm$svg$Svg$Attributes$viewBox(attrs.viewBox)
			]);
		var combinedAttributes = _Utils_ap(
			function () {
				var _v1 = attrs._class;
				if (_v1.$ === 'Just') {
					var c = _v1.a;
					return A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$class(c),
						baseAttributes);
				} else {
					return baseAttributes;
				}
			}(),
			attributes);
		return A2(
			$elm$svg$Svg$svg,
			combinedAttributes,
			A2(
				$elm$core$List$map,
				$elm$svg$Svg$map($elm$core$Basics$never),
				src));
	});
var $feathericons$elm_feather$FeatherIcons$withSize = F2(
	function (size, _v0) {
		var attrs = _v0.a.attrs;
		var src = _v0.a.src;
		return $feathericons$elm_feather$FeatherIcons$Icon(
			{
				attrs: _Utils_update(
					attrs,
					{size: size}),
				src: src
			});
	});
var $author$project$Button$content = F4(
	function (content_, size, color, isLoading_) {
		var _v0 = _Utils_Tuple2(content_, isLoading_);
		if (_v0.a.$ === 'Text') {
			if (!_v0.b) {
				var string = _v0.a.a;
				return $rtfeldman$elm_css$Html$Styled$text(string);
			} else {
				var string = _v0.a.a;
				return A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Button$Css$loadingTextContainer]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Button$Css$loading(
									$author$project$Button$iconSize(size))
								]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$fromUnstyled(
									A2(
										$feathericons$elm_feather$FeatherIcons$toHtml,
										_List_Nil,
										A2(
											$feathericons$elm_feather$FeatherIcons$withSize,
											$author$project$Button$iconSize(size),
											$feathericons$elm_feather$FeatherIcons$refreshCw)))
								])),
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[$author$project$Button$Css$loadingText]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$text(string)
								]))
						]));
			}
		} else {
			if (!_v0.b) {
				var icon_ = _v0.a.a;
				return $rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2(
							$feathericons$elm_feather$FeatherIcons$withSize,
							$author$project$Button$iconSize(size),
							icon_)));
			} else {
				return A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							$author$project$Button$Css$loading(
							$author$project$Button$iconSize(size))
						]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$fromUnstyled(
							A2(
								$feathericons$elm_feather$FeatherIcons$toHtml,
								_List_Nil,
								A2(
									$feathericons$elm_feather$FeatherIcons$withSize,
									$author$project$Button$iconSize(size),
									$feathericons$elm_feather$FeatherIcons$refreshCw)))
						]));
			}
		}
	});
var $author$project$Html$Styled$Bdt$maybeAttribute = F2(
	function (f, maybe) {
		if (maybe.$ === 'Nothing') {
			return $rtfeldman$elm_css$Html$Styled$Attributes$class('');
		} else {
			var a = maybe.a;
			return f(a);
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$on = F2(
	function (eventName, handler) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$on, eventName, handler),
			_List_Nil,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Events$on = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $rtfeldman$elm_css$Html$Styled$Events$onClick = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Css$Global$global = function (snippets) {
	return $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode(
		A3(
			$elm$virtual_dom$VirtualDom$node,
			'style',
			_List_Nil,
			$elm$core$List$singleton(
				$elm$virtual_dom$VirtualDom$text(
					$rtfeldman$elm_css$Css$Preprocess$Resolve$compile(
						$elm$core$List$singleton(
							$rtfeldman$elm_css$Css$Preprocess$stylesheet(snippets)))))));
};
var $rtfeldman$elm_css$Css$Global$selector = F2(
	function (selectorStr, styles) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet,
			styles,
			A2($rtfeldman$elm_css$Css$Structure$CustomSelector, selectorStr, _List_Nil));
	});
var $author$project$Button$Css$spinKeyFrames = $rtfeldman$elm_css$Css$Global$global(
	_List_fromArray(
		[
			A2(
			$rtfeldman$elm_css$Css$Global$selector,
			'@keyframes spin',
			_List_fromArray(
				[
					A2($rtfeldman$elm_css$Css$property, '0% { transform', 'rotate(0deg); } 100% { transform: rotate(360deg); }')
				]))
		]));
var $rtfeldman$elm_css$Html$Styled$Attributes$target = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('target');
var $author$project$Button$render = function (_v0) {
	var config = _v0.a;
	var _v1 = _Utils_Tuple3(config.isShown, config.isDisabled, config.href);
	if (!_v1.a) {
		return $rtfeldman$elm_css$Html$Styled$text('');
	} else {
		if (_v1.b) {
			return A2(
				$rtfeldman$elm_css$Html$Styled$button,
				_List_fromArray(
					[
						A5($author$project$Button$Css$button, config.size, config.content, config.color, config.isDisabled, config.isLoading)
					]),
				_List_fromArray(
					[
						$author$project$Button$Css$spinKeyFrames,
						A4($author$project$Button$content, config.content, config.size, config.color, config.isLoading)
					]));
		} else {
			if (_v1.c.$ === 'Nothing') {
				var _v2 = _v1.c;
				return A2(
					$rtfeldman$elm_css$Html$Styled$button,
					_List_fromArray(
						[
							A5($author$project$Button$Css$button, config.size, config.content, config.color, config.isDisabled, config.isLoading),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!config.isDisabled,
							A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Events$onClick, config.onClick))
						]),
					_List_fromArray(
						[
							$author$project$Button$Css$spinKeyFrames,
							A4($author$project$Button$content, config.content, config.size, config.color, config.isLoading)
						]));
			} else {
				var href_ = _v1.c.a;
				return A2(
					$rtfeldman$elm_css$Html$Styled$a,
					_List_fromArray(
						[
							A5($author$project$Button$Css$button, config.size, config.content, config.color, config.isDisabled, config.isLoading),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!config.isDisabled,
							A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Events$onClick, config.onClick)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!_Utils_eq(config.href, $elm$core$Maybe$Nothing),
							$rtfeldman$elm_css$Html$Styled$Attributes$href(href_.url)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							href_.blank,
							$rtfeldman$elm_css$Html$Styled$Attributes$target('blank_'))
						]),
					_List_fromArray(
						[
							$author$project$Button$Css$spinKeyFrames,
							A4($author$project$Button$content, config.content, config.size, config.color, config.isLoading)
						]));
			}
		}
	}
};
var $rtfeldman$elm_css$Css$flexWrap = $rtfeldman$elm_css$Css$prop1('flex-wrap');
var $rtfeldman$elm_css$Css$wrap = {flexDirectionOrWrap: $rtfeldman$elm_css$Css$Structure$Compatible, flexWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'wrap'};
var $author$project$Card$Css$body = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$flexWrap($rtfeldman$elm_css$Css$wrap),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0.8),
			$rtfeldman$elm_css$Css$rem(0))
		]));
var $rtfeldman$elm_css$Css$withPrecedingHash = function (str) {
	return A2($elm$core$String$startsWith, '#', str) ? str : A2(
		$elm$core$String$cons,
		_Utils_chr('#'),
		str);
};
var $rtfeldman$elm_css$Css$erroneousHex = function (str) {
	return {
		alpha: 1,
		blue: 0,
		color: $rtfeldman$elm_css$Css$Structure$Compatible,
		green: 0,
		red: 0,
		value: $rtfeldman$elm_css$Css$withPrecedingHash(str)
	};
};
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Basics$pow = _Basics_pow;
var $rtfeldman$elm_hex$Hex$fromStringHelp = F3(
	function (position, chars, accumulated) {
		fromStringHelp:
		while (true) {
			if (!chars.b) {
				return $elm$core$Result$Ok(accumulated);
			} else {
				var _char = chars.a;
				var rest = chars.b;
				switch (_char.valueOf()) {
					case '0':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated;
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '1':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + A2($elm$core$Basics$pow, 16, position);
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '2':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (2 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '3':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (3 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '4':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (4 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '5':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (5 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '6':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (6 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '7':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (7 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '8':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (8 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '9':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (9 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'a':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (10 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'b':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (11 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'c':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (12 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'd':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (13 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'e':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (14 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'f':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (15 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					default:
						var nonHex = _char;
						return $elm$core$Result$Err(
							$elm$core$String$fromChar(nonHex) + ' is not a valid hexadecimal character.');
				}
			}
		}
	});
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (result.$ === 'Ok') {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $rtfeldman$elm_hex$Hex$fromString = function (str) {
	if ($elm$core$String$isEmpty(str)) {
		return $elm$core$Result$Err('Empty strings are not valid hexadecimal strings.');
	} else {
		var result = function () {
			if (A2($elm$core$String$startsWith, '-', str)) {
				var list = A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					$elm$core$List$tail(
						$elm$core$String$toList(str)));
				return A2(
					$elm$core$Result$map,
					$elm$core$Basics$negate,
					A3(
						$rtfeldman$elm_hex$Hex$fromStringHelp,
						$elm$core$List$length(list) - 1,
						list,
						0));
			} else {
				return A3(
					$rtfeldman$elm_hex$Hex$fromStringHelp,
					$elm$core$String$length(str) - 1,
					$elm$core$String$toList(str),
					0);
			}
		}();
		var formatError = function (err) {
			return A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					['\"' + (str + '\"'), 'is not a valid hexadecimal string because', err]));
		};
		return A2($elm$core$Result$mapError, formatError, result);
	}
};
var $rtfeldman$elm_css$Css$validHex = F5(
	function (str, _v0, _v1, _v2, _v3) {
		var r1 = _v0.a;
		var r2 = _v0.b;
		var g1 = _v1.a;
		var g2 = _v1.b;
		var b1 = _v2.a;
		var b2 = _v2.b;
		var a1 = _v3.a;
		var a2 = _v3.b;
		var toResult = A2(
			$elm$core$Basics$composeR,
			$elm$core$String$fromList,
			A2($elm$core$Basics$composeR, $elm$core$String$toLower, $rtfeldman$elm_hex$Hex$fromString));
		var results = _Utils_Tuple2(
			_Utils_Tuple2(
				toResult(
					_List_fromArray(
						[r1, r2])),
				toResult(
					_List_fromArray(
						[g1, g2]))),
			_Utils_Tuple2(
				toResult(
					_List_fromArray(
						[b1, b2])),
				toResult(
					_List_fromArray(
						[a1, a2]))));
		if ((((results.a.a.$ === 'Ok') && (results.a.b.$ === 'Ok')) && (results.b.a.$ === 'Ok')) && (results.b.b.$ === 'Ok')) {
			var _v5 = results.a;
			var red = _v5.a.a;
			var green = _v5.b.a;
			var _v6 = results.b;
			var blue = _v6.a.a;
			var alpha = _v6.b.a;
			return {
				alpha: alpha / 255,
				blue: blue,
				color: $rtfeldman$elm_css$Css$Structure$Compatible,
				green: green,
				red: red,
				value: $rtfeldman$elm_css$Css$withPrecedingHash(str)
			};
		} else {
			return $rtfeldman$elm_css$Css$erroneousHex(str);
		}
	});
var $rtfeldman$elm_css$Css$hex = function (str) {
	var withoutHash = A2($elm$core$String$startsWith, '#', str) ? A2($elm$core$String$dropLeft, 1, str) : str;
	var _v0 = $elm$core$String$toList(withoutHash);
	_v0$4:
	while (true) {
		if ((_v0.b && _v0.b.b) && _v0.b.b.b) {
			if (!_v0.b.b.b.b) {
				var r = _v0.a;
				var _v1 = _v0.b;
				var g = _v1.a;
				var _v2 = _v1.b;
				var b = _v2.a;
				return A5(
					$rtfeldman$elm_css$Css$validHex,
					str,
					_Utils_Tuple2(r, r),
					_Utils_Tuple2(g, g),
					_Utils_Tuple2(b, b),
					_Utils_Tuple2(
						_Utils_chr('f'),
						_Utils_chr('f')));
			} else {
				if (!_v0.b.b.b.b.b) {
					var r = _v0.a;
					var _v3 = _v0.b;
					var g = _v3.a;
					var _v4 = _v3.b;
					var b = _v4.a;
					var _v5 = _v4.b;
					var a = _v5.a;
					return A5(
						$rtfeldman$elm_css$Css$validHex,
						str,
						_Utils_Tuple2(r, r),
						_Utils_Tuple2(g, g),
						_Utils_Tuple2(b, b),
						_Utils_Tuple2(a, a));
				} else {
					if (_v0.b.b.b.b.b.b) {
						if (!_v0.b.b.b.b.b.b.b) {
							var r1 = _v0.a;
							var _v6 = _v0.b;
							var r2 = _v6.a;
							var _v7 = _v6.b;
							var g1 = _v7.a;
							var _v8 = _v7.b;
							var g2 = _v8.a;
							var _v9 = _v8.b;
							var b1 = _v9.a;
							var _v10 = _v9.b;
							var b2 = _v10.a;
							return A5(
								$rtfeldman$elm_css$Css$validHex,
								str,
								_Utils_Tuple2(r1, r2),
								_Utils_Tuple2(g1, g2),
								_Utils_Tuple2(b1, b2),
								_Utils_Tuple2(
									_Utils_chr('f'),
									_Utils_chr('f')));
						} else {
							if (_v0.b.b.b.b.b.b.b.b && (!_v0.b.b.b.b.b.b.b.b.b)) {
								var r1 = _v0.a;
								var _v11 = _v0.b;
								var r2 = _v11.a;
								var _v12 = _v11.b;
								var g1 = _v12.a;
								var _v13 = _v12.b;
								var g2 = _v13.a;
								var _v14 = _v13.b;
								var b1 = _v14.a;
								var _v15 = _v14.b;
								var b2 = _v15.a;
								var _v16 = _v15.b;
								var a1 = _v16.a;
								var _v17 = _v16.b;
								var a2 = _v17.a;
								return A5(
									$rtfeldman$elm_css$Css$validHex,
									str,
									_Utils_Tuple2(r1, r2),
									_Utils_Tuple2(g1, g2),
									_Utils_Tuple2(b1, b2),
									_Utils_Tuple2(a1, a2));
							} else {
								break _v0$4;
							}
						}
					} else {
						break _v0$4;
					}
				}
			}
		} else {
			break _v0$4;
		}
	}
	return $rtfeldman$elm_css$Css$erroneousHex(str);
};
var $rtfeldman$elm_css$Css$marginBottom = $rtfeldman$elm_css$Css$prop1('margin-bottom');
var $author$project$Card$Css$card = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$backgroundColor(
			$rtfeldman$elm_css$Css$hex('ffffff')),
			A3(
			$rtfeldman$elm_css$Css$border3,
			$rtfeldman$elm_css$Css$px(1),
			$rtfeldman$elm_css$Css$solid,
			$rtfeldman$elm_css$Css$hex('cccccc')),
			$rtfeldman$elm_css$Css$borderRadius(
			$rtfeldman$elm_css$Css$px(2)),
			$rtfeldman$elm_css$Css$color(
			$rtfeldman$elm_css$Css$hex('4f4f4f')),
			$rtfeldman$elm_css$Css$marginBottom(
			$rtfeldman$elm_css$Css$rem(0.8)),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0.8),
			$rtfeldman$elm_css$Css$rem(0))
		]));
var $author$project$Html$Styled$Bdt$divIf = F3(
	function (show, attributes, children) {
		if (show) {
			return A2($rtfeldman$elm_css$Html$Styled$div, attributes, children);
		} else {
			return $rtfeldman$elm_css$Html$Styled$text('');
		}
	});
var $rtfeldman$elm_css$Css$flexEnd = $rtfeldman$elm_css$Css$prop1('flex-end');
var $author$project$Card$Css$footer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$flexEnd),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0),
			$rtfeldman$elm_css$Css$rem(0.8))
		]));
var $rtfeldman$elm_css$Css$fontWeight = function (_v0) {
	var value = _v0.value;
	return A2($rtfeldman$elm_css$Css$property, 'font-weight', value);
};
var $rtfeldman$elm_css$Css$UnitlessInteger = {$: 'UnitlessInteger'};
var $rtfeldman$elm_css$Css$int = function (val) {
	return {
		fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible,
		intOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
		number: $rtfeldman$elm_css$Css$Structure$Compatible,
		numericValue: val,
		unitLabel: '',
		units: $rtfeldman$elm_css$Css$UnitlessInteger,
		value: $elm$core$String$fromInt(val)
	};
};
var $rtfeldman$elm_css$Css$spaceBetween = $rtfeldman$elm_css$Css$prop1('space-between');
var $author$project$Card$Css$header = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0),
			$rtfeldman$elm_css$Css$rem(0.8)),
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
			$rtfeldman$elm_css$Css$fontSize(
			$rtfeldman$elm_css$Css$rem(1.2)),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(600))
		]));
var $author$project$Grid$SizeHelpers$colsToFloat = function (cols) {
	switch (cols.$) {
		case 'One':
			return 1;
		case 'Two':
			return 2;
		case 'Three':
			return 3;
		case 'Four':
			return 4;
		case 'Five':
			return 5;
		case 'Six':
			return 6;
		case 'Seven':
			return 7;
		case 'Eight':
			return 8;
		case 'Nine':
			return 9;
		case 'Ten':
			return 10;
		case 'Eleven':
			return 11;
		default:
			return 12;
	}
};
var $rtfeldman$elm_css$Css$flexBasis = $rtfeldman$elm_css$Css$prop1('flex-basis');
var $author$project$Grid$Css$colSize = function (_v0) {
	var size = _v0.a;
	var cols = _v0.b;
	return A2(
		$rtfeldman$elm_css$Css$Media$withMedia,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Media$all(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$Media$minWidth(
						$rtfeldman$elm_css$Css$px(
							$author$project$Grid$SizeHelpers$breakpointPxWidth(size)))
					]))
			]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$flexBasis(
				$rtfeldman$elm_css$Css$pct(
					(100 / 12) * $author$project$Grid$SizeHelpers$colsToFloat(cols))),
				$rtfeldman$elm_css$Css$maxWidth(
				$rtfeldman$elm_css$Css$pct(
					(100 / 12) * $author$project$Grid$SizeHelpers$colsToFloat(cols)))
			]));
};
var $author$project$Grid$Css$defaultColSize = function (cols) {
	return A2(
		$rtfeldman$elm_css$Css$Media$withMedia,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Media$all(_List_Nil)
			]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$flexBasis(
				$rtfeldman$elm_css$Css$pct(
					(100 / 12) * $author$project$Grid$SizeHelpers$colsToFloat(cols))),
				$rtfeldman$elm_css$Css$maxWidth(
				$rtfeldman$elm_css$Css$pct(
					(100 / 12) * $author$project$Grid$SizeHelpers$colsToFloat(cols)))
			]));
};
var $rtfeldman$elm_css$Css$flexGrow = $rtfeldman$elm_css$Css$prop1('flex-grow');
var $author$project$Grid$SizeHelpers$orderBySize = function (sizes) {
	return A2(
		$elm$core$List$sortBy,
		A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $author$project$Grid$SizeHelpers$containerPxWidth),
		sizes);
};
var $author$project$Card$Css$block = F2(
	function (cols, sizes) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$Grid$Css$colSize,
					$author$project$Grid$SizeHelpers$orderBySize(sizes)),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$num(1)),
						A2(
						$rtfeldman$elm_css$Css$padding2,
						$rtfeldman$elm_css$Css$rem(0.2),
						$rtfeldman$elm_css$Css$rem(0.8)),
						$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
						$author$project$Grid$Css$defaultColSize(cols)
					])));
	});
var $author$project$Card$renderCardBlock = function (_v0) {
	var cardBlockConfig = _v0.a;
	return A3(
		$author$project$Html$Styled$Bdt$divIf,
		!$elm$core$List$isEmpty(cardBlockConfig.children),
		_List_fromArray(
			[
				A2($author$project$Card$Css$block, cardBlockConfig.defaultCols, cardBlockConfig.sizes)
			]),
		cardBlockConfig.children);
};
var $rtfeldman$elm_css$Html$Styled$span = $rtfeldman$elm_css$Html$Styled$node('span');
var $author$project$Card$render = function (_v0) {
	var viewConfig = _v0.a;
	return A3(
		$author$project$Html$Styled$Bdt$divIf,
		viewConfig.isShown,
		_List_fromArray(
			[$author$project$Card$Css$card]),
		_List_fromArray(
			[
				A3(
				$author$project$Html$Styled$Bdt$divIf,
				(viewConfig.headerTitle !== '') || (!$elm$core$List$isEmpty(viewConfig.headerButtons)),
				_List_fromArray(
					[$author$project$Card$Css$header]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$span,
						_List_Nil,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$text(viewConfig.headerTitle)
							])),
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_Nil,
						A2($elm$core$List$map, $author$project$Button$render, viewConfig.headerButtons))
					])),
				A3(
				$author$project$Html$Styled$Bdt$divIf,
				!$elm$core$List$isEmpty(viewConfig.cardBlocks),
				_List_fromArray(
					[$author$project$Card$Css$body]),
				A2($elm$core$List$map, $author$project$Card$renderCardBlock, viewConfig.cardBlocks)),
				A3(
				$author$project$Html$Styled$Bdt$divIf,
				!$elm$core$List$isEmpty(viewConfig.footerButtons),
				_List_fromArray(
					[$author$project$Card$Css$footer]),
				A2($elm$core$List$map, $author$project$Button$render, viewConfig.footerButtons))
			]));
};
var $author$project$Form$DatePicker$Internal$Open = F3(
	function (a, b, c) {
		return {$: 'Open', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$position = $rtfeldman$elm_css$Css$prop1('position');
var $rtfeldman$elm_css$Css$relative = {position: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'relative'};
var $author$project$Form$DatePicker$Css$container = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
		]));
var $rtfeldman$elm_css$Css$ellipsis = {textOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'ellipsis'};
var $rtfeldman$elm_css$Css$focus = $rtfeldman$elm_css$Css$pseudoClass('focus');
var $rtfeldman$elm_css$Css$overflowX = $rtfeldman$elm_css$Css$prop1('overflow-x');
var $rtfeldman$elm_css$Css$textOverflow = $rtfeldman$elm_css$Css$prop1('text-overflow');
var $author$project$Form$Css$input = F2(
	function (isError, isLocked) {
		return _List_fromArray(
			[
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				A3(
				$rtfeldman$elm_css$Css$border3,
				$rtfeldman$elm_css$Css$px(1),
				$rtfeldman$elm_css$Css$solid,
				$rtfeldman$elm_css$Css$hex(
					(isError && (!isLocked)) ? 'd9534f' : 'cccccc')),
				$rtfeldman$elm_css$Css$width(
				$rtfeldman$elm_css$Css$pct(100)),
				$rtfeldman$elm_css$Css$maxWidth(
				$rtfeldman$elm_css$Css$pct(100)),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$rem(2)),
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$rem(0),
				$rtfeldman$elm_css$Css$rem(0.4)),
				A2(
				$rtfeldman$elm_css$Css$margin2,
				$rtfeldman$elm_css$Css$rem(0.5),
				$rtfeldman$elm_css$Css$rem(0)),
				$rtfeldman$elm_css$Css$color(
				$rtfeldman$elm_css$Css$hex('555555')),
				$rtfeldman$elm_css$Css$backgroundColor(
				$rtfeldman$elm_css$Css$hex(
					isLocked ? 'dddddd' : 'ffffff')),
				$rtfeldman$elm_css$Css$fontSize(
				$rtfeldman$elm_css$Css$rem(0.8)),
				$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
				$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
				$rtfeldman$elm_css$Css$overflowX($rtfeldman$elm_css$Css$hidden),
				$rtfeldman$elm_css$Css$focus(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$outlineWidth(
						$rtfeldman$elm_css$Css$rem(0))
					]))
			]);
	});
var $author$project$Form$Css$select = F2(
	function (isError, isLocked) {
		return _Utils_ap(
			A2($author$project$Form$Css$input, isError, isLocked),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$displayFlex,
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
				]));
	});
var $author$project$Form$DatePicker$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$select, isError, isLocked));
	});
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $author$project$Form$Helpers$onElementFocus = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'focus',
		A2(
			$elm$json$Json$Decode$map,
			$elm$core$Basics$always(msg),
			A2(
				$elm$json$Json$Decode$at,
				_List_fromArray(
					['relatedTarget', 'id']),
				$elm$json$Json$Decode$string)));
};
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$attribute = F2(
	function (key, value) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$attribute, key, value),
			_List_Nil,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$tabindex = function (n) {
	return A2(
		$rtfeldman$elm_css$VirtualDom$Styled$attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $rtfeldman$elm_css$Css$indeterminate = $rtfeldman$elm_css$Css$pseudoClass('indeterminate');
var $author$project$Css$Bdt$styleIf = F2(
	function (bool, style) {
		return bool ? style : $rtfeldman$elm_css$Css$indeterminate(_List_Nil);
	});
var $author$project$Form$Css$title = function (isFaded) {
	return _List_fromArray(
		[
			$rtfeldman$elm_css$Css$flexGrow(
			$rtfeldman$elm_css$Css$int(1)),
			A2(
			$author$project$Css$Bdt$styleIf,
			isFaded,
			$rtfeldman$elm_css$Css$color(
				A3($rtfeldman$elm_css$Css$rgb, 111, 111, 111))),
			A2(
			$author$project$Css$Bdt$styleIf,
			isFaded,
			$rtfeldman$elm_css$Css$fontWeight(
				$rtfeldman$elm_css$Css$int(200))),
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
			$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
			$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$overflowX($rtfeldman$elm_css$Css$hidden),
			$rtfeldman$elm_css$Css$maxWidth(
			$rtfeldman$elm_css$Css$pct(100))
		]);
};
var $author$project$Form$DatePicker$Css$title = function (isFaded) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		$author$project$Form$Css$title(isFaded));
};
var $author$project$Form$DatePicker$Internal$closed = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$DatePicker$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$DatePicker$Css$input, viewState.isError, viewState.isLocked),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$author$project$Form$Helpers$onElementFocus(
								A3($author$project$Form$DatePicker$Internal$Open, viewState.minPosix, viewState.maxPosix, viewState.includeTime))),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Events$onClick(
								A3($author$project$Form$DatePicker$Internal$Open, viewState.minPosix, viewState.maxPosix, viewState.includeTime)))
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$DatePicker$Css$title(
									_Utils_eq(
										$author$project$Resettable$getValue(state.selectedPosix),
										$elm$core$Maybe$Nothing))
								]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$text(
									A2(
										$elm$core$Maybe$withDefault,
										viewState.defaultLabel,
										A2(
											$elm$core$Maybe$map,
											viewState.toLabel(state.timeZone),
											$author$project$Resettable$getValue(state.selectedPosix))))
								])),
							A3(
							$author$project$Html$Styled$Bdt$divIf,
							viewState.isInput,
							_List_Nil,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$fromUnstyled(
									A2(
										$feathericons$elm_feather$FeatherIcons$toHtml,
										_List_Nil,
										A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$calendar)))
								]))
						]))
				]));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles = F2(
	function (_v0, styles) {
		var newStyles = _v0.b;
		var classname = _v0.c;
		return $elm$core$List$isEmpty(newStyles) ? styles : A3($elm$core$Dict$insert, classname, newStyles, styles);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute = function (_v0) {
	var val = _v0.a;
	return val;
};
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$keyedNodeNS = F2(
	function (namespace, tag) {
		return A2(
			_VirtualDom_keyedNodeNS,
			namespace,
			_VirtualDom_noScript(tag));
	});
var $elm$virtual_dom$VirtualDom$nodeNS = function (tag) {
	return _VirtualDom_nodeNS(
		_VirtualDom_noScript(tag));
};
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml = F2(
	function (_v6, _v7) {
		var key = _v6.a;
		var html = _v6.b;
		var pairs = _v7.a;
		var styles = _v7.b;
		switch (html.$) {
			case 'Unstyled':
				var vdom = html.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					styles);
			case 'Node':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v9 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v9.a;
				var finalStyles = _v9.b;
				var vdom = A3(
					$elm$virtual_dom$VirtualDom$node,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			case 'NodeNS':
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v10 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v10.a;
				var finalStyles = _v10.b;
				var vdom = A4(
					$elm$virtual_dom$VirtualDom$nodeNS,
					ns,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			case 'KeyedNode':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v11 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v11.a;
				var finalStyles = _v11.b;
				var vdom = A3(
					$elm$virtual_dom$VirtualDom$keyedNode,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			default:
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v12 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v12.a;
				var finalStyles = _v12.b;
				var vdom = A4(
					$elm$virtual_dom$VirtualDom$keyedNodeNS,
					ns,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml = F2(
	function (html, _v0) {
		var nodes = _v0.a;
		var styles = _v0.b;
		switch (html.$) {
			case 'Unstyled':
				var vdomNode = html.a;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					styles);
			case 'Node':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v2 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v2.a;
				var finalStyles = _v2.b;
				var vdomNode = A3(
					$elm$virtual_dom$VirtualDom$node,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			case 'NodeNS':
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v3 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v3.a;
				var finalStyles = _v3.b;
				var vdomNode = A4(
					$elm$virtual_dom$VirtualDom$nodeNS,
					ns,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			case 'KeyedNode':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v4 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v4.a;
				var finalStyles = _v4.b;
				var vdomNode = A3(
					$elm$virtual_dom$VirtualDom$keyedNode,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			default:
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v5 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v5.a;
				var finalStyles = _v5.b;
				var vdomNode = A4(
					$elm$virtual_dom$VirtualDom$keyedNodeNS,
					ns,
					elemType,
					A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
		}
	});
var $elm$core$Dict$singleton = F2(
	function (key, value) {
		return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$stylesFromPropertiesHelp = F2(
	function (candidate, properties) {
		stylesFromPropertiesHelp:
		while (true) {
			if (!properties.b) {
				return candidate;
			} else {
				var _v1 = properties.a;
				var styles = _v1.b;
				var classname = _v1.c;
				var rest = properties.b;
				if ($elm$core$String$isEmpty(classname)) {
					var $temp$candidate = candidate,
						$temp$properties = rest;
					candidate = $temp$candidate;
					properties = $temp$properties;
					continue stylesFromPropertiesHelp;
				} else {
					var $temp$candidate = $elm$core$Maybe$Just(
						_Utils_Tuple2(classname, styles)),
						$temp$properties = rest;
					candidate = $temp$candidate;
					properties = $temp$properties;
					continue stylesFromPropertiesHelp;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties = function (properties) {
	var _v0 = A2($rtfeldman$elm_css$VirtualDom$Styled$stylesFromPropertiesHelp, $elm$core$Maybe$Nothing, properties);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var _v1 = _v0.a;
		var classname = _v1.a;
		var styles = _v1.b;
		return A2($elm$core$Dict$singleton, classname, styles);
	}
};
var $rtfeldman$elm_css$Css$Structure$ClassSelector = function (a) {
	return {$: 'ClassSelector', a: a};
};
var $rtfeldman$elm_css$VirtualDom$Styled$snippetFromPair = function (_v0) {
	var classname = _v0.a;
	var styles = _v0.b;
	return A2(
		$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet,
		styles,
		$rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$ClassSelector(classname)
				])));
};
var $rtfeldman$elm_css$VirtualDom$Styled$toDeclaration = function (dict) {
	return $rtfeldman$elm_css$Css$Preprocess$Resolve$compile(
		$elm$core$List$singleton(
			$rtfeldman$elm_css$Css$Preprocess$stylesheet(
				A2(
					$elm$core$List$map,
					$rtfeldman$elm_css$VirtualDom$Styled$snippetFromPair,
					$elm$core$Dict$toList(dict)))));
};
var $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode = function (styles) {
	return A3(
		$elm$virtual_dom$VirtualDom$node,
		'style',
		_List_Nil,
		$elm$core$List$singleton(
			$elm$virtual_dom$VirtualDom$text(
				$rtfeldman$elm_css$VirtualDom$Styled$toDeclaration(styles))));
};
var $rtfeldman$elm_css$VirtualDom$Styled$unstyle = F3(
	function (elemType, properties, children) {
		var unstyledProperties = A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties);
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			children);
		var childNodes = _v0.a;
		var styles = _v0.b;
		var styleNode = $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode(styles);
		return A3(
			$elm$virtual_dom$VirtualDom$node,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				styleNode,
				$elm$core$List$reverse(childNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$containsKey = F2(
	function (key, pairs) {
		containsKey:
		while (true) {
			if (!pairs.b) {
				return false;
			} else {
				var _v1 = pairs.a;
				var str = _v1.a;
				var rest = pairs.b;
				if (_Utils_eq(key, str)) {
					return true;
				} else {
					var $temp$key = key,
						$temp$pairs = rest;
					key = $temp$key;
					pairs = $temp$pairs;
					continue containsKey;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey = F2(
	function (_default, pairs) {
		getUnusedKey:
		while (true) {
			if (!pairs.b) {
				return _default;
			} else {
				var _v1 = pairs.a;
				var firstKey = _v1.a;
				var rest = pairs.b;
				var newKey = '_' + firstKey;
				if (A2($rtfeldman$elm_css$VirtualDom$Styled$containsKey, newKey, rest)) {
					var $temp$default = newKey,
						$temp$pairs = rest;
					_default = $temp$default;
					pairs = $temp$pairs;
					continue getUnusedKey;
				} else {
					return newKey;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode = F2(
	function (allStyles, keyedChildNodes) {
		var styleNodeKey = A2($rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey, '_', keyedChildNodes);
		var finalNode = $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode(allStyles);
		return _Utils_Tuple2(styleNodeKey, finalNode);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed = F3(
	function (elemType, properties, keyedChildren) {
		var unstyledProperties = A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties);
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			keyedChildren);
		var keyedChildNodes = _v0.a;
		var styles = _v0.b;
		var keyedStyleNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode, styles, keyedChildNodes);
		return A3(
			$elm$virtual_dom$VirtualDom$keyedNode,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				keyedStyleNode,
				$elm$core$List$reverse(keyedChildNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS = F4(
	function (ns, elemType, properties, keyedChildren) {
		var unstyledProperties = A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties);
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			keyedChildren);
		var keyedChildNodes = _v0.a;
		var styles = _v0.b;
		var keyedStyleNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode, styles, keyedChildNodes);
		return A4(
			$elm$virtual_dom$VirtualDom$keyedNodeNS,
			ns,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				keyedStyleNode,
				$elm$core$List$reverse(keyedChildNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleNS = F4(
	function (ns, elemType, properties, children) {
		var unstyledProperties = A2($elm$core$List$map, $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute, properties);
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			children);
		var childNodes = _v0.a;
		var styles = _v0.b;
		var styleNode = $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode(styles);
		return A4(
			$elm$virtual_dom$VirtualDom$nodeNS,
			ns,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				styleNode,
				$elm$core$List$reverse(childNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled = function (vdom) {
	switch (vdom.$) {
		case 'Unstyled':
			var plainNode = vdom.a;
			return plainNode;
		case 'Node':
			var elemType = vdom.a;
			var properties = vdom.b;
			var children = vdom.c;
			return A3($rtfeldman$elm_css$VirtualDom$Styled$unstyle, elemType, properties, children);
		case 'NodeNS':
			var ns = vdom.a;
			var elemType = vdom.b;
			var properties = vdom.c;
			var children = vdom.d;
			return A4($rtfeldman$elm_css$VirtualDom$Styled$unstyleNS, ns, elemType, properties, children);
		case 'KeyedNode':
			var elemType = vdom.a;
			var properties = vdom.b;
			var children = vdom.c;
			return A3($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed, elemType, properties, children);
		default:
			var ns = vdom.a;
			var elemType = vdom.b;
			var properties = vdom.c;
			var children = vdom.d;
			return A4($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS, ns, elemType, properties, children);
	}
};
var $rtfeldman$elm_css$VirtualDom$Styled$lazyHelp2 = F3(
	function (fn, arg1, arg2) {
		return $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled(
			A2(fn, arg1, arg2));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$lazy2 = F3(
	function (fn, arg1, arg2) {
		return $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(
			A4($elm$virtual_dom$VirtualDom$lazy3, $rtfeldman$elm_css$VirtualDom$Styled$lazyHelp2, fn, arg1, arg2));
	});
var $rtfeldman$elm_css$Html$Styled$Lazy$lazy2 = $rtfeldman$elm_css$VirtualDom$Styled$lazy2;
var $author$project$Form$DatePicker$Internal$Blur = {$: 'Blur'};
var $rtfeldman$elm_css$Css$absolute = {position: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'absolute'};
var $rtfeldman$elm_css$Css$padding = $rtfeldman$elm_css$Css$prop1('padding');
var $rtfeldman$elm_css$Css$top = $rtfeldman$elm_css$Css$prop1('top');
var $rtfeldman$elm_css$Css$zIndex = $rtfeldman$elm_css$Css$prop1('z-index');
var $author$project$Form$DatePicker$Css$calendar = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			A3(
			$rtfeldman$elm_css$Css$border3,
			$rtfeldman$elm_css$Css$px(1),
			$rtfeldman$elm_css$Css$solid,
			$rtfeldman$elm_css$Css$hex('dddddd')),
			$rtfeldman$elm_css$Css$padding(
			$rtfeldman$elm_css$Css$px(15)),
			$rtfeldman$elm_css$Css$width(
			$rtfeldman$elm_css$Css$px(320)),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$px(33)),
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$zIndex(
			$rtfeldman$elm_css$Css$int(100)),
			$rtfeldman$elm_css$Css$backgroundColor(
			$rtfeldman$elm_css$Css$hex('ffffff'))
		]));
var $author$project$Form$DatePicker$Internal$SelectDay = F2(
	function (a, b) {
		return {$: 'SelectDay', a: a, b: b};
	});
var $author$project$Form$DatePicker$Css$calendarDayItemColors = F3(
	function (isSelected, isDesired, isSelectable) {
		var _v0 = _Utils_Tuple3(isSelected, isDesired, isSelectable);
		if (!_v0.c) {
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex('fbfbfb')),
					$rtfeldman$elm_css$Css$color(
					$rtfeldman$elm_css$Css$hex('dddddd'))
				]);
		} else {
			if (_v0.a) {
				return _List_fromArray(
					[
						$rtfeldman$elm_css$Css$backgroundColor(
						$rtfeldman$elm_css$Css$hex('6bb9f0')),
						$rtfeldman$elm_css$Css$color(
						$rtfeldman$elm_css$Css$hex('ffffff'))
					]);
			} else {
				if (_v0.b) {
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$backgroundColor(
							$rtfeldman$elm_css$Css$hex('4b77be')),
							$rtfeldman$elm_css$Css$color(
							$rtfeldman$elm_css$Css$hex('ffffff')),
							$rtfeldman$elm_css$Css$hover(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$backgroundColor(
									$rtfeldman$elm_css$Css$hex('6bb9f0')),
									$rtfeldman$elm_css$Css$color(
									$rtfeldman$elm_css$Css$hex('ffffff'))
								]))
						]);
				} else {
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$backgroundColor(
							$rtfeldman$elm_css$Css$hex('f3f3f3')),
							$rtfeldman$elm_css$Css$color(
							$rtfeldman$elm_css$Css$hex('666666')),
							$rtfeldman$elm_css$Css$hover(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$backgroundColor(
									$rtfeldman$elm_css$Css$hex('6bb9f0')),
									$rtfeldman$elm_css$Css$color(
									$rtfeldman$elm_css$Css$hex('ffffff'))
								]))
						]);
				}
			}
		}
	});
var $rtfeldman$elm_css$Css$margin = $rtfeldman$elm_css$Css$prop1('margin');
var $author$project$Form$DatePicker$Css$calendarDayItem = F3(
	function (isSelected, isDesired, isSelectable) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_Utils_ap(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexBasis(
						$rtfeldman$elm_css$Css$px(0)),
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$int(1)),
						$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
						$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
						$rtfeldman$elm_css$Css$padding(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$margin(
						$rtfeldman$elm_css$Css$px(3)),
						$rtfeldman$elm_css$Css$borderRadius(
						$rtfeldman$elm_css$Css$px(2)),
						$rtfeldman$elm_css$Css$cursor(
						isSelectable ? $rtfeldman$elm_css$Css$pointer : $rtfeldman$elm_css$Css$notAllowed)
					]),
				A3($author$project$Form$DatePicker$Css$calendarDayItemColors, isSelected, isDesired, isSelectable)));
	});
var $author$project$Form$DatePicker$Internal$calendarDay = F4(
	function (state, viewState, navigationPosix, posix) {
		var isSelectedPosix = function () {
			var _v1 = $author$project$Resettable$getValue(state.selectedPosix);
			if (_v1.$ === 'Nothing') {
				return false;
			} else {
				var selectedPosix = _v1.a;
				return _Utils_eq(
					$elm$time$Time$posixToMillis(posix),
					$elm$time$Time$posixToMillis(selectedPosix));
			}
		}();
		var isInRange = function (clampedPosix) {
			return _Utils_eq(
				A2($elm$time$Time$toYear, state.timeZone, posix),
				A2($elm$time$Time$toYear, state.timeZone, clampedPosix)) && (_Utils_eq(
				A2($elm$time$Time$toMonth, state.timeZone, posix),
				A2($elm$time$Time$toMonth, state.timeZone, clampedPosix)) && _Utils_eq(
				A2($elm$time$Time$toDay, state.timeZone, posix),
				A2($elm$time$Time$toDay, state.timeZone, clampedPosix)));
		}(
			A3($author$project$Time$Bdt$maybeClamp, viewState.minPosix, viewState.maxPosix, posix));
		var isDesiredPosix = function () {
			var _v0 = state.desiredPosix;
			if (_v0.$ === 'Nothing') {
				return false;
			} else {
				var desiredPosix = _v0.a;
				return _Utils_eq(
					$elm$time$Time$posixToMillis(posix),
					$elm$time$Time$posixToMillis(desiredPosix));
			}
		}();
		var isCurrentMonth = _Utils_eq(
			A2($elm$time$Time$toYear, state.timeZone, posix),
			A2($elm$time$Time$toYear, state.timeZone, navigationPosix)) && _Utils_eq(
			A2($elm$time$Time$toMonth, state.timeZone, posix),
			A2($elm$time$Time$toMonth, state.timeZone, navigationPosix));
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					A3($author$project$Form$DatePicker$Css$calendarDayItem, isSelectedPosix, isDesiredPosix, isCurrentMonth && isInRange),
					A2(
					$author$project$Html$Styled$Bdt$attributeIf,
					isCurrentMonth && isInRange,
					$rtfeldman$elm_css$Html$Styled$Events$onClick(
						A2($author$project$Form$DatePicker$Internal$SelectDay, posix, viewState.includeTime)))
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text(
					$elm$core$String$fromInt(
						A2($elm$time$Time$toDay, state.timeZone, posix)))
				]));
	});
var $author$project$Form$DatePicker$Css$calendarDayRow = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[$rtfeldman$elm_css$Css$displayFlex]));
var $author$project$Form$DatePicker$Internal$calendarDayRow = F4(
	function (state, viewState, navigationPosix, row) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$DatePicker$Css$calendarDayRow]),
			A2(
				$elm$core$List$map,
				A3($author$project$Form$DatePicker$Internal$calendarDay, state, viewState, navigationPosix),
				row));
	});
var $justinmimbs$date$Date$toMonths = function (rd) {
	var date = $justinmimbs$date$Date$toCalendarDate(
		$justinmimbs$date$Date$RD(rd));
	var wholeMonths = (12 * (date.year - 1)) + ($justinmimbs$date$Date$monthToNumber(date.month) - 1);
	return wholeMonths + (date.day / 100);
};
var $elm$core$Basics$truncate = _Basics_truncate;
var $justinmimbs$date$Date$diff = F3(
	function (unit, _v0, _v1) {
		var rd1 = _v0.a;
		var rd2 = _v1.a;
		switch (unit.$) {
			case 'Years':
				return ((($justinmimbs$date$Date$toMonths(rd2) - $justinmimbs$date$Date$toMonths(rd1)) | 0) / 12) | 0;
			case 'Months':
				return ($justinmimbs$date$Date$toMonths(rd2) - $justinmimbs$date$Date$toMonths(rd1)) | 0;
			case 'Weeks':
				return ((rd2 - rd1) / 7) | 0;
			default:
				return rd2 - rd1;
		}
	});
var $justinmimbs$date$Date$Month = {$: 'Month'};
var $elm$time$Time$Tue = {$: 'Tue'};
var $elm$time$Time$Wed = {$: 'Wed'};
var $justinmimbs$date$Date$weekdayNumber = function (_v0) {
	var rd = _v0.a;
	var _v1 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v1) {
		return 7;
	} else {
		var n = _v1;
		return n;
	}
};
var $justinmimbs$date$Date$weekdayToNumber = function (wd) {
	switch (wd.$) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$date$Date$daysSincePreviousWeekday = F2(
	function (wd, date) {
		return A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$date$Date$weekdayNumber(date) + 7) - $justinmimbs$date$Date$weekdayToNumber(wd));
	});
var $justinmimbs$date$Date$firstOfMonth = F2(
	function (y, m) {
		return $justinmimbs$date$Date$RD(
			($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + 1);
	});
var $justinmimbs$date$Date$firstOfYear = function (y) {
	return $justinmimbs$date$Date$RD(
		$justinmimbs$date$Date$daysBeforeYear(y) + 1);
};
var $justinmimbs$date$Date$month = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.month;
	});
var $justinmimbs$date$Date$monthToQuarter = function (m) {
	return (($justinmimbs$date$Date$monthToNumber(m) + 2) / 3) | 0;
};
var $justinmimbs$date$Date$quarter = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToQuarter);
var $justinmimbs$date$Date$quarterToMonth = function (q) {
	return $justinmimbs$date$Date$numberToMonth((q * 3) - 2);
};
var $justinmimbs$date$Date$floor = F2(
	function (interval, date) {
		var rd = date.a;
		switch (interval.$) {
			case 'Year':
				return $justinmimbs$date$Date$firstOfYear(
					$justinmimbs$date$Date$year(date));
			case 'Quarter':
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$quarterToMonth(
						$justinmimbs$date$Date$quarter(date)));
			case 'Month':
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$month(date));
			case 'Week':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Mon, date));
			case 'Monday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Mon, date));
			case 'Tuesday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Tue, date));
			case 'Wednesday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Wed, date));
			case 'Thursday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Thu, date));
			case 'Friday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Fri, date));
			case 'Saturday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Sat, date));
			case 'Sunday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Sun, date));
			default:
				return date;
		}
	});
var $author$project$Date$Bdt$firstOfMonth = function (date) {
	return A2($justinmimbs$date$Date$floor, $justinmimbs$date$Date$Month, date);
};
var $author$project$Date$Bdt$firstOfNextMonth = function (date) {
	return A3(
		$justinmimbs$date$Date$add,
		$justinmimbs$date$Date$Months,
		1,
		$author$project$Date$Bdt$firstOfMonth(date));
};
var $elm_community$list_extra$List$Extra$groupsOfWithStep = F3(
	function (size, step, xs) {
		var xs_ = A2($elm$core$List$drop, step, xs);
		var thisGroup = A2($elm$core$List$take, size, xs);
		var okayLength = _Utils_eq(
			size,
			$elm$core$List$length(thisGroup));
		var okayArgs = (size > 0) && (step > 0);
		return (okayArgs && okayLength) ? A2(
			$elm$core$List$cons,
			thisGroup,
			A3($elm_community$list_extra$List$Extra$groupsOfWithStep, size, step, xs_)) : _List_Nil;
	});
var $elm_community$list_extra$List$Extra$groupsOf = F2(
	function (size, xs) {
		return A3($elm_community$list_extra$List$Extra$groupsOfWithStep, size, size, xs);
	});
var $justinmimbs$time_extra$Time$Extra$posixToParts = F2(
	function (zone, posix) {
		return {
			day: A2($elm$time$Time$toDay, zone, posix),
			hour: A2($elm$time$Time$toHour, zone, posix),
			millisecond: A2($elm$time$Time$toMillis, zone, posix),
			minute: A2($elm$time$Time$toMinute, zone, posix),
			month: A2($elm$time$Time$toMonth, zone, posix),
			second: A2($elm$time$Time$toSecond, zone, posix),
			year: A2($elm$time$Time$toYear, zone, posix)
		};
	});
var $author$project$Time$Bdt$setDay = F3(
	function (timeZone, day, posix) {
		var parts = A2($justinmimbs$time_extra$Time$Extra$posixToParts, timeZone, posix);
		var updatedParts = _Utils_update(
			parts,
			{day: day});
		return A2($justinmimbs$time_extra$Time$Extra$partsToPosix, timeZone, updatedParts);
	});
var $justinmimbs$date$Date$numberToWeekday = function (wdn) {
	var _v0 = A2($elm$core$Basics$max, 1, wdn);
	switch (_v0) {
		case 1:
			return $elm$time$Time$Mon;
		case 2:
			return $elm$time$Time$Tue;
		case 3:
			return $elm$time$Time$Wed;
		case 4:
			return $elm$time$Time$Thu;
		case 5:
			return $elm$time$Time$Fri;
		case 6:
			return $elm$time$Time$Sat;
		default:
			return $elm$time$Time$Sun;
	}
};
var $justinmimbs$date$Date$weekday = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$weekdayNumber, $justinmimbs$date$Date$numberToWeekday);
var $author$project$Form$DatePicker$Helpers$visibleDays = F2(
	function (timeZone, navigationPosix) {
		var date = A2($justinmimbs$date$Date$fromPosix, timeZone, navigationPosix);
		var firstOfMonth = $author$project$Date$Bdt$firstOfMonth(date);
		var daysInMonth = A3(
			$justinmimbs$date$Date$diff,
			$justinmimbs$date$Date$Days,
			firstOfMonth,
			$author$project$Date$Bdt$firstOfNextMonth(date));
		var startNumber = function (weekdayNumber) {
			return weekdayNumber - 1;
		}(
			$justinmimbs$date$Date$weekdayToNumber(
				$justinmimbs$date$Date$weekday(firstOfMonth)));
		var headOfNextMonth = A2(
			$elm$core$List$map,
			function (day) {
				return A3(
					$author$project$Time$Bdt$setDay,
					timeZone,
					day,
					A3($author$project$Time$Bdt$addMonths, timeZone, 1, navigationPosix));
			},
			A2($elm$core$List$range, 1, ((6 * 7) - startNumber) - daysInMonth));
		var previousMonth = A3($justinmimbs$date$Date$add, $justinmimbs$date$Date$Months, -1, date);
		var daysInPreviousMonth = A3(
			$justinmimbs$date$Date$diff,
			$justinmimbs$date$Date$Days,
			$author$project$Date$Bdt$firstOfMonth(previousMonth),
			$author$project$Date$Bdt$firstOfNextMonth(previousMonth));
		var tailOfPreviousMonth = A2(
			$elm$core$List$map,
			function (day) {
				return A3(
					$author$project$Time$Bdt$setDay,
					timeZone,
					day,
					A3($author$project$Time$Bdt$addMonths, timeZone, -1, navigationPosix));
			},
			A2(
				$elm$core$List$drop,
				daysInPreviousMonth - startNumber,
				A2($elm$core$List$range, 1, daysInPreviousMonth)));
		var currentMonth = A2(
			$elm$core$List$map,
			function (day) {
				return A3($author$project$Time$Bdt$setDay, timeZone, day, navigationPosix);
			},
			A2($elm$core$List$range, 1, daysInMonth));
		return A2(
			$elm_community$list_extra$List$Extra$groupsOf,
			7,
			_Utils_ap(
				tailOfPreviousMonth,
				_Utils_ap(currentMonth, headOfNextMonth)));
	});
var $author$project$Form$DatePicker$Internal$calendarDays = F3(
	function (state, viewState, navigationPosix) {
		var rows = A2($author$project$Form$DatePicker$Helpers$visibleDays, state.timeZone, navigationPosix);
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_Nil,
			A2(
				$elm$core$List$map,
				A3($author$project$Form$DatePicker$Internal$calendarDayRow, state, viewState, navigationPosix),
				rows));
	});
var $author$project$Time$Bdt$monthString = function (month) {
	switch (month.$) {
		case 'Jan':
			return 'January';
		case 'Feb':
			return 'February';
		case 'Mar':
			return 'March';
		case 'Apr':
			return 'April';
		case 'May':
			return 'May';
		case 'Jun':
			return 'June';
		case 'Jul':
			return 'July';
		case 'Aug':
			return 'August';
		case 'Sep':
			return 'September';
		case 'Oct':
			return 'October';
		case 'Nov':
			return 'November';
		default:
			return 'December';
	}
};
var $author$project$Form$DatePicker$Internal$calendarNavigationTitle = F2(
	function (timeZone, posix) {
		return $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, timeZone, posix)) + (' - ' + $author$project$Time$Bdt$monthString(
			A2($elm$time$Time$toMonth, timeZone, posix)));
	});
var $author$project$Form$DatePicker$Css$date = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$flexGrow(
			$rtfeldman$elm_css$Css$int(1)),
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $author$project$Form$DatePicker$Css$navigation = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[$rtfeldman$elm_css$Css$displayFlex]));
var $author$project$Form$DatePicker$Internal$NextMonth = {$: 'NextMonth'};
var $feathericons$elm_feather$FeatherIcons$chevronRight = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-right',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-chevron-right')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('9 18 15 12 9 6')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$DatePicker$Helpers$isSameMonthAndYear = F3(
	function (timeZone, posix1, mPosix2) {
		if (mPosix2.$ === 'Just') {
			var posix2 = mPosix2.a;
			return _Utils_eq(
				A2($elm$time$Time$toYear, timeZone, posix1),
				A2($elm$time$Time$toYear, timeZone, posix2)) && _Utils_eq(
				A2($elm$time$Time$toMonth, timeZone, posix1),
				A2($elm$time$Time$toMonth, timeZone, posix2));
		} else {
			return false;
		}
	});
var $author$project$Form$DatePicker$Css$arrowStyles = function (isDisabled) {
	return _List_fromArray(
		[
			$rtfeldman$elm_css$Css$cursor(
			isDisabled ? $rtfeldman$elm_css$Css$notAllowed : $rtfeldman$elm_css$Css$pointer),
			$rtfeldman$elm_css$Css$hover(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$color(
					$rtfeldman$elm_css$Css$hex('6bb9f0'))
				]))
		]);
};
var $author$project$Form$DatePicker$Css$monthArrows = function (isDisabled) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		$author$project$Form$DatePicker$Css$arrowStyles(isDisabled));
};
var $author$project$Form$DatePicker$Internal$nextMonthArrow = F3(
	function (state, viewState, navigationPosix) {
		var isDisabled = A3($author$project$Form$DatePicker$Helpers$isSameMonthAndYear, state.timeZone, navigationPosix, viewState.maxPosix);
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$DatePicker$Css$monthArrows(isDisabled),
					A2(
					$author$project$Html$Styled$Bdt$attributeIf,
					!isDisabled,
					$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$DatePicker$Internal$NextMonth))
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronRight)))
				]));
	});
var $author$project$Form$DatePicker$Internal$NextYear = function (a) {
	return {$: 'NextYear', a: a};
};
var $author$project$Form$DatePicker$Css$offsetYearArrow = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$marginRight(
			$rtfeldman$elm_css$Css$px(-12))
		]));
var $author$project$Form$DatePicker$Css$yearArrows = function (isDisabled) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_Utils_ap(
			$author$project$Form$DatePicker$Css$arrowStyles(isDisabled),
			_List_fromArray(
				[$rtfeldman$elm_css$Css$displayFlex])));
};
var $author$project$Form$DatePicker$Internal$nextYearArrow = F3(
	function (state, viewState, navigationPosix) {
		var isDisabled = A3($author$project$Form$DatePicker$Helpers$isSameMonthAndYear, state.timeZone, navigationPosix, viewState.maxPosix);
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$DatePicker$Css$yearArrows(isDisabled),
					A2(
					$author$project$Html$Styled$Bdt$attributeIf,
					!isDisabled,
					$rtfeldman$elm_css$Html$Styled$Events$onClick(
						$author$project$Form$DatePicker$Internal$NextYear(viewState.maxPosix)))
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$DatePicker$Css$offsetYearArrow]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$fromUnstyled(
							A2(
								$feathericons$elm_feather$FeatherIcons$toHtml,
								_List_Nil,
								A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronRight)))
						])),
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronRight)))
				]));
	});
var $author$project$Form$DatePicker$Internal$PreviousMonth = {$: 'PreviousMonth'};
var $feathericons$elm_feather$FeatherIcons$chevronLeft = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-left',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-chevron-left')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('15 18 9 12 15 6')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$DatePicker$Internal$previousMonthArrow = F3(
	function (state, viewState, navigationPosix) {
		var isDisabled = A3($author$project$Form$DatePicker$Helpers$isSameMonthAndYear, state.timeZone, navigationPosix, viewState.minPosix);
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$DatePicker$Css$monthArrows(isDisabled),
					A2(
					$author$project$Html$Styled$Bdt$attributeIf,
					!isDisabled,
					$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$DatePicker$Internal$PreviousMonth))
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronLeft)))
				]));
	});
var $author$project$Form$DatePicker$Internal$PreviousYear = function (a) {
	return {$: 'PreviousYear', a: a};
};
var $author$project$Form$DatePicker$Internal$previousYearArrow = F3(
	function (state, viewState, navigationPosix) {
		var isDisabled = A3($author$project$Form$DatePicker$Helpers$isSameMonthAndYear, state.timeZone, navigationPosix, viewState.minPosix);
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$DatePicker$Css$yearArrows(isDisabled),
					A2(
					$author$project$Html$Styled$Bdt$attributeIf,
					!isDisabled,
					$rtfeldman$elm_css$Html$Styled$Events$onClick(
						$author$project$Form$DatePicker$Internal$PreviousYear(viewState.minPosix)))
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$DatePicker$Css$offsetYearArrow]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$fromUnstyled(
							A2(
								$feathericons$elm_feather$FeatherIcons$toHtml,
								_List_Nil,
								A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronLeft)))
						])),
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronLeft)))
				]));
	});
var $author$project$Form$DatePicker$Internal$calendarNavigation = F3(
	function (state, viewState, navigationPosix) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$DatePicker$Css$navigation]),
			_List_fromArray(
				[
					A3($author$project$Form$DatePicker$Internal$previousYearArrow, state, viewState, navigationPosix),
					A3($author$project$Form$DatePicker$Internal$previousMonthArrow, state, viewState, navigationPosix),
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$DatePicker$Css$date]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$text(
							A2($author$project$Form$DatePicker$Internal$calendarNavigationTitle, state.timeZone, navigationPosix))
						])),
					A3($author$project$Form$DatePicker$Internal$nextMonthArrow, state, viewState, navigationPosix),
					A3($author$project$Form$DatePicker$Internal$nextYearArrow, state, viewState, navigationPosix)
				]));
	});
var $rtfeldman$elm_css$Css$PtUnits = {$: 'PtUnits'};
var $rtfeldman$elm_css$Css$pt = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$PtUnits, 'pt');
var $rtfeldman$elm_css$Css$textAlign = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'textAlign',
		'text-align',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$textTransform = $rtfeldman$elm_css$Css$prop1('text-transform');
var $rtfeldman$elm_css$Css$uppercase = {textTransform: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'uppercase'};
var $author$project$Form$DatePicker$Css$weekDayItem = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$flexGrow(
			$rtfeldman$elm_css$Css$int(1)),
			$rtfeldman$elm_css$Css$textTransform($rtfeldman$elm_css$Css$uppercase),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(600)),
			$rtfeldman$elm_css$Css$fontSize(
			$rtfeldman$elm_css$Css$pt(8)),
			$rtfeldman$elm_css$Css$color(
			$rtfeldman$elm_css$Css$hex('999999')),
			$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center)
		]));
var $author$project$Form$DatePicker$Internal$calendarWeekDay = function (day) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Form$DatePicker$Css$weekDayItem]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$text(day)
			]));
};
var $author$project$Form$DatePicker$Internal$Clear = {$: 'Clear'};
var $rtfeldman$elm_css$Css$borderTopWidth = $rtfeldman$elm_css$Css$prop1('border-top-width');
var $rtfeldman$elm_css$Css$prop4 = F5(
	function (key, argA, argB, argC, argD) {
		return A2(
			$rtfeldman$elm_css$Css$property,
			key,
			A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					[argA.value, argB.value, argC.value, argD.value])));
	});
var $rtfeldman$elm_css$Css$margin4 = $rtfeldman$elm_css$Css$prop4('margin');
var $rtfeldman$elm_css$Css$padding4 = $rtfeldman$elm_css$Css$prop4('padding');
var $author$project$Form$DatePicker$Css$clearButton = function (isActive) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_List_fromArray(
			[
				A3(
				$rtfeldman$elm_css$Css$border3,
				$rtfeldman$elm_css$Css$px(0),
				$rtfeldman$elm_css$Css$solid,
				$rtfeldman$elm_css$Css$hex('dddddd')),
				$rtfeldman$elm_css$Css$borderTopWidth(
				$rtfeldman$elm_css$Css$px(1)),
				A4(
				$rtfeldman$elm_css$Css$margin4,
				$rtfeldman$elm_css$Css$px(10),
				$rtfeldman$elm_css$Css$px(-15),
				$rtfeldman$elm_css$Css$px(-10),
				$rtfeldman$elm_css$Css$px(-15)),
				$rtfeldman$elm_css$Css$displayFlex,
				A4(
				$rtfeldman$elm_css$Css$padding4,
				$rtfeldman$elm_css$Css$px(10),
				$rtfeldman$elm_css$Css$px(10),
				$rtfeldman$elm_css$Css$px(5),
				$rtfeldman$elm_css$Css$px(10)),
				$rtfeldman$elm_css$Css$flexGrow(
				$rtfeldman$elm_css$Css$int(1)),
				$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
				$rtfeldman$elm_css$Css$cursor(
				isActive ? $rtfeldman$elm_css$Css$pointer : $rtfeldman$elm_css$Css$notAllowed),
				$rtfeldman$elm_css$Css$color(
				isActive ? $rtfeldman$elm_css$Css$hex('444444') : $rtfeldman$elm_css$Css$hex('dddddd'))
			]));
};
var $author$project$Form$DatePicker$Internal$clearDateButton = function (state) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$author$project$Form$DatePicker$Css$clearButton(
				!_Utils_eq(
					$author$project$Resettable$getValue(state.selectedPosix),
					$elm$core$Maybe$Nothing)),
				A2(
				$author$project$Html$Styled$Bdt$attributeIf,
				!_Utils_eq(
					$author$project$Resettable$getValue(state.selectedPosix),
					$elm$core$Maybe$Nothing),
				$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$DatePicker$Internal$Clear))
			]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$text('clear currently selected date')
			]));
};
var $author$project$Html$Styled$Bdt$viewIf = F2(
	function (show, html) {
		if (show) {
			return html;
		} else {
			return $rtfeldman$elm_css$Html$Styled$text('');
		}
	});
var $author$project$Form$DatePicker$Internal$clearDateContainer = F2(
	function (state, viewState) {
		return A2(
			$author$project$Html$Styled$Bdt$viewIf,
			viewState.isClearable,
			$author$project$Form$DatePicker$Internal$clearDateButton(state));
	});
var $author$project$Form$DatePicker$Internal$NoOp = {$: 'NoOp'};
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 'MayPreventDefault', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $author$project$Form$DatePicker$Internal$disableMouseDown = A2(
	$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
	'mousedown',
	$elm$json$Json$Decode$succeed(
		_Utils_Tuple2($author$project$Form$DatePicker$Internal$NoOp, true)));
var $author$project$Form$DatePicker$Internal$Apply = {$: 'Apply'};
var $author$project$Form$DatePicker$Internal$OpenTimeSelect = function (a) {
	return {$: 'OpenTimeSelect', a: a};
};
var $author$project$Form$DatePicker$Css$applyButton = function (isActive) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$px(8),
				$rtfeldman$elm_css$Css$px(15)),
				$rtfeldman$elm_css$Css$borderRadius(
				$rtfeldman$elm_css$Css$px(2)),
				$rtfeldman$elm_css$Css$cursor(
				isActive ? $rtfeldman$elm_css$Css$pointer : $rtfeldman$elm_css$Css$notAllowed),
				$rtfeldman$elm_css$Css$color(
				isActive ? $rtfeldman$elm_css$Css$hex('ffffff') : $rtfeldman$elm_css$Css$hex('cccccc')),
				$rtfeldman$elm_css$Css$backgroundColor(
				isActive ? $rtfeldman$elm_css$Css$hex('2ecc71') : $rtfeldman$elm_css$Css$hex('ffffff'))
			]));
};
var $author$project$Form$DatePicker$Css$applyButtonContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$flexGrow(
			$rtfeldman$elm_css$Css$int(1)),
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $author$project$Form$DatePicker$Css$colon = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $rtfeldman$elm_css$Html$Styled$Events$onMouseDown = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'mousedown',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $author$project$Form$Select$Internal$Blur = {$: 'Blur'};
var $author$project$Form$Select$Internal$Open = {$: 'Open'};
var $author$project$Form$Css$caret = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $author$project$Form$Select$Css$caret = $author$project$Form$Css$caret;
var $feathericons$elm_feather$FeatherIcons$chevronDown = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'chevron-down',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-chevron-down')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('6 9 12 15 18 9')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$Select$Internal$Clear = {$: 'Clear'};
var $author$project$Form$Css$clearIcon = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[$rtfeldman$elm_css$Css$displayFlex]));
var $feathericons$elm_feather$FeatherIcons$x = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'x',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-x')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('18'),
							$elm$svg$Svg$Attributes$y1('6'),
							$elm$svg$Svg$Attributes$x2('6'),
							$elm$svg$Svg$Attributes$y2('18')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$line,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x1('6'),
							$elm$svg$Svg$Attributes$y1('6'),
							$elm$svg$Svg$Attributes$x2('18'),
							$elm$svg$Svg$Attributes$y2('18')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$Select$Internal$clearButton = F2(
	function (state, viewState) {
		return A3(
			$author$project$Html$Styled$Bdt$divIf,
			viewState.isClearable && (!_Utils_eq(
				$author$project$Resettable$getValue(state.selectedOption),
				$elm$core$Maybe$Nothing)),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
					'mousedown',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2($author$project$Form$Select$Internal$Clear, true))),
					$author$project$Form$Css$clearIcon
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 14, $feathericons$elm_feather$FeatherIcons$x)))
				]));
	});
var $author$project$Form$Select$Css$container = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
		]));
var $author$project$Form$Css$contentEditableContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $author$project$Form$Select$Css$contentEditableContainer = $author$project$Form$Css$contentEditableContainer;
var $elm$json$Json$Encode$bool = _Json_wrap;
var $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$contenteditable = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('contentEditable');
var $rtfeldman$elm_css$Html$Styled$Attributes$id = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('id');
var $author$project$Form$Select$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$select, isError, isLocked));
	});
var $author$project$Form$Css$noFocus = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$focus(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$outlineWidth(
					$rtfeldman$elm_css$Css$rem(0))
				]))
		]));
var $author$project$Form$Select$Css$noFocus = $author$project$Form$Css$noFocus;
var $rtfeldman$elm_css$Html$Styled$Events$onBlur = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Form$Select$Css$title = function (isFaded) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		$author$project$Form$Css$title(isFaded));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$title = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('title');
var $author$project$Form$Select$Internal$closed = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$Select$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$Select$Css$input, viewState.isError, viewState.isLocked),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1),
							$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$Select$Internal$Blur),
							A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$author$project$Form$Helpers$onElementFocus($author$project$Form$Select$Internal$Open)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$Select$Internal$Open))
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$Select$Css$title(
									_Utils_eq(
										$author$project$Resettable$getValue(state.selectedOption),
										$elm$core$Maybe$Nothing)),
									$author$project$Form$Select$Css$contentEditableContainer,
									$author$project$Form$Select$Css$noFocus,
									$rtfeldman$elm_css$Html$Styled$Attributes$title(
									A2(
										$elm$core$Maybe$withDefault,
										viewState.defaultLabel,
										A2(
											$elm$core$Maybe$map,
											viewState.toLabel,
											$author$project$Resettable$getValue(state.selectedOption)))),
									$rtfeldman$elm_css$Html$Styled$Attributes$contenteditable(true)
								]),
							_List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Html$Styled$span,
									_List_Nil,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Html$Styled$text(
											A2(
												$elm$core$Maybe$withDefault,
												viewState.defaultLabel,
												A2(
													$elm$core$Maybe$map,
													viewState.toLabel,
													$author$project$Resettable$getValue(state.selectedOption))))
										])),
									A3(
									$author$project$Html$Styled$Bdt$divIf,
									!viewState.isLocked,
									_List_fromArray(
										[$author$project$Form$Select$Css$caret]),
									_List_fromArray(
										[
											$rtfeldman$elm_css$Html$Styled$fromUnstyled(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronDown)))
										]))
								])),
							A2($author$project$Form$Select$Internal$clearButton, state, viewState)
						]))
				]));
	});
var $author$project$Form$Select$Internal$SelectKey = F3(
	function (a, b, c) {
		return {$: 'SelectKey', a: a, b: b, c: c};
	});
var $author$project$Form$Select$Internal$UpdateSearchText = function (a) {
	return {$: 'UpdateSearchText', a: a};
};
var $author$project$Html$Styled$Events$Bdt$contentEditableDecoder = function (msg) {
	return A2(
		$elm$json$Json$Decode$map,
		msg,
		A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'innerHTML']),
			$elm$json$Json$Decode$string));
};
var $rtfeldman$elm_css$VirtualDom$Styled$unstyledAttribute = function (prop) {
	return A3($rtfeldman$elm_css$VirtualDom$Styled$Attribute, prop, _List_Nil, '');
};
var $rtfeldman$elm_css$Html$Styled$Attributes$fromUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$unstyledAttribute;
var $author$project$Html$Styled$Events$Bdt$hijack = function (msg) {
	return _Utils_Tuple2(msg, true);
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $author$project$Html$Styled$Events$Bdt$hijackOn = F2(
	function (event, decoder) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$fromUnstyled(
			A2(
				$elm$html$Html$Events$preventDefaultOn,
				event,
				A2($elm$json$Json$Decode$map, $author$project$Html$Styled$Events$Bdt$hijack, decoder)));
	});
var $author$project$Html$Styled$Events$Bdt$onContentEditableInput = function (msg) {
	return A2(
		$author$project$Html$Styled$Events$Bdt$hijackOn,
		'input',
		$author$project$Html$Styled$Events$Bdt$contentEditableDecoder(msg));
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $author$project$Form$Helpers$Down = {$: 'Down'};
var $author$project$Form$Helpers$Enter = {$: 'Enter'};
var $author$project$Form$Helpers$Up = {$: 'Up'};
var $elm$json$Json$Decode$fail = _Json_fail;
var $author$project$Form$Helpers$selectKeyDecoder = function (key) {
	switch (key) {
		case 'ArrowUp':
			return $elm$json$Json$Decode$succeed($author$project$Form$Helpers$Up);
		case 'ArrowDown':
			return $elm$json$Json$Decode$succeed($author$project$Form$Helpers$Down);
		case 'Enter':
			return $elm$json$Json$Decode$succeed($author$project$Form$Helpers$Enter);
		default:
			return $elm$json$Json$Decode$fail('Not valid SelectKey');
	}
};
var $author$project$Form$Helpers$onSelectKey = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
		'keydown',
		A2(
			$elm$json$Json$Decode$map,
			function (decoder) {
				return _Utils_Tuple2(
					msg(decoder),
					true);
			},
			A2(
				$elm$json$Json$Decode$andThen,
				$author$project$Form$Helpers$selectKeyDecoder,
				A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
};
var $author$project$Form$Css$selectOptionItem = F2(
	function (isDisabled, isFocused) {
		return _List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$rem(0),
				$rtfeldman$elm_css$Css$rem(0.4)),
				$rtfeldman$elm_css$Css$margin(
				$rtfeldman$elm_css$Css$px(0)),
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$rem(2)),
				$rtfeldman$elm_css$Css$displayFlex,
				$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
				A2(
				$author$project$Css$Bdt$styleIf,
				isFocused,
				$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex('f2f9fc'))),
				A2(
				$author$project$Css$Bdt$styleIf,
				isDisabled,
				$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex('eeeeee'))),
				$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
				A2(
				$author$project$Css$Bdt$styleIf,
				isDisabled,
				$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$notAllowed)),
				$rtfeldman$elm_css$Css$outlineWidth(
				$rtfeldman$elm_css$Css$px(0)),
				$rtfeldman$elm_css$Css$overflowX($rtfeldman$elm_css$Css$hidden),
				$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
				$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
				$rtfeldman$elm_css$Css$maxWidth(
				$rtfeldman$elm_css$Css$pct(100)),
				$rtfeldman$elm_css$Css$hover(
				_List_fromArray(
					[
						A2(
						$author$project$Css$Bdt$styleIf,
						!isDisabled,
						$rtfeldman$elm_css$Css$backgroundColor(
							$rtfeldman$elm_css$Css$hex('f2f9fc')))
					]))
			]);
	});
var $author$project$Form$Select$Css$optionItem = F2(
	function (isDisabled, isFocused) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$selectOptionItem, isDisabled, isFocused));
	});
var $author$project$Form$Select$Internal$NoOp = {$: 'NoOp'};
var $author$project$Form$Select$Internal$Select = function (a) {
	return {$: 'Select', a: a};
};
var $author$project$Form$Select$Internal$optionItem = F3(
	function (state, viewState, option) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					A2(
					$author$project$Form$Select$Css$optionItem,
					viewState.isOptionDisabled(option),
					_Utils_eq(
						state.focusedOption,
						$elm$core$Maybe$Just(option))),
					$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1),
					viewState.isOptionDisabled(option) ? A2(
					$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
					'mousedown',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2($author$project$Form$Select$Internal$NoOp, true))) : $rtfeldman$elm_css$Html$Styled$Events$onMouseDown(
					$author$project$Form$Select$Internal$Select(option))
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text(
					viewState.toLabel(option))
				]));
	});
var $rtfeldman$elm_css$Css$borderTopColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-top-color', c.value);
};
var $rtfeldman$elm_css$Css$left = $rtfeldman$elm_css$Css$prop1('left');
var $rtfeldman$elm_css$Css$maxHeight = $rtfeldman$elm_css$Css$prop1('max-height');
var $rtfeldman$elm_css$Css$minWidth = $rtfeldman$elm_css$Css$prop1('min-width');
var $rtfeldman$elm_css$Css$overflowY = $rtfeldman$elm_css$Css$prop1('overflow-y');
var $author$project$Form$Css$selectOptionList = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
		$rtfeldman$elm_css$Css$top(
		$rtfeldman$elm_css$Css$px(31)),
		$rtfeldman$elm_css$Css$left(
		$rtfeldman$elm_css$Css$px(0)),
		$rtfeldman$elm_css$Css$minWidth(
		$rtfeldman$elm_css$Css$pct(99.8)),
		$rtfeldman$elm_css$Css$zIndex(
		$rtfeldman$elm_css$Css$int(10)),
		$rtfeldman$elm_css$Css$maxHeight(
		$rtfeldman$elm_css$Css$px(200)),
		$rtfeldman$elm_css$Css$overflowY($rtfeldman$elm_css$Css$auto),
		A3(
		$rtfeldman$elm_css$Css$border3,
		$rtfeldman$elm_css$Css$px(1),
		$rtfeldman$elm_css$Css$solid,
		$rtfeldman$elm_css$Css$hex('cccccc')),
		$rtfeldman$elm_css$Css$borderTopColor(
		$rtfeldman$elm_css$Css$hex('eeeeee')),
		$rtfeldman$elm_css$Css$padding(
		$rtfeldman$elm_css$Css$px(0)),
		$rtfeldman$elm_css$Css$backgroundColor(
		$rtfeldman$elm_css$Css$hex('ffffff'))
	]);
var $author$project$Form$Select$Css$optionList = $rtfeldman$elm_css$Html$Styled$Attributes$css($author$project$Form$Css$selectOptionList);
var $author$project$Form$Select$Internal$optionList = F2(
	function (state, viewState) {
		var filteredOptions = A3(
			$author$project$Form$Select$Internal$filterOptions,
			state.searchText,
			viewState.toLabel,
			$mgold$elm_nonempty_list$List$Nonempty$toList(state.options));
		return $elm$core$List$isEmpty(filteredOptions) ? A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$Select$Css$optionList]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$Select$Css$optionItem, false, false),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1)
						]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$text('No options containing - \"' + (state.searchText + '\"'))
						]))
				])) : A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$Select$Css$optionList]),
			A2(
				$elm$core$List$map,
				A2($author$project$Form$Select$Internal$optionItem, state, viewState),
				filteredOptions));
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$placeholder = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('placeholder');
var $author$project$Form$Select$Internal$open = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$Select$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$Select$Css$input, viewState.isError, viewState.isLocked),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1),
							$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$Select$Internal$Blur),
							$author$project$Form$Helpers$onSelectKey(
							A2($author$project$Form$Select$Internal$SelectKey, viewState.isOptionDisabled, viewState.toLabel)),
							$author$project$Form$Select$Css$title(
							_Utils_eq(
								$author$project$Resettable$getValue(state.selectedOption),
								$elm$core$Maybe$Nothing)),
							$rtfeldman$elm_css$Html$Styled$Attributes$title(
							A2(
								$elm$core$Maybe$withDefault,
								viewState.defaultLabel,
								A2(
									$elm$core$Maybe$map,
									viewState.toLabel,
									$author$project$Resettable$getValue(state.selectedOption))))
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$Select$Css$title(
									_Utils_eq(
										$author$project$Resettable$getValue(state.selectedOption),
										$elm$core$Maybe$Nothing)),
									$author$project$Form$Select$Css$contentEditableContainer,
									$author$project$Form$Select$Css$noFocus,
									$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$Select$Internal$Blur),
									$rtfeldman$elm_css$Html$Styled$Attributes$title(
									A2(
										$elm$core$Maybe$withDefault,
										viewState.defaultLabel,
										A2(
											$elm$core$Maybe$map,
											viewState.toLabel,
											$author$project$Resettable$getValue(state.selectedOption)))),
									$rtfeldman$elm_css$Html$Styled$Attributes$contenteditable(true),
									$author$project$Html$Styled$Events$Bdt$onContentEditableInput($author$project$Form$Select$Internal$UpdateSearchText),
									$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(state.searchText)
								]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$text('')
								]))
						])),
					A2($author$project$Form$Select$Internal$optionList, state, viewState)
				]));
	});
var $author$project$Form$Select$Internal$render = F2(
	function (state, viewState) {
		var _v0 = state.isOpen;
		if (!_v0) {
			return A2($author$project$Form$Select$Internal$closed, state, viewState);
		} else {
			return A2($author$project$Form$Select$Internal$open, state, viewState);
		}
	});
var $author$project$Form$Select$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$Select$Internal$render, state, viewState);
};
var $author$project$Form$DatePicker$Css$select = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$width(
			$rtfeldman$elm_css$Css$px(62))
		]));
var $author$project$Form$DatePicker$Css$selectContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			A2(
			$rtfeldman$elm_css$Css$margin2,
			$rtfeldman$elm_css$Css$px(3),
			$rtfeldman$elm_css$Css$px(5))
		]));
var $author$project$Form$Select$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$Select$Internal$setId = F2(
	function (id, viewState) {
		return _Utils_update(
			viewState,
			{
				id: $elm$core$Maybe$Just(id)
			});
	});
var $author$project$Form$Select$setId = F2(
	function (id, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$Select$View,
			state,
			A2($author$project$Form$Select$Internal$setId, id, viewState));
	});
var $author$project$Form$DatePicker$Css$timePickerContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			A3(
			$rtfeldman$elm_css$Css$border3,
			$rtfeldman$elm_css$Css$px(0),
			$rtfeldman$elm_css$Css$solid,
			$rtfeldman$elm_css$Css$hex('dddddd')),
			$rtfeldman$elm_css$Css$borderTopWidth(
			$rtfeldman$elm_css$Css$px(1)),
			A4(
			$rtfeldman$elm_css$Css$margin4,
			$rtfeldman$elm_css$Css$px(10),
			$rtfeldman$elm_css$Css$px(-15),
			$rtfeldman$elm_css$Css$px(-10),
			$rtfeldman$elm_css$Css$px(-15)),
			$rtfeldman$elm_css$Css$displayFlex,
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$px(0),
			$rtfeldman$elm_css$Css$px(10))
		]));
var $author$project$Form$Select$Internal$initialViewState = function (toLabel) {
	return {
		defaultLabel: '-- Nothing Selected --',
		id: $elm$core$Maybe$Nothing,
		isClearable: false,
		isError: false,
		isLocked: false,
		isOptionDisabled: $elm$core$Basics$always(false),
		toLabel: toLabel
	};
};
var $author$project$Form$Select$view = F2(
	function (toLabel, _v0) {
		var state = _v0.a;
		return A2(
			$author$project$Form$Select$View,
			state,
			$author$project$Form$Select$Internal$initialViewState(toLabel));
	});
var $author$project$Form$DatePicker$Internal$timePicker = function (state) {
	var isDesiredDateSelected = !_Utils_eq(state.desiredPosix, $elm$core$Maybe$Nothing);
	var isDateSelected = !_Utils_eq(
		$author$project$Resettable$getValue(state.selectedPosix),
		$elm$core$Maybe$Nothing);
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Form$DatePicker$Css$timePickerContainer]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Form$DatePicker$Css$selectContainer,
						A2(
						$author$project$Html$Styled$Bdt$attributeIf,
						!_Utils_eq(
							state.focusedSelect,
							$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Hours)),
						$rtfeldman$elm_css$Html$Styled$Events$onMouseDown(
							$author$project$Form$DatePicker$Internal$OpenTimeSelect($author$project$Form$DatePicker$Internal$Hours)))
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[$author$project$Form$DatePicker$Css$select]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Html$Styled$map,
								$author$project$Form$DatePicker$Internal$UpdateHours,
								$author$project$Form$Select$render(
									A2(
										$author$project$Form$Select$setId,
										'FORM_DATEPICKER_HOURS',
										A2(
											$author$project$Form$Select$view,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$String$fromInt,
												A2(
													$elm$core$String$padLeft,
													2,
													_Utils_chr('0'))),
											state.hours))))
							]))
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[$author$project$Form$DatePicker$Css$colon]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_Nil,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$text(':')
							]))
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Form$DatePicker$Css$selectContainer,
						A2(
						$author$project$Html$Styled$Bdt$attributeIf,
						!_Utils_eq(
							state.focusedSelect,
							$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Minutes)),
						$rtfeldman$elm_css$Html$Styled$Events$onMouseDown(
							$author$project$Form$DatePicker$Internal$OpenTimeSelect($author$project$Form$DatePicker$Internal$Minutes)))
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[$author$project$Form$DatePicker$Css$select]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Html$Styled$map,
								$author$project$Form$DatePicker$Internal$UpdateMinutes,
								$author$project$Form$Select$render(
									A2(
										$author$project$Form$Select$setId,
										'FORM_DATEPICKER_MINUTES',
										A2(
											$author$project$Form$Select$view,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$String$fromInt,
												A2(
													$elm$core$String$padLeft,
													2,
													_Utils_chr('0'))),
											state.minutes))))
							]))
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[$author$project$Form$DatePicker$Css$colon]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_Nil,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$text(':')
							]))
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Form$DatePicker$Css$selectContainer,
						A2(
						$author$project$Html$Styled$Bdt$attributeIf,
						!_Utils_eq(
							state.focusedSelect,
							$elm$core$Maybe$Just($author$project$Form$DatePicker$Internal$Seconds)),
						$rtfeldman$elm_css$Html$Styled$Events$onMouseDown(
							$author$project$Form$DatePicker$Internal$OpenTimeSelect($author$project$Form$DatePicker$Internal$Seconds)))
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[$author$project$Form$DatePicker$Css$select]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Html$Styled$map,
								$author$project$Form$DatePicker$Internal$UpdateSeconds,
								$author$project$Form$Select$render(
									A2(
										$author$project$Form$Select$setId,
										'FORM_DATEPICKER_SECONDS',
										A2(
											$author$project$Form$Select$view,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$String$fromInt,
												A2(
													$elm$core$String$padLeft,
													2,
													_Utils_chr('0'))),
											state.seconds))))
							]))
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[$author$project$Form$DatePicker$Css$applyButtonContainer]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[
								$author$project$Form$DatePicker$Css$applyButton(isDesiredDateSelected || isDateSelected),
								A2(
								$author$project$Html$Styled$Bdt$attributeIf,
								isDesiredDateSelected || isDateSelected,
								$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$DatePicker$Internal$Apply))
							]),
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$text('Apply')
							]))
					]))
			]));
};
var $author$project$Form$DatePicker$Internal$timePickerContainer = F2(
	function (state, includeTime) {
		return A2(
			$author$project$Html$Styled$Bdt$viewIf,
			includeTime,
			$author$project$Form$DatePicker$Internal$timePicker(state));
	});
var $rtfeldman$elm_css$Css$borderWidth2 = $rtfeldman$elm_css$Css$prop2('border-width');
var $rtfeldman$elm_css$Css$dashed = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationStyle: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'dashed'};
var $author$project$Form$DatePicker$Css$weekDayList = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			A3(
			$rtfeldman$elm_css$Css$border3,
			$rtfeldman$elm_css$Css$px(1),
			$rtfeldman$elm_css$Css$dashed,
			$rtfeldman$elm_css$Css$hex('dddddd')),
			A2(
			$rtfeldman$elm_css$Css$borderWidth2,
			$rtfeldman$elm_css$Css$px(1),
			$rtfeldman$elm_css$Css$px(0)),
			A2(
			$rtfeldman$elm_css$Css$margin2,
			$rtfeldman$elm_css$Css$px(10),
			$rtfeldman$elm_css$Css$px(0)),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$px(5),
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$displayFlex
		]));
var $author$project$Form$DatePicker$Internal$calendar = F2(
	function (state, viewState) {
		var _v0 = state.navigationPosix;
		if (_v0.$ === 'Nothing') {
			return $rtfeldman$elm_css$Html$Styled$text('');
		} else {
			var posix = _v0.a;
			return A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Form$DatePicker$Css$calendar,
						A2(
						$author$project$Html$Styled$Bdt$attributeIf,
						_Utils_eq(state.focusedSelect, $elm$core$Maybe$Nothing),
						$author$project$Form$DatePicker$Internal$disableMouseDown)
					]),
				_List_fromArray(
					[
						A3($author$project$Form$DatePicker$Internal$calendarNavigation, state, viewState, posix),
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[$author$project$Form$DatePicker$Css$weekDayList]),
						A2(
							$elm$core$List$map,
							$author$project$Form$DatePicker$Internal$calendarWeekDay,
							_List_fromArray(
								['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']))),
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_Nil,
						_List_fromArray(
							[
								A3($author$project$Form$DatePicker$Internal$calendarDays, state, viewState, posix)
							])),
						A2($author$project$Form$DatePicker$Internal$timePickerContainer, state, viewState.includeTime),
						A2($author$project$Form$DatePicker$Internal$clearDateContainer, state, viewState)
					]));
		}
	});
var $author$project$Form$DatePicker$Internal$open = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$DatePicker$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$DatePicker$Css$input, viewState.isLocked, viewState.isError),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0),
							$rtfeldman$elm_css$Html$Styled$Attributes$id('FORM_DATEPICKER'),
							$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$DatePicker$Internal$Blur)
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$DatePicker$Css$title(
									_Utils_eq(
										$author$project$Resettable$getValue(state.selectedPosix),
										$elm$core$Maybe$Nothing))
								]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$text(
									A2(
										$elm$core$Maybe$withDefault,
										viewState.defaultLabel,
										A2(
											$elm$core$Maybe$map,
											viewState.toLabel(state.timeZone),
											$author$project$Resettable$getValue(state.selectedPosix))))
								])),
							A3(
							$author$project$Html$Styled$Bdt$divIf,
							viewState.isInput,
							_List_Nil,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$fromUnstyled(
									A2(
										$feathericons$elm_feather$FeatherIcons$toHtml,
										_List_Nil,
										A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$calendar)))
								]))
						])),
					A2($author$project$Form$DatePicker$Internal$calendar, state, viewState)
				]));
	});
var $author$project$Form$DatePicker$Internal$render = F2(
	function (state, viewState) {
		var _v0 = state.isOpen;
		if (!_v0) {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$DatePicker$Internal$closed, state, viewState);
		} else {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$DatePicker$Internal$open, state, viewState);
		}
	});
var $author$project$Form$DatePicker$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$DatePicker$Internal$render, state, viewState);
};
var $author$project$Form$FloatInput$Internal$Input = function (a) {
	return {$: 'Input', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Attributes$disabled = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('disabled');
var $author$project$Form$FloatInput$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$input, isError, isLocked));
	});
var $rtfeldman$elm_css$Html$Styled$input = $rtfeldman$elm_css$Html$Styled$node('input');
var $rtfeldman$elm_css$Html$Styled$Attributes$maxlength = function (n) {
	return A2(
		$rtfeldman$elm_css$VirtualDom$Styled$attribute,
		'maxlength',
		$elm$core$String$fromInt(n));
};
var $rtfeldman$elm_css$Html$Styled$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 'MayStopPropagation', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $rtfeldman$elm_css$Html$Styled$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $rtfeldman$elm_css$Html$Styled$Events$onInput = function (tagger) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$rtfeldman$elm_css$Html$Styled$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $rtfeldman$elm_css$Html$Styled$Events$targetValue)));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$value = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('value');
var $author$project$Form$FloatInput$Internal$inputField = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$input,
			_List_fromArray(
				[
					A2($author$project$Form$FloatInput$Css$input, viewState.isError, viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$value(
					$author$project$Resettable$getValue(state.value)),
					$rtfeldman$elm_css$Html$Styled$Events$onInput($author$project$Form$FloatInput$Internal$Input),
					$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(viewState.placeholder),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$maxlength, viewState.maxLength),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id)
				]),
			_List_Nil);
	});
var $author$project$Form$FloatInput$Internal$render = F2(
	function (state, viewState) {
		return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$FloatInput$Internal$inputField, state, viewState);
	});
var $author$project$Form$FloatInput$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$FloatInput$Internal$render, state, viewState);
};
var $author$project$Form$Input$Internal$Input = function (a) {
	return {$: 'Input', a: a};
};
var $author$project$Form$Input$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$input, isError, isLocked));
	});
var $author$project$Form$Input$Internal$typeToString = function (inputType) {
	switch (inputType.$) {
		case 'Text':
			return 'text';
		case 'Email':
			return 'email';
		case 'Password':
			return 'password';
		case 'Tel':
			return 'tel';
		default:
			return 'number';
	}
};
var $rtfeldman$elm_css$Html$Styled$Attributes$type_ = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('type');
var $author$project$Form$Input$Internal$inputField = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$input,
			_List_fromArray(
				[
					A2($author$project$Form$Input$Css$input, viewState.isError, viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$value(
					$author$project$Resettable$getValue(state.value)),
					$rtfeldman$elm_css$Html$Styled$Events$onInput($author$project$Form$Input$Internal$Input),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$placeholder, viewState.placeholder),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$maxlength, viewState.maxLength),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id),
					$rtfeldman$elm_css$Html$Styled$Attributes$type_(
					$author$project$Form$Input$Internal$typeToString(viewState.inputType))
				]),
			_List_Nil);
	});
var $author$project$Form$Input$Internal$render = F2(
	function (state, viewState) {
		return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$Input$Internal$inputField, state, viewState);
	});
var $author$project$Form$Input$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$Input$Internal$render, state, viewState);
};
var $author$project$Form$IntInput$Internal$Input = function (a) {
	return {$: 'Input', a: a};
};
var $author$project$Form$IntInput$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$input, isError, isLocked));
	});
var $author$project$Form$IntInput$Internal$inputField = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$input,
			_List_fromArray(
				[
					A2($author$project$Form$IntInput$Css$input, viewState.isError, viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$value(
					$author$project$Resettable$getValue(state.value)),
					$rtfeldman$elm_css$Html$Styled$Events$onInput($author$project$Form$IntInput$Internal$Input),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$placeholder, viewState.placeholder),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$maxlength, viewState.maxLength),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id)
				]),
			_List_Nil);
	});
var $author$project$Form$IntInput$Internal$render = F2(
	function (state, viewState) {
		return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$IntInput$Internal$inputField, state, viewState);
	});
var $author$project$Form$IntInput$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$IntInput$Internal$render, state, viewState);
};
var $author$project$Form$Label$Css$label = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(100)),
			$rtfeldman$elm_css$Css$color(
			A3($rtfeldman$elm_css$Css$rgb, 111, 111, 111))
		]));
var $rtfeldman$elm_css$Html$Styled$label = $rtfeldman$elm_css$Html$Styled$node('label');
var $author$project$Form$Label$Css$mandatory = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$color(
			A3($rtfeldman$elm_css$Css$rgb, 189, 54, 47)),
			$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
			$rtfeldman$elm_css$Css$marginLeft(
			$rtfeldman$elm_css$Css$px(5))
		]));
var $author$project$Form$Label$render = function (_v0) {
	var config = _v0.a;
	return A2(
		$rtfeldman$elm_css$Html$Styled$label,
		_List_fromArray(
			[$author$project$Form$Label$Css$label]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$text(config.text),
				A3(
				$author$project$Html$Styled$Bdt$divIf,
				config.mandatory,
				_List_fromArray(
					[$author$project$Form$Label$Css$mandatory]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('*')
					]))
			]));
};
var $author$project$Form$MultiSelect$Internal$Open = {$: 'Open'};
var $author$project$Form$MultiSelect$Css$caret = $author$project$Form$Css$caret;
var $author$project$Form$MultiSelect$Internal$Clear = {$: 'Clear'};
var $author$project$Form$MultiSelect$Internal$clearButton = F2(
	function (state, viewState) {
		return A3(
			$author$project$Html$Styled$Bdt$divIf,
			viewState.isClearable && (!$elm$core$List$isEmpty(
				$author$project$Resettable$getValue(state.selectedOptions))),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
					'mousedown',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2($author$project$Form$MultiSelect$Internal$Clear, true))),
					$author$project$Form$Css$clearIcon
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 14, $feathericons$elm_feather$FeatherIcons$x)))
				]));
	});
var $author$project$Form$MultiSelect$Css$container = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
		]));
var $author$project$Form$MultiSelect$Css$contentEditableContainer = $author$project$Form$Css$contentEditableContainer;
var $author$project$Form$MultiSelect$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$select, isError, isLocked));
	});
var $author$project$Form$MultiSelect$Css$noFocus = $author$project$Form$Css$noFocus;
var $author$project$Form$MultiSelect$Internal$optionText = F3(
	function (defaultLabel, toLabel, selectedOptions) {
		var _v0 = $elm$core$List$isEmpty(
			$author$project$Resettable$getValue(selectedOptions));
		if (_v0) {
			return defaultLabel;
		} else {
			return $elm$core$String$fromInt(
				$elm$core$List$length(
					$author$project$Resettable$getValue(selectedOptions))) + (' option' + ((($elm$core$List$length(
				$author$project$Resettable$getValue(selectedOptions)) > 1) ? 's' : '') + (' selected: ' + A2(
				$elm$core$String$join,
				', ',
				A2(
					$elm$core$List$map,
					toLabel,
					$author$project$Resettable$getValue(selectedOptions))))));
		}
	});
var $author$project$Form$MultiSelect$Css$title = function (isFaded) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		$author$project$Form$Css$title(isFaded));
};
var $author$project$Form$MultiSelect$Internal$closed = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$MultiSelect$Css$container,
					$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1)
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$MultiSelect$Css$input, viewState.isError, viewState.isLocked),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$author$project$Form$Helpers$onElementFocus($author$project$Form$MultiSelect$Internal$Open)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$MultiSelect$Internal$Open))
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$MultiSelect$Css$title(
									$elm$core$List$isEmpty(
										$author$project$Resettable$getValue(state.selectedOptions))),
									$author$project$Form$MultiSelect$Css$contentEditableContainer,
									$author$project$Form$MultiSelect$Css$noFocus,
									$rtfeldman$elm_css$Html$Styled$Attributes$title(
									A3($author$project$Form$MultiSelect$Internal$optionText, viewState.defaultLabel, viewState.toLabel, state.selectedOptions)),
									$rtfeldman$elm_css$Html$Styled$Attributes$contenteditable(true)
								]),
							_List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Html$Styled$span,
									_List_Nil,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Html$Styled$text(
											A3($author$project$Form$MultiSelect$Internal$optionText, viewState.defaultLabel, viewState.toLabel, state.selectedOptions))
										])),
									A3(
									$author$project$Html$Styled$Bdt$divIf,
									!viewState.isLocked,
									_List_fromArray(
										[$author$project$Form$MultiSelect$Css$caret]),
									_List_fromArray(
										[
											$rtfeldman$elm_css$Html$Styled$fromUnstyled(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$chevronDown)))
										]))
								])),
							A2($author$project$Form$MultiSelect$Internal$clearButton, state, viewState)
						]))
				]));
	});
var $author$project$Form$MultiSelect$Internal$Blur = {$: 'Blur'};
var $author$project$Form$MultiSelect$Internal$SelectKey = F2(
	function (a, b) {
		return {$: 'SelectKey', a: a, b: b};
	});
var $author$project$Form$MultiSelect$Internal$UpdateSearchText = function (a) {
	return {$: 'UpdateSearchText', a: a};
};
var $author$project$Form$MultiSelect$Internal$filterBySelected = F2(
	function (selectedOptions, options) {
		return A2(
			$elm$core$List$filter,
			function (option) {
				return !A2($elm$core$List$member, option, selectedOptions);
			},
			options);
	});
var $author$project$Form$MultiSelect$Internal$filterOptionsBySearchText = F3(
	function (searchText, toLabel, options) {
		return A2(
			$elm$core$List$filter,
			A2(
				$elm$core$Basics$composeR,
				toLabel,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$String$toLower,
					$elm$core$String$contains(searchText))),
			options);
	});
var $author$project$Form$MultiSelect$Css$optionItem = F2(
	function (isDisabled, isFocused) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$selectOptionItem, isDisabled, isFocused));
	});
var $author$project$Form$MultiSelect$Internal$NoOp = {$: 'NoOp'};
var $author$project$Form$MultiSelect$Internal$Select = function (a) {
	return {$: 'Select', a: a};
};
var $author$project$Form$MultiSelect$Css$checkBox = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$marginRight(
			$rtfeldman$elm_css$Css$px(6)),
			$rtfeldman$elm_css$Css$displayFlex
		]));
var $feathericons$elm_feather$FeatherIcons$checkSquare = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'check-square',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-check-square')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$polyline,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$points('9 11 12 14 22 4')
						]),
					_List_Nil),
					A2(
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11')
						]),
					_List_Nil)
				]))
		]));
var $feathericons$elm_feather$FeatherIcons$square = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'square',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$feathericons$elm_feather$FeatherIcons$xmlns('http://www.w3.org/2000/svg'),
					$elm$svg$Svg$Attributes$width('24'),
					$elm$svg$Svg$Attributes$height('24'),
					$elm$svg$Svg$Attributes$viewBox('0 0 24 24'),
					$elm$svg$Svg$Attributes$fill('none'),
					$elm$svg$Svg$Attributes$stroke('currentColor'),
					$elm$svg$Svg$Attributes$strokeWidth('2'),
					$elm$svg$Svg$Attributes$strokeLinecap('round'),
					$elm$svg$Svg$Attributes$strokeLinejoin('round'),
					$elm$svg$Svg$Attributes$class('feather feather-square')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$rect,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$x('3'),
							$elm$svg$Svg$Attributes$y('3'),
							$elm$svg$Svg$Attributes$width('18'),
							$elm$svg$Svg$Attributes$height('18'),
							$elm$svg$Svg$Attributes$rx('2'),
							$elm$svg$Svg$Attributes$ry('2')
						]),
					_List_Nil)
				]))
		]));
var $author$project$Form$MultiSelect$Internal$optionItem = F3(
	function (state, viewState, option) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					A2(
					$author$project$Form$MultiSelect$Css$optionItem,
					viewState.isOptionDisabled(option),
					_Utils_eq(
						state.focusedOption,
						$elm$core$Maybe$Just(option))),
					A2(
					$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
					'mousedown',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2(
							viewState.isOptionDisabled(option) ? $author$project$Form$MultiSelect$Internal$NoOp : $author$project$Form$MultiSelect$Internal$Select(option),
							true))),
					$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1)
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$MultiSelect$Css$checkBox]),
					_List_fromArray(
						[
							A2(
							$elm$core$List$member,
							option,
							$author$project$Resettable$getValue(state.selectedOptions)) ? $rtfeldman$elm_css$Html$Styled$fromUnstyled(
							A2(
								$feathericons$elm_feather$FeatherIcons$toHtml,
								_List_Nil,
								A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$checkSquare))) : $rtfeldman$elm_css$Html$Styled$fromUnstyled(
							A2(
								$feathericons$elm_feather$FeatherIcons$toHtml,
								_List_Nil,
								A2($feathericons$elm_feather$FeatherIcons$withSize, 18, $feathericons$elm_feather$FeatherIcons$square)))
						])),
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$title(
							viewState.toLabel(option))
						]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$text(
							viewState.toLabel(option))
						]))
				]));
	});
var $author$project$Form$MultiSelect$Css$optionList = $rtfeldman$elm_css$Html$Styled$Attributes$css($author$project$Form$Css$selectOptionList);
var $author$project$Form$MultiSelect$Css$groupDivider = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$margin(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$important(
			A3(
				$rtfeldman$elm_css$Css$border3,
				$rtfeldman$elm_css$Css$px(1),
				$rtfeldman$elm_css$Css$solid,
				$rtfeldman$elm_css$Css$hex('eeeeee')))
		]));
var $rtfeldman$elm_css$Html$Styled$hr = $rtfeldman$elm_css$Html$Styled$node('hr');
var $rtfeldman$elm_css$Css$marginTop = $rtfeldman$elm_css$Css$prop1('margin-top');
var $author$project$Form$MultiSelect$Css$optGroupLabel = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$marginTop(
			$rtfeldman$elm_css$Css$px(6)),
			$rtfeldman$elm_css$Css$marginLeft(
			$rtfeldman$elm_css$Css$px(6)),
			$rtfeldman$elm_css$Css$fontSize(
			$rtfeldman$elm_css$Css$px(10)),
			$rtfeldman$elm_css$Css$color(
			A3($rtfeldman$elm_css$Css$rgb, 111, 111, 111)),
			$rtfeldman$elm_css$Css$textTransform($rtfeldman$elm_css$Css$uppercase)
		]));
var $author$project$Form$MultiSelect$Internal$selectedGroup = F2(
	function (state, viewState) {
		return (!$elm$core$List$isEmpty(
			$author$project$Resettable$getValue(state.selectedOptions))) ? A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$MultiSelect$Css$optGroupLabel]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$text(
							$elm$core$String$fromInt(
								$elm$core$List$length(
									$author$project$Resettable$getValue(state.selectedOptions))) + (' option' + ((($elm$core$List$length(
								$author$project$Resettable$getValue(state.selectedOptions)) === 1) ? '' : 's') + ' selected')))
						])),
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_Nil,
					A2(
						$elm$core$List$map,
						A2($author$project$Form$MultiSelect$Internal$optionItem, state, viewState),
						$author$project$Resettable$getValue(state.selectedOptions))),
					A2(
					$rtfeldman$elm_css$Html$Styled$hr,
					_List_fromArray(
						[$author$project$Form$MultiSelect$Css$groupDivider]),
					_List_Nil)
				])) : $rtfeldman$elm_css$Html$Styled$text('');
	});
var $author$project$Form$MultiSelect$Internal$optionList = F2(
	function (state, viewState) {
		var selectedOptions = A3(
			$author$project$Form$MultiSelect$Internal$filterOptionsBySearchText,
			state.searchText,
			viewState.toLabel,
			$author$project$Resettable$getValue(state.selectedOptions));
		var filteredOptions = A2(
			$author$project$Form$MultiSelect$Internal$filterBySelected,
			$author$project$Resettable$getValue(state.selectedOptions),
			A3(
				$author$project$Form$MultiSelect$Internal$filterOptionsBySearchText,
				state.searchText,
				viewState.toLabel,
				$mgold$elm_nonempty_list$List$Nonempty$toList(state.options)));
		return $elm$core$List$isEmpty(filteredOptions) ? A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$MultiSelect$Css$optionList]),
			_List_fromArray(
				[
					A2($author$project$Form$MultiSelect$Internal$selectedGroup, state, viewState),
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$MultiSelect$Css$optionItem, false, false),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1)
						]),
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$text(
							'No ' + ((!$elm$core$List$length(selectedOptions)) ? '' : ('other ' + ('options containing - \"' + (state.searchText + '\"')))))
						]))
				])) : A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$MultiSelect$Css$optionList]),
					A2(
						$elm$core$List$cons,
						A2($author$project$Form$MultiSelect$Internal$selectedGroup, state, viewState),
						A2(
							$elm$core$List$map,
							A2($author$project$Form$MultiSelect$Internal$optionItem, state, viewState),
							filteredOptions)))
				]));
	});
var $author$project$Form$MultiSelect$Internal$open = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$MultiSelect$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[
							A2($author$project$Form$MultiSelect$Css$input, viewState.isError, viewState.isLocked),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1),
							$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$MultiSelect$Internal$Blur),
							$author$project$Form$Helpers$onSelectKey(
							$author$project$Form$MultiSelect$Internal$SelectKey(viewState.isOptionDisabled)),
							$author$project$Form$MultiSelect$Css$title(
							$elm$core$List$isEmpty(
								$author$project$Resettable$getValue(state.selectedOptions))),
							$rtfeldman$elm_css$Html$Styled$Attributes$title(
							A3($author$project$Form$MultiSelect$Internal$optionText, viewState.defaultLabel, viewState.toLabel, state.selectedOptions))
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$div,
							_List_fromArray(
								[
									$author$project$Form$MultiSelect$Css$title(
									$elm$core$List$isEmpty(
										$author$project$Resettable$getValue(state.selectedOptions))),
									$author$project$Form$MultiSelect$Css$contentEditableContainer,
									$author$project$Form$MultiSelect$Css$noFocus,
									$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$MultiSelect$Internal$Blur),
									$rtfeldman$elm_css$Html$Styled$Attributes$title(
									A3($author$project$Form$MultiSelect$Internal$optionText, viewState.defaultLabel, viewState.toLabel, state.selectedOptions)),
									$rtfeldman$elm_css$Html$Styled$Attributes$contenteditable(true),
									$author$project$Html$Styled$Events$Bdt$onContentEditableInput($author$project$Form$MultiSelect$Internal$UpdateSearchText),
									$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(state.searchText)
								]),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$text('')
								]))
						])),
					A2($author$project$Form$MultiSelect$Internal$optionList, state, viewState)
				]));
	});
var $author$project$Form$MultiSelect$Internal$render = F2(
	function (state, viewState) {
		var _v0 = state.isOpen;
		if (!_v0) {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$MultiSelect$Internal$closed, state, viewState);
		} else {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$MultiSelect$Internal$open, state, viewState);
		}
	});
var $author$project$Form$MultiSelect$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$MultiSelect$Internal$render, state, viewState);
};
var $author$project$Form$SearchSelect$Internal$Open = {$: 'Open'};
var $rtfeldman$elm_css$Css$right = $rtfeldman$elm_css$Css$prop1('right');
var $author$project$Form$SearchSelect$Css$carets = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$px(16)),
			$rtfeldman$elm_css$Css$right(
			$rtfeldman$elm_css$Css$px(7.5))
		]));
var $author$project$Form$SearchSelect$Internal$Clear = {$: 'Clear'};
var $author$project$Form$SearchSelect$Internal$clearButton = F2(
	function (state, viewState) {
		return A3(
			$author$project$Html$Styled$Bdt$divIf,
			viewState.isClearable && (!_Utils_eq(
				$author$project$Resettable$getValue(state.selectedOption),
				$elm$core$Maybe$Nothing)),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
					'mousedown',
					$elm$json$Json$Decode$succeed(
						_Utils_Tuple2($author$project$Form$SearchSelect$Internal$Clear, true))),
					$author$project$Form$Css$clearIcon
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$fromUnstyled(
					A2(
						$feathericons$elm_feather$FeatherIcons$toHtml,
						_List_Nil,
						A2($feathericons$elm_feather$FeatherIcons$withSize, 14, $feathericons$elm_feather$FeatherIcons$x)))
				]));
	});
var $author$project$Form$SearchSelect$Css$container = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
		]));
var $rtfeldman$elm_css$Css$inlineBlock = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'inline-block'};
var $author$project$Form$SearchSelect$Css$displayInline = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock)
		]));
var $author$project$Form$SearchSelect$Css$input = F2(
	function (isError, isLocked) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			A2($author$project$Form$Css$input, isError, isLocked));
	});
var $author$project$Form$SearchSelect$Css$title = function (isFaded) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		$author$project$Form$Css$title(isFaded));
};
var $author$project$Form$SearchSelect$Internal$closed = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$SearchSelect$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$input,
					_List_fromArray(
						[
							A2($author$project$Form$SearchSelect$Css$input, viewState.isError, viewState.isLocked),
							$author$project$Form$SearchSelect$Css$title(
							_Utils_eq(
								$author$project$Resettable$getValue(state.selectedOption),
								$elm$core$Maybe$Nothing)),
							A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id),
							$rtfeldman$elm_css$Html$Styled$Attributes$type_('text'),
							$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$author$project$Form$Helpers$onElementFocus($author$project$Form$SearchSelect$Internal$Open)),
							A2(
							$author$project$Html$Styled$Bdt$attributeIf,
							!viewState.isLocked,
							$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Form$SearchSelect$Internal$Open)),
							$rtfeldman$elm_css$Html$Styled$Attributes$value(
							A2(
								$elm$core$Maybe$withDefault,
								'',
								A2(
									$elm$core$Maybe$map,
									viewState.toLabel,
									$author$project$Resettable$getValue(state.selectedOption))))
						]),
					_List_Nil),
					A2(
					$rtfeldman$elm_css$Html$Styled$div,
					_List_fromArray(
						[$author$project$Form$SearchSelect$Css$carets]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$span,
							_List_fromArray(
								[$author$project$Form$SearchSelect$Css$displayInline]),
							_List_fromArray(
								[
									A2($author$project$Form$SearchSelect$Internal$clearButton, state, viewState)
								]))
						]))
				]));
	});
var $author$project$Form$SearchSelect$Internal$Blur = {$: 'Blur'};
var $author$project$Form$SearchSelect$Internal$SelectKey = function (a) {
	return {$: 'SelectKey', a: a};
};
var $author$project$Form$SearchSelect$Internal$UpdateSearchInput = F2(
	function (a, b) {
		return {$: 'UpdateSearchInput', a: a, b: b};
	});
var $author$project$Form$SearchSelect$Internal$InputMinimum = function (a) {
	return {$: 'InputMinimum', a: a};
};
var $author$project$Form$SearchSelect$Internal$NoResults = {$: 'NoResults'};
var $author$project$Form$SearchSelect$Internal$Searching = {$: 'Searching'};
var $author$project$Form$SearchSelect$Css$infoMessage = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			A3(
			$rtfeldman$elm_css$Css$border3,
			$rtfeldman$elm_css$Css$px(1),
			$rtfeldman$elm_css$Css$solid,
			$rtfeldman$elm_css$Css$hex('cccccc')),
			$rtfeldman$elm_css$Css$borderTopColor(
			$rtfeldman$elm_css$Css$hex('eeeeee')),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$px(8),
			$rtfeldman$elm_css$Css$px(12)),
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$px(39)),
			$rtfeldman$elm_css$Css$left(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$right(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$zIndex(
			$rtfeldman$elm_css$Css$int(10)),
			$rtfeldman$elm_css$Css$backgroundColor(
			$rtfeldman$elm_css$Css$hex('ffffff'))
		]));
var $author$project$Form$SearchSelect$Internal$infoMessageContainer = function (message) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Form$SearchSelect$Css$infoMessage]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$text(message)
			]));
};
var $author$project$Form$SearchSelect$Internal$infoMessage = function (message) {
	switch (message.$) {
		case 'InputMinimum':
			var _int = message.a;
			return $author$project$Form$SearchSelect$Internal$infoMessageContainer(
				'please type at least ' + ($elm$core$String$fromInt(_int) + ' characters to search'));
		case 'Searching':
			return $author$project$Form$SearchSelect$Internal$infoMessageContainer('searching ..');
		default:
			return $author$project$Form$SearchSelect$Internal$infoMessageContainer('no results');
	}
};
var $author$project$Form$SearchSelect$Css$optionList = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_Utils_ap(
		$author$project$Form$Css$selectOptionList,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$top(
				$rtfeldman$elm_css$Css$px(39))
			])));
var $author$project$Form$SearchSelect$Internal$Select = function (a) {
	return {$: 'Select', a: a};
};
var $author$project$Form$SearchSelect$Css$optionItem = function (isFocused) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		A2($author$project$Form$Css$selectOptionItem, false, isFocused));
};
var $author$project$Form$SearchSelect$Internal$searchResultItem = F3(
	function (focusedOption, toLabel, option) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$author$project$Form$SearchSelect$Css$optionItem(
					_Utils_eq(
						$elm$core$Maybe$Just(option),
						focusedOption)),
					$rtfeldman$elm_css$Html$Styled$Events$onMouseDown(
					$author$project$Form$SearchSelect$Internal$Select(option))
				]),
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$text(
					toLabel(option))
				]));
	});
var $author$project$Form$SearchSelect$Internal$searchResultList = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$SearchSelect$Css$optionList]),
			A2(
				$elm$core$List$map,
				A2($author$project$Form$SearchSelect$Internal$searchResultItem, state.focusedOption, viewState.toLabel),
				state.options));
	});
var $author$project$Form$SearchSelect$Internal$searchResults = F2(
	function (state, viewState) {
		var _v0 = A2($author$project$Form$SearchSelect$Internal$shouldSearch, viewState.inputMinimum, state.input);
		if (!_v0) {
			return $author$project$Form$SearchSelect$Internal$infoMessage(
				$author$project$Form$SearchSelect$Internal$InputMinimum(viewState.inputMinimum));
		} else {
			var _v1 = state.isSearching;
			if (_v1) {
				return $author$project$Form$SearchSelect$Internal$infoMessage($author$project$Form$SearchSelect$Internal$Searching);
			} else {
				var _v2 = $elm$core$List$isEmpty(state.options);
				if (_v2) {
					return $author$project$Form$SearchSelect$Internal$infoMessage($author$project$Form$SearchSelect$Internal$NoResults);
				} else {
					return A2($author$project$Form$SearchSelect$Internal$searchResultList, state, viewState);
				}
			}
		}
	});
var $author$project$Form$SearchSelect$Internal$open = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[$author$project$Form$SearchSelect$Css$container]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$input,
					_List_fromArray(
						[
							A2($author$project$Form$SearchSelect$Css$input, viewState.isLocked, viewState.isError),
							$author$project$Form$SearchSelect$Css$title(
							_Utils_eq(
								$author$project$Resettable$getValue(state.selectedOption),
								$elm$core$Maybe$Nothing)),
							$rtfeldman$elm_css$Html$Styled$Attributes$type_('text'),
							$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(
							A2(
								$elm$core$Maybe$withDefault,
								'',
								A2(
									$elm$core$Maybe$map,
									viewState.toLabel,
									$author$project$Resettable$getValue(state.selectedOption)))),
							$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1),
							$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
							$rtfeldman$elm_css$Html$Styled$Events$onInput(
							$author$project$Form$SearchSelect$Internal$UpdateSearchInput(viewState.inputMinimum)),
							$rtfeldman$elm_css$Html$Styled$Events$onBlur($author$project$Form$SearchSelect$Internal$Blur),
							$author$project$Form$Helpers$onSelectKey($author$project$Form$SearchSelect$Internal$SelectKey),
							$rtfeldman$elm_css$Html$Styled$Attributes$value(state.input)
						]),
					_List_Nil),
					A2($author$project$Form$SearchSelect$Internal$searchResults, state, viewState)
				]));
	});
var $author$project$Form$SearchSelect$Internal$render = F2(
	function (state, viewState) {
		var _v0 = state.isOpen;
		if (!_v0) {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$SearchSelect$Internal$closed, state, viewState);
		} else {
			return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$SearchSelect$Internal$open, state, viewState);
		}
	});
var $author$project$Form$SearchSelect$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$SearchSelect$Internal$render, state, viewState);
};
var $author$project$Form$TextArea$Internal$Input = function (a) {
	return {$: 'Input', a: a};
};
var $rtfeldman$elm_css$Css$text_ = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'text'};
var $author$project$Form$TextArea$Css$input = F3(
	function (isError, isLocked, shouldWrap) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					$rtfeldman$elm_css$Css$hex(
						(isError && (!isLocked)) ? 'd9534f' : 'cccccc')),
					$rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$pct(100)),
					$rtfeldman$elm_css$Css$maxWidth(
					$rtfeldman$elm_css$Css$pct(100)),
					$rtfeldman$elm_css$Css$height(
					$rtfeldman$elm_css$Css$rem(2)),
					A2(
					$rtfeldman$elm_css$Css$padding2,
					$rtfeldman$elm_css$Css$rem(0),
					$rtfeldman$elm_css$Css$rem(0.4)),
					A2(
					$rtfeldman$elm_css$Css$margin2,
					$rtfeldman$elm_css$Css$rem(0.5),
					$rtfeldman$elm_css$Css$rem(0)),
					$rtfeldman$elm_css$Css$color(
					$rtfeldman$elm_css$Css$hex('555555')),
					$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex(
						isLocked ? 'dddddd' : 'ffffff')),
					$rtfeldman$elm_css$Css$fontSize(
					$rtfeldman$elm_css$Css$rem(0.8)),
					$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
					$rtfeldman$elm_css$Css$overflowX($rtfeldman$elm_css$Css$hidden),
					$rtfeldman$elm_css$Css$focus(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$outlineWidth(
							$rtfeldman$elm_css$Css$rem(0))
						])),
					$rtfeldman$elm_css$Css$displayFlex,
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
					$rtfeldman$elm_css$Css$flexGrow(
					$rtfeldman$elm_css$Css$int(1)),
					$rtfeldman$elm_css$Css$padding(
					$rtfeldman$elm_css$Css$rem(0.4)),
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$text_)
				]));
	});
var $rtfeldman$elm_css$Html$Styled$textarea = $rtfeldman$elm_css$Html$Styled$node('textarea');
var $author$project$Form$TextArea$Internal$inputField = F2(
	function (state, viewState) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$textarea,
			_List_fromArray(
				[
					A3($author$project$Form$TextArea$Css$input, viewState.isError, viewState.isLocked, viewState.shouldWrap),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(viewState.isLocked),
					$rtfeldman$elm_css$Html$Styled$Attributes$value(
					$author$project$Resettable$getValue(state.value)),
					$rtfeldman$elm_css$Html$Styled$Events$onInput($author$project$Form$TextArea$Internal$Input),
					$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(viewState.placeholder),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$maxlength, viewState.maxLength),
					A2($author$project$Html$Styled$Bdt$maybeAttribute, $rtfeldman$elm_css$Html$Styled$Attributes$id, viewState.id)
				]),
			_List_Nil);
	});
var $author$project$Form$TextArea$Internal$render = F2(
	function (state, viewState) {
		return A3($rtfeldman$elm_css$Html$Styled$Lazy$lazy2, $author$project$Form$TextArea$Internal$inputField, state, viewState);
	});
var $author$project$Form$TextArea$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2($author$project$Form$TextArea$Internal$render, state, viewState);
};
var $rtfeldman$elm_css$Css$bottom = $rtfeldman$elm_css$Css$prop1('bottom');
var $rtfeldman$elm_css$Css$fixed = {backgroundAttachment: $rtfeldman$elm_css$Css$Structure$Compatible, position: $rtfeldman$elm_css$Css$Structure$Compatible, tableLayout: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'fixed'};
var $author$project$Modal$Css$background = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$backgroundColor(
			A4($rtfeldman$elm_css$Css$rgba, 0, 0, 0, 0.4)),
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$right(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$bottom(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$left(
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$zIndex(
			$rtfeldman$elm_css$Css$int(100))
		]));
var $rtfeldman$elm_css$Css$VhUnits = {$: 'VhUnits'};
var $rtfeldman$elm_css$Css$vh = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$VhUnits, 'vh');
var $author$project$Modal$Css$body = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$flexWrap($rtfeldman$elm_css$Css$wrap),
			A2(
			$rtfeldman$elm_css$Css$margin2,
			$rtfeldman$elm_css$Css$rem(0.8),
			$rtfeldman$elm_css$Css$rem(0)),
			$rtfeldman$elm_css$Css$maxHeight(
			A3(
				$rtfeldman$elm_css$Css$calc,
				$rtfeldman$elm_css$Css$vh(100),
				$rtfeldman$elm_css$Css$minus,
				$rtfeldman$elm_css$Css$rem(13))),
			$rtfeldman$elm_css$Css$overflowY($rtfeldman$elm_css$Css$auto)
		]));
var $author$project$Modal$Css$closeIcon = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$right(
			$rtfeldman$elm_css$Css$rem(1)),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$rem(1)),
			$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer)
		]));
var $author$project$Modal$closeIcon = function (closeMsg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$author$project$Modal$Css$closeIcon,
				$rtfeldman$elm_css$Html$Styled$Events$onClick(closeMsg)
			]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$fromUnstyled(
				A2(
					$feathericons$elm_feather$FeatherIcons$toHtml,
					_List_Nil,
					A2($feathericons$elm_feather$FeatherIcons$withSize, 14, $feathericons$elm_feather$FeatherIcons$x)))
			]));
};
var $author$project$Modal$Css$footer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$flexEnd),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0),
			$rtfeldman$elm_css$Css$rem(0.8))
		]));
var $author$project$Modal$Css$header = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$rem(0),
			$rtfeldman$elm_css$Css$rem(0.8)),
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
			$rtfeldman$elm_css$Css$fontSize(
			$rtfeldman$elm_css$Css$rem(1.2)),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(600))
		]));
var $rtfeldman$elm_css$Css$valuesOrNone = function (list) {
	return $elm$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				function ($) {
					return $.value;
				},
				list))
	};
};
var $rtfeldman$elm_css$Css$transforms = A2(
	$elm$core$Basics$composeL,
	$rtfeldman$elm_css$Css$prop1('transform'),
	$rtfeldman$elm_css$Css$valuesOrNone);
var $rtfeldman$elm_css$Css$transform = function (only) {
	return $rtfeldman$elm_css$Css$transforms(
		_List_fromArray(
			[only]));
};
var $rtfeldman$elm_css$Css$translate = function (_v0) {
	var value = _v0.value;
	return {
		transform: $rtfeldman$elm_css$Css$Structure$Compatible,
		value: A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'translate',
			_List_fromArray(
				[value]))
	};
};
var $author$project$Modal$Css$modal = function (size) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_Utils_ap(
			$author$project$Grid$Css$containerWidths,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$maxWidth(
					$rtfeldman$elm_css$Css$px(
						$author$project$Grid$SizeHelpers$containerPxWidth(size))),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
					$rtfeldman$elm_css$Css$top(
					$rtfeldman$elm_css$Css$rem(3)),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$pct(50)),
					$rtfeldman$elm_css$Css$transform(
					$rtfeldman$elm_css$Css$translate(
						$rtfeldman$elm_css$Css$pct(-50))),
					$rtfeldman$elm_css$Css$zIndex(
					$rtfeldman$elm_css$Css$int(100)),
					$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex('ffffff')),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(2)),
					$rtfeldman$elm_css$Css$padding(
					$rtfeldman$elm_css$Css$rem(1)),
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					$rtfeldman$elm_css$Css$hex('777777'))
				])));
};
var $rtfeldman$elm_css$Css$Structure$TypeSelector = function (a) {
	return {$: 'TypeSelector', a: a};
};
var $rtfeldman$elm_css$Css$Global$typeSelector = F2(
	function (selectorStr, styles) {
		var sequence = A2(
			$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence,
			$rtfeldman$elm_css$Css$Structure$TypeSelector(selectorStr),
			_List_Nil);
		var sel = A3($rtfeldman$elm_css$Css$Structure$Selector, sequence, _List_Nil, $elm$core$Maybe$Nothing);
		return $rtfeldman$elm_css$Css$Preprocess$Snippet(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration(
					A3($rtfeldman$elm_css$Css$Preprocess$StyleBlock, sel, _List_Nil, styles))
				]));
	});
var $rtfeldman$elm_css$Css$Global$body = $rtfeldman$elm_css$Css$Global$typeSelector('body');
var $author$project$Modal$Css$removeBodyScroll = $rtfeldman$elm_css$Css$Global$global(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$Global$body(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden)
				]))
		]));
var $author$project$Modal$Css$block = F2(
	function (cols, sizes) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$Grid$Css$colSize,
					$elm$core$List$reverse(
						$author$project$Grid$SizeHelpers$orderBySize(sizes))),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$num(1)),
						A2(
						$rtfeldman$elm_css$Css$padding2,
						$rtfeldman$elm_css$Css$rem(0.2),
						$rtfeldman$elm_css$Css$rem(0.8)),
						$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
						$author$project$Grid$Css$defaultColSize(cols)
					])));
	});
var $author$project$Modal$renderModalBlock = function (_v0) {
	var modalBlockConfig = _v0.a;
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				A2($author$project$Modal$Css$block, modalBlockConfig.defaultCols, modalBlockConfig.sizes)
			]),
		modalBlockConfig.children);
};
var $author$project$Modal$render = function (_v0) {
	var viewConfig = _v0.a;
	return A3(
		$author$project$Html$Styled$Bdt$divIf,
		viewConfig.isOpen,
		_List_Nil,
		_List_fromArray(
			[
				$author$project$Modal$Css$removeBodyScroll,
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Modal$Css$background,
						$rtfeldman$elm_css$Html$Styled$Events$onClick(viewConfig.closeMsg)
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						$author$project$Modal$Css$modal(viewConfig.size)
					]),
				_List_fromArray(
					[
						$author$project$Modal$closeIcon(viewConfig.closeMsg),
						A3(
						$author$project$Html$Styled$Bdt$divIf,
						(viewConfig.headerTitle !== '') || (!$elm$core$List$isEmpty(viewConfig.headerButtons)),
						_List_fromArray(
							[$author$project$Modal$Css$header]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Html$Styled$span,
								_List_Nil,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$text(viewConfig.headerTitle)
									])),
								A2(
								$rtfeldman$elm_css$Html$Styled$div,
								_List_Nil,
								A2($elm$core$List$map, $author$project$Button$render, viewConfig.headerButtons))
							])),
						A3(
						$author$project$Html$Styled$Bdt$divIf,
						!$elm$core$List$isEmpty(viewConfig.modalBlocks),
						_List_fromArray(
							[$author$project$Modal$Css$body]),
						A2($elm$core$List$map, $author$project$Modal$renderModalBlock, viewConfig.modalBlocks)),
						A3(
						$author$project$Html$Styled$Bdt$divIf,
						!$elm$core$List$isEmpty(viewConfig.footerButtons),
						_List_fromArray(
							[$author$project$Modal$Css$footer]),
						A2($elm$core$List$map, $author$project$Button$render, viewConfig.footerButtons))
					]))
			]));
};
var $author$project$Toggle$Css$label = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(100)),
			$rtfeldman$elm_css$Css$color(
			A3($rtfeldman$elm_css$Css$rgb, 111, 111, 111)),
			$rtfeldman$elm_css$Css$marginLeft(
			$rtfeldman$elm_css$Css$px(5))
		]));
var $author$project$Toggle$Css$labelContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
		]));
var $rtfeldman$elm_css$Css$Structure$PseudoElement = function (a) {
	return {$: 'PseudoElement', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$WithPseudoElement = F2(
	function (a, b) {
		return {$: 'WithPseudoElement', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$pseudoElement = function (element) {
	return $rtfeldman$elm_css$Css$Preprocess$WithPseudoElement(
		$rtfeldman$elm_css$Css$Structure$PseudoElement(element));
};
var $rtfeldman$elm_css$Css$after = $rtfeldman$elm_css$Css$pseudoElement('after');
var $rtfeldman$elm_css$Css$Transitions$BackgroundColor = {$: 'BackgroundColor'};
var $rtfeldman$elm_css$Css$Transitions$Transition = function (a) {
	return {$: 'Transition', a: a};
};
var $rtfeldman$elm_css$Css$Transitions$durationTransition = F2(
	function (animation, duration) {
		return $rtfeldman$elm_css$Css$Transitions$Transition(
			{animation: animation, delay: $elm$core$Maybe$Nothing, duration: duration, timing: $elm$core$Maybe$Nothing});
	});
var $rtfeldman$elm_css$Css$Transitions$backgroundColor = $rtfeldman$elm_css$Css$Transitions$durationTransition($rtfeldman$elm_css$Css$Transitions$BackgroundColor);
var $rtfeldman$elm_css$Css$before = $rtfeldman$elm_css$Css$pseudoElement('before');
var $rtfeldman$elm_css$Css$block = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'block'};
var $rtfeldman$elm_css$Css$Transitions$BorderColor = {$: 'BorderColor'};
var $rtfeldman$elm_css$Css$Transitions$borderColor = $rtfeldman$elm_css$Css$Transitions$durationTransition($rtfeldman$elm_css$Css$Transitions$BorderColor);
var $rtfeldman$elm_css$Css$boxShadow4 = $rtfeldman$elm_css$Css$prop4('box-shadow');
var $rtfeldman$elm_css$Css$Transitions$Margin = {$: 'Margin'};
var $rtfeldman$elm_css$Css$Transitions$margin = $rtfeldman$elm_css$Css$Transitions$durationTransition($rtfeldman$elm_css$Css$Transitions$Margin);
var $author$project$Toggle$Css$toggleColor = F3(
	function (toggle_, isDisabled, isError) {
		var _v0 = _Utils_Tuple3(toggle_, isDisabled, isError);
		if (!_v0.b) {
			if (!_v0.c) {
				if (_v0.a) {
					return A3($rtfeldman$elm_css$Css$rgb, 81, 163, 81);
				} else {
					return $rtfeldman$elm_css$Css$hex('ddd');
				}
			} else {
				return A3($rtfeldman$elm_css$Css$rgb, 163, 81, 81);
			}
		} else {
			return $rtfeldman$elm_css$Css$hex('efefef');
		}
	});
var $rtfeldman$elm_css$Css$Transitions$propToString = function (prop) {
	switch (prop.$) {
		case 'Background':
			return 'background';
		case 'BackgroundColor':
			return 'background-color';
		case 'BackgroundPosition':
			return 'background-position';
		case 'BackgroundSize':
			return 'background-size';
		case 'Border':
			return 'border';
		case 'BorderBottom':
			return 'border-bottom';
		case 'BorderBottomColor':
			return 'border-bottom-color';
		case 'BorderBottomLeftRadius':
			return 'border-bottom-left-radius';
		case 'BorderBottomRightRadius':
			return 'border-bottom-right-radius';
		case 'BorderBottomWidth':
			return 'border-bottom-width';
		case 'BorderColor':
			return 'border-color';
		case 'BorderLeft':
			return 'border-left';
		case 'BorderLeftColor':
			return 'border-left-color';
		case 'BorderLeftWidth':
			return 'border-left-width';
		case 'BorderRadius':
			return 'border-radius';
		case 'BorderRight':
			return 'border-right';
		case 'BorderRightColor':
			return 'border-right-color';
		case 'BorderRightWidth':
			return 'border-right-width';
		case 'BorderTop':
			return 'border-top';
		case 'BorderTopColor':
			return 'border-top-color';
		case 'BorderTopLeftRadius':
			return 'border-top-left-radius';
		case 'BorderTopRightRadius':
			return 'border-top-right-radius';
		case 'BorderTopWidth':
			return 'border-top-width';
		case 'BorderWidth':
			return 'border-width';
		case 'Bottom':
			return 'bottom';
		case 'BoxShadow':
			return 'box-shadow';
		case 'CaretColor':
			return 'caret-color';
		case 'Clip':
			return 'clip';
		case 'ClipPath':
			return 'clip-path';
		case 'Color':
			return 'color';
		case 'ColumnCount':
			return 'column-count';
		case 'ColumnGap':
			return 'column-gap';
		case 'ColumnRule':
			return 'column-rule';
		case 'ColumnRuleColor':
			return 'column-rule-color';
		case 'ColumnRuleWidth':
			return 'column-rule-width';
		case 'ColumnWidth':
			return 'column-width';
		case 'Columns':
			return 'columns';
		case 'Filter':
			return 'filter';
		case 'Flex':
			return 'flex';
		case 'FlexBasis':
			return 'flex-basis';
		case 'FlexGrow':
			return 'flex-grow';
		case 'FlexShrink':
			return 'flex-shrink';
		case 'Font':
			return 'font';
		case 'FontSize':
			return 'font-size';
		case 'FontSizeAdjust':
			return 'font-size-adjust';
		case 'FontStretch':
			return 'font-stretch';
		case 'FontVariationSettings':
			return 'font-variation-settings';
		case 'FontWeight':
			return 'font-weight';
		case 'GridColumnGap':
			return 'grid-column-gap';
		case 'GridGap':
			return 'grid-gap';
		case 'GridRowGap':
			return 'grid-row-gap';
		case 'Height':
			return 'height';
		case 'Left':
			return 'left';
		case 'LetterSpacing':
			return 'letter-spacing';
		case 'LineHeight':
			return 'line-height';
		case 'Margin':
			return 'margin';
		case 'MarginBottom':
			return 'margin-bottom';
		case 'MarginLeft':
			return 'margin-left';
		case 'MarginRight':
			return 'margin-right';
		case 'MarginTop':
			return 'margin-top';
		case 'Mask':
			return 'mask';
		case 'MaskPosition':
			return 'mask-position';
		case 'MaskSize':
			return 'mask-size';
		case 'MaxHeight':
			return 'max-height';
		case 'MaxWidth':
			return 'max-width';
		case 'MinHeight':
			return 'min-height';
		case 'MinWidth':
			return 'min-width';
		case 'ObjectPosition':
			return 'object-position';
		case 'Offset':
			return 'offset';
		case 'OffsetAnchor':
			return 'offset-anchor';
		case 'OffsetDistance':
			return 'offset-distance';
		case 'OffsetPath':
			return 'offset-path';
		case 'OffsetRotate':
			return 'offset-rotate';
		case 'Opacity':
			return 'opacity';
		case 'Order':
			return 'order';
		case 'Outline':
			return 'outline';
		case 'OutlineColor':
			return 'outline-color';
		case 'OutlineOffset':
			return 'outline-offset';
		case 'OutlineWidth':
			return 'outline-width';
		case 'Padding':
			return 'padding';
		case 'PaddingBottom':
			return 'padding-bottom';
		case 'PaddingLeft':
			return 'padding-left';
		case 'PaddingRight':
			return 'padding-right';
		case 'PaddingTop':
			return 'padding-top';
		case 'Right':
			return 'right';
		case 'TabSize':
			return 'tab-size';
		case 'TextIndent':
			return 'text-indent';
		case 'TextShadow':
			return 'text-shadow';
		case 'Top':
			return 'top';
		case 'Transform':
			return 'transform';
		case 'TransformOrigin':
			return 'transform-origin';
		case 'VerticalAlign':
			return 'vertical-align';
		case 'Visibility':
			return 'visibility';
		case 'Width':
			return 'width';
		case 'WordSpacing':
			return 'word-spacing';
		default:
			return 'z-index';
	}
};
var $rtfeldman$elm_css$Css$Transitions$timeToString = function (time) {
	return $elm$core$String$fromFloat(time) + 'ms';
};
var $rtfeldman$elm_css$Css$Transitions$timingFunctionToString = function (tf) {
	switch (tf.$) {
		case 'Ease':
			return 'ease';
		case 'Linear':
			return 'linear';
		case 'EaseIn':
			return 'ease-in';
		case 'EaseOut':
			return 'ease-out';
		case 'EaseInOut':
			return 'ease-in-out';
		case 'StepStart':
			return 'step-start';
		case 'StepEnd':
			return 'step-end';
		default:
			var _float = tf.a;
			var float2 = tf.b;
			var float3 = tf.c;
			var float4 = tf.d;
			return 'cubic-bezier(' + ($elm$core$String$fromFloat(_float) + (' , ' + ($elm$core$String$fromFloat(float2) + (' , ' + ($elm$core$String$fromFloat(float3) + (' , ' + ($elm$core$String$fromFloat(float4) + ')')))))));
	}
};
var $rtfeldman$elm_css$Css$Transitions$transition = function (options) {
	var v = A3(
		$elm$core$String$slice,
		0,
		-1,
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, s) {
					var animation = _v0.a.animation;
					var duration = _v0.a.duration;
					var delay = _v0.a.delay;
					var timing = _v0.a.timing;
					return s + (A2(
						$elm$core$String$join,
						' ',
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$Transitions$propToString(animation),
								$rtfeldman$elm_css$Css$Transitions$timeToString(duration),
								A2(
								$elm$core$Maybe$withDefault,
								'',
								A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Transitions$timeToString, delay)),
								A2(
								$elm$core$Maybe$withDefault,
								'',
								A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Transitions$timingFunctionToString, timing))
							])) + ',');
				}),
			'',
			options));
	return A2($rtfeldman$elm_css$Css$property, 'transition', v);
};
var $author$project$Toggle$Css$toggle = F3(
	function (toggle_, isDisabled, isError) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
					$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
					$rtfeldman$elm_css$Css$cursor(
					isDisabled ? $rtfeldman$elm_css$Css$notAllowed : $rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$rem(3)),
					$rtfeldman$elm_css$Css$height(
					$rtfeldman$elm_css$Css$rem(1.5)),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					$rtfeldman$elm_css$Css$backgroundColor(
					A3($author$project$Toggle$Css$toggleColor, toggle_, isDisabled, isError)),
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					A3($author$project$Toggle$Css$toggleColor, toggle_, isDisabled, isError)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$rem(1.5)),
					$rtfeldman$elm_css$Css$Transitions$transition(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$Transitions$backgroundColor(400),
							$rtfeldman$elm_css$Css$Transitions$borderColor(400)
						])),
					$rtfeldman$elm_css$Css$before(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$block),
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							$rtfeldman$elm_css$Css$top(
							$rtfeldman$elm_css$Css$px(1)),
							$rtfeldman$elm_css$Css$right(
							$rtfeldman$elm_css$Css$px(1)),
							$rtfeldman$elm_css$Css$left(
							$rtfeldman$elm_css$Css$px(1)),
							$rtfeldman$elm_css$Css$bottom(
							$rtfeldman$elm_css$Css$px(1)),
							A2($rtfeldman$elm_css$Css$property, 'content', ''),
							$rtfeldman$elm_css$Css$backgroundColor(
							toggle_ ? $rtfeldman$elm_css$Css$hex('8ce196') : $rtfeldman$elm_css$Css$hex('f1f1f1')),
							$rtfeldman$elm_css$Css$borderRadius(
							$rtfeldman$elm_css$Css$rem(1.3))
						])),
					$rtfeldman$elm_css$Css$after(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$block),
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							$rtfeldman$elm_css$Css$top(
							$rtfeldman$elm_css$Css$px(1)),
							$rtfeldman$elm_css$Css$left(
							$rtfeldman$elm_css$Css$px(1)),
							$rtfeldman$elm_css$Css$bottom(
							$rtfeldman$elm_css$Css$px(1)),
							A2($rtfeldman$elm_css$Css$property, 'content', '\'\''),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$rem(1.3)),
							$rtfeldman$elm_css$Css$backgroundColor(
							isDisabled ? $rtfeldman$elm_css$Css$hex('eee') : $rtfeldman$elm_css$Css$hex('fff')),
							$rtfeldman$elm_css$Css$borderRadius(
							$rtfeldman$elm_css$Css$rem(1.3)),
							A4(
							$rtfeldman$elm_css$Css$boxShadow4,
							$rtfeldman$elm_css$Css$px(0),
							$rtfeldman$elm_css$Css$px(2),
							$rtfeldman$elm_css$Css$px(5),
							A4($rtfeldman$elm_css$Css$rgba, 0, 0, 0, 0.3)),
							$rtfeldman$elm_css$Css$Transitions$transition(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$Transitions$margin(400)
								])),
							$rtfeldman$elm_css$Css$marginLeft(
							toggle_ ? $rtfeldman$elm_css$Css$rem(1.45) : $rtfeldman$elm_css$Css$rem(0))
						]))
				]));
	});
var $author$project$Toggle$render = function (_v0) {
	var config = _v0.a;
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Toggle$Css$labelContainer]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						A3($author$project$Toggle$Css$toggle, config.isToggled, config.isDisabled, config.isError),
						A2(
						$author$project$Html$Styled$Bdt$attributeIf,
						!config.isDisabled,
						$rtfeldman$elm_css$Html$Styled$Events$onClick(config.toggleMsg))
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Html$Styled$span,
				_List_fromArray(
					[$author$project$Toggle$Css$label]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text(config.label)
					]))
			]));
};
var $author$project$ToolTip$MouseEnter = {$: 'MouseEnter'};
var $author$project$ToolTip$MouseLeave = {$: 'MouseLeave'};
var $rtfeldman$elm_css$Css$bold = {fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'bold'};
var $rtfeldman$elm_css$Css$default = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'default'};
var $author$project$ToolTip$contentWrapper = function (colorConfig) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$color(
				function () {
					switch (colorConfig.$) {
						case 'Green':
							return $rtfeldman$elm_css$Css$hex('3FC380');
						case 'Blue':
							return $rtfeldman$elm_css$Css$hex('59ABE3');
						case 'Red':
							return $rtfeldman$elm_css$Css$hex('dc3545');
						default:
							return $rtfeldman$elm_css$Css$hex('000000');
					}
				}()),
				$rtfeldman$elm_css$Css$fontSize(
				$rtfeldman$elm_css$Css$rem(0.75)),
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$rem(0.2),
				$rtfeldman$elm_css$Css$rem(0.5)),
				$rtfeldman$elm_css$Css$borderRadius(
				$rtfeldman$elm_css$Css$px(3)),
				$rtfeldman$elm_css$Css$fontWeight($rtfeldman$elm_css$Css$bold),
				$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$default),
				$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
				$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
			]));
};
var $rtfeldman$elm_css$Html$Styled$Events$onMouseEnter = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Html$Styled$Events$onMouseLeave = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$ToolTip$renderContent = F2(
	function (colorConfig, content) {
		if (content.$ === 'Icon') {
			var icon_ = content.a;
			return $rtfeldman$elm_css$Html$Styled$fromUnstyled(
				A2($feathericons$elm_feather$FeatherIcons$toHtml, _List_Nil, icon_));
		} else {
			var string = content.a;
			return $rtfeldman$elm_css$Html$Styled$text(string);
		}
	});
var $rtfeldman$elm_css$Css$prop5 = F6(
	function (key, argA, argB, argC, argD, argE) {
		return A2(
			$rtfeldman$elm_css$Css$property,
			key,
			A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					[argA.value, argB.value, argC.value, argD.value, argE.value])));
	});
var $rtfeldman$elm_css$Css$boxShadow5 = $rtfeldman$elm_css$Css$prop5('box-shadow');
var $rtfeldman$elm_css$Css$translateX = function (_v0) {
	var value = _v0.value;
	return {
		transform: $rtfeldman$elm_css$Css$Structure$Compatible,
		value: A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'translateX',
			_List_fromArray(
				[value]))
	};
};
var $author$project$ToolTip$placementPosition = function (placement) {
	switch (placement.$) {
		case 'Right':
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$top(
					$rtfeldman$elm_css$Css$rem(-0.25)),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$pct(100))
				]);
		case 'Top':
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$top(
					$rtfeldman$elm_css$Css$pct(-100)),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$rem(0))
				]);
		case 'Bottom':
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$top(
					$rtfeldman$elm_css$Css$pct(100)),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$rem(0))
				]);
		default:
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$top(
					$rtfeldman$elm_css$Css$rem(-0.25)),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$rem(-0.25)),
					$rtfeldman$elm_css$Css$transform(
					$rtfeldman$elm_css$Css$translateX(
						$rtfeldman$elm_css$Css$pct(-100)))
				]);
	}
};
var $author$project$ToolTip$tooltip = function (placement) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$css(
		A2(
			$elm$core$List$append,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
					A5(
					$rtfeldman$elm_css$Css$boxShadow5,
					$rtfeldman$elm_css$Css$px(0),
					$rtfeldman$elm_css$Css$px(2),
					$rtfeldman$elm_css$Css$px(8),
					$rtfeldman$elm_css$Css$px(0),
					A3($rtfeldman$elm_css$Css$rgb, 110, 110, 110)),
					A2(
					$rtfeldman$elm_css$Css$padding2,
					$rtfeldman$elm_css$Css$rem(0.3),
					$rtfeldman$elm_css$Css$rem(0.6)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(2)),
					$rtfeldman$elm_css$Css$backgroundColor(
					$rtfeldman$elm_css$Css$hex('fff')),
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$default),
					$rtfeldman$elm_css$Css$fontFamilies(
					_List_fromArray(
						['-apple-system', 'system-ui', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'sans-serif'])),
					$rtfeldman$elm_css$Css$fontWeight(
					$rtfeldman$elm_css$Css$int(100)),
					$rtfeldman$elm_css$Css$fontSize(
					$rtfeldman$elm_css$Css$rem(0.75)),
					$rtfeldman$elm_css$Css$color(
					A3($rtfeldman$elm_css$Css$rgb, 90, 90, 90)),
					$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
					$rtfeldman$elm_css$Css$zIndex(
					$rtfeldman$elm_css$Css$int(10))
				]),
			$author$project$ToolTip$placementPosition(placement)));
};
var $author$project$ToolTip$render = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Events$onMouseEnter($author$project$ToolTip$MouseEnter),
				$rtfeldman$elm_css$Html$Styled$Events$onMouseLeave($author$project$ToolTip$MouseLeave),
				$author$project$ToolTip$contentWrapper(viewState.color)
			]),
		_List_fromArray(
			[
				A2($author$project$ToolTip$renderContent, viewState.color, viewState.content),
				A3(
				$author$project$Html$Styled$Bdt$divIf,
				state.isOpen,
				_List_fromArray(
					[
						$author$project$ToolTip$tooltip(viewState.placement)
					]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text(state.tip)
					]))
			]));
};
var $author$project$Grid$Css$col = F2(
	function (cols, sizes) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$author$project$Grid$Css$colSize,
					$elm$core$List$reverse(
						$author$project$Grid$SizeHelpers$orderBySize(sizes))),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$num(1)),
						$rtfeldman$elm_css$Css$paddingLeft(
						$rtfeldman$elm_css$Css$px(15)),
						$rtfeldman$elm_css$Css$paddingRight(
						$rtfeldman$elm_css$Css$px(15)),
						$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
						$author$project$Grid$Css$defaultColSize(cols)
					])));
	});
var $author$project$Grid$renderCol = function (_v0) {
	var colConfig = _v0.a;
	return A3(
		$author$project$Html$Styled$Bdt$divIf,
		!$elm$core$List$isEmpty(colConfig.children),
		_List_fromArray(
			[
				A2($author$project$Grid$Css$col, colConfig.defaultCols, colConfig.sizes)
			]),
		colConfig.children);
};
var $author$project$Grid$Css$row = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$displayFlex,
			$rtfeldman$elm_css$Css$flexWrap($rtfeldman$elm_css$Css$wrap),
			$rtfeldman$elm_css$Css$marginLeft(
			$rtfeldman$elm_css$Css$px(-15)),
			$rtfeldman$elm_css$Css$marginRight(
			$rtfeldman$elm_css$Css$px(-15))
		]));
var $author$project$Grid$row = function (cols) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Grid$Css$row]),
		A2($elm$core$List$map, $author$project$Grid$renderCol, cols));
};
var $author$project$Form$DatePicker$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Time$Bdt$monthNumber = function (month) {
	switch (month.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $elm$core$String$pad = F3(
	function (n, _char, string) {
		var half = (n - $elm$core$String$length(string)) / 2;
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				$elm$core$Basics$ceiling(half),
				$elm$core$String$fromChar(_char)),
			_Utils_ap(
				string,
				A2(
					$elm$core$String$repeat,
					$elm$core$Basics$floor(half),
					$elm$core$String$fromChar(_char))));
	});
var $author$project$Time$Bdt$toDateString = F2(
	function (zone, posix) {
		var year = $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, posix));
		var month = A3(
			$elm$core$String$pad,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				$author$project$Time$Bdt$monthNumber(
					A2($elm$time$Time$toMonth, zone, posix))));
		var day = A3(
			$elm$core$String$pad,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				A2($elm$time$Time$toDay, zone, posix)));
		return A2(
			$elm$core$String$join,
			'/',
			_List_fromArray(
				[day, month, year]));
	});
var $author$project$Time$Bdt$toTimeString = F2(
	function (zone, posix) {
		var second = A3(
			$elm$core$String$pad,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				A2($elm$time$Time$toSecond, zone, posix)));
		var minute = A3(
			$elm$core$String$pad,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				A2($elm$time$Time$toMinute, zone, posix)));
		var hour = A3(
			$elm$core$String$pad,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				A2($elm$time$Time$toHour, zone, posix)));
		return A2(
			$elm$core$String$join,
			':',
			_List_fromArray(
				[hour, minute, second]));
	});
var $author$project$Time$Bdt$toDateTimeString = F2(
	function (zone, posix) {
		return A2($author$project$Time$Bdt$toDateString, zone, posix) + (' ' + A2($author$project$Time$Bdt$toTimeString, zone, posix));
	});
var $author$project$Form$DatePicker$Internal$setIncludeTime = F2(
	function (includeTime, viewState) {
		if (includeTime) {
			return _Utils_update(
				viewState,
				{includeTime: true, toLabel: $author$project$Time$Bdt$toDateTimeString});
		} else {
			return _Utils_update(
				viewState,
				{includeTime: false, toLabel: $author$project$Time$Bdt$toDateString});
		}
	});
var $author$project$Form$DatePicker$setIncludeTime = F2(
	function (includeTime, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$DatePicker$View,
			state,
			A2($author$project$Form$DatePicker$Internal$setIncludeTime, includeTime, viewState));
	});
var $author$project$Form$DatePicker$Internal$setIsClearable = F2(
	function (isClearable, viewState) {
		return _Utils_update(
			viewState,
			{isClearable: isClearable});
	});
var $author$project$Form$DatePicker$setIsClearable = F2(
	function (isClearable, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$DatePicker$View,
			state,
			A2($author$project$Form$DatePicker$Internal$setIsClearable, isClearable, viewState));
	});
var $author$project$Form$MultiSelect$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$MultiSelect$Internal$setIsClearable = F2(
	function (isClearable, viewState) {
		return _Utils_update(
			viewState,
			{isClearable: isClearable});
	});
var $author$project$Form$MultiSelect$setIsClearable = F2(
	function (isClearable, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$MultiSelect$View,
			state,
			A2($author$project$Form$MultiSelect$Internal$setIsClearable, isClearable, viewState));
	});
var $author$project$Form$SearchSelect$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$SearchSelect$Internal$setIsClearable = F2(
	function (isClearable, viewState) {
		return _Utils_update(
			viewState,
			{isClearable: isClearable});
	});
var $author$project$Form$SearchSelect$setIsClearable = F2(
	function (isClearable, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$SearchSelect$View,
			state,
			A2($author$project$Form$SearchSelect$Internal$setIsClearable, isClearable, viewState));
	});
var $author$project$Form$Select$Internal$setIsClearable = F2(
	function (isClearable, viewState) {
		return _Utils_update(
			viewState,
			{isClearable: isClearable});
	});
var $author$project$Form$Select$setIsClearable = F2(
	function (isClearable, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$Select$View,
			state,
			A2($author$project$Form$Select$Internal$setIsClearable, isClearable, viewState));
	});
var $author$project$Form$MultiSelect$Internal$setIsOptionDisabled = F2(
	function (isOptionDisabled, viewState) {
		return _Utils_update(
			viewState,
			{isOptionDisabled: isOptionDisabled});
	});
var $author$project$Form$MultiSelect$setIsOptionDisabled = F2(
	function (isOptionDisabled, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$MultiSelect$View,
			state,
			A2($author$project$Form$MultiSelect$Internal$setIsOptionDisabled, isOptionDisabled, viewState));
	});
var $author$project$Form$Select$Internal$setIsOptionDisabled = F2(
	function (isOptionDisabled, viewState) {
		return _Utils_update(
			viewState,
			{isOptionDisabled: isOptionDisabled});
	});
var $author$project$Form$Select$setIsOptionDisabled = F2(
	function (isOptionDisabled, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$Select$View,
			state,
			A2($author$project$Form$Select$Internal$setIsOptionDisabled, isOptionDisabled, viewState));
	});
var $author$project$Form$DatePicker$Internal$setMaxPosix = F2(
	function (posix, viewState) {
		return _Utils_update(
			viewState,
			{maxPosix: posix});
	});
var $author$project$Form$DatePicker$setMaxPosix = F2(
	function (posix, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$DatePicker$View,
			state,
			A2($author$project$Form$DatePicker$Internal$setMaxPosix, posix, viewState));
	});
var $author$project$Form$DatePicker$Internal$setMinPosix = F2(
	function (posix, viewState) {
		return _Utils_update(
			viewState,
			{minPosix: posix});
	});
var $author$project$Form$DatePicker$setMinPosix = F2(
	function (posix, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$DatePicker$View,
			state,
			A2($author$project$Form$DatePicker$Internal$setMinPosix, posix, viewState));
	});
var $author$project$Form$TextArea$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$TextArea$Internal$setPlaceholder = F2(
	function (placeholder, viewState) {
		return _Utils_update(
			viewState,
			{placeholder: placeholder});
	});
var $author$project$Form$TextArea$setPlaceholder = F2(
	function (placeholder, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$TextArea$View,
			state,
			A2($author$project$Form$TextArea$Internal$setPlaceholder, placeholder, viewState));
	});
var $author$project$Form$TextArea$Internal$setShouldWrap = F2(
	function (shouldWrap, viewState) {
		return _Utils_update(
			viewState,
			{shouldWrap: shouldWrap});
	});
var $author$project$Form$TextArea$setShouldWrap = F2(
	function (shouldWrap, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$Form$TextArea$View,
			state,
			A2($author$project$Form$TextArea$Internal$setShouldWrap, shouldWrap, viewState));
	});
var $author$project$Modal$setSize = F2(
	function (size, _v0) {
		var viewConfig = _v0.a;
		return $author$project$Modal$Config(
			_Utils_update(
				viewConfig,
				{size: size}));
	});
var $author$project$Button$Size$Small = {$: 'Small'};
var $author$project$Button$small = function (_v0) {
	var config = _v0.a;
	return $author$project$Button$Button(
		_Utils_update(
			config,
			{size: $author$project$Button$Size$Small}));
};
var $rtfeldman$elm_css$VirtualDom$Styled$style = F2(
	function (key, val) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$style, key, val),
			_List_Nil,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$style = $rtfeldman$elm_css$VirtualDom$Styled$style;
var $author$project$Content$Text = function (a) {
	return {$: 'Text', a: a};
};
var $author$project$Button$text = F2(
	function (text_, _v0) {
		var config = _v0.a;
		return $author$project$Button$Button(
			_Utils_update(
				config,
				{
					content: $author$project$Content$Text(text_)
				}));
	});
var $author$project$ToolTip$text = F2(
	function (contents, _v0) {
		var state = _v0.a;
		var viewState = _v0.b;
		return A2(
			$author$project$ToolTip$View,
			state,
			_Utils_update(
				viewState,
				{
					content: $author$project$Content$Text(contents)
				}));
	});
var $author$project$ToolTip$Top = {$: 'Top'};
var $author$project$ToolTip$top = function (_v0) {
	var state = _v0.a;
	var viewState = _v0.b;
	return A2(
		$author$project$ToolTip$View,
		state,
		_Utils_update(
			viewState,
			{placement: $author$project$ToolTip$Top}));
};
var $author$project$Button$Size$Normal = {$: 'Normal'};
var $author$project$Button$initialConfig = {
	color: A3($rtfeldman$elm_css$Css$rgb, 102, 102, 102),
	content: $author$project$Content$Text(''),
	href: $elm$core$Maybe$Nothing,
	isDisabled: false,
	isLoading: false,
	isShown: true,
	onClick: $elm$core$Maybe$Nothing,
	size: $author$project$Button$Size$Normal
};
var $author$project$Button$view = $author$project$Button$Button($author$project$Button$initialConfig);
var $author$project$Card$initialViewConfig = function (isShown) {
	return {cardBlocks: _List_Nil, footerButtons: _List_Nil, headerButtons: _List_Nil, headerTitle: '', isShown: isShown};
};
var $author$project$Card$view = $author$project$Card$Config(
	$author$project$Card$initialViewConfig(true));
var $author$project$Form$DatePicker$Internal$initialViewState = {defaultLabel: '-- Nothing Selected --', id: $elm$core$Maybe$Nothing, includeTime: false, isClearable: false, isError: false, isInput: true, isLocked: false, maxPosix: $elm$core$Maybe$Nothing, minPosix: $elm$core$Maybe$Nothing, toLabel: $author$project$Time$Bdt$toDateString};
var $author$project$Form$DatePicker$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$Form$DatePicker$View, state, $author$project$Form$DatePicker$Internal$initialViewState);
};
var $author$project$Form$FloatInput$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$FloatInput$Internal$initialViewState = {id: $elm$core$Maybe$Nothing, isError: false, isLocked: false, maxLength: $elm$core$Maybe$Nothing, placeholder: ''};
var $author$project$Form$FloatInput$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$Form$FloatInput$View, state, $author$project$Form$FloatInput$Internal$initialViewState);
};
var $author$project$Form$Input$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$Input$Internal$Text = {$: 'Text'};
var $author$project$Form$Input$Internal$initialViewState = {id: $elm$core$Maybe$Nothing, inputType: $author$project$Form$Input$Internal$Text, isError: false, isLocked: false, maxLength: $elm$core$Maybe$Nothing, placeholder: $elm$core$Maybe$Nothing};
var $author$project$Form$Input$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$Form$Input$View, state, $author$project$Form$Input$Internal$initialViewState);
};
var $author$project$Form$IntInput$View = F2(
	function (a, b) {
		return {$: 'View', a: a, b: b};
	});
var $author$project$Form$IntInput$Internal$initialViewState = {id: $elm$core$Maybe$Nothing, isError: false, isLocked: false, maxLength: $elm$core$Maybe$Nothing, placeholder: $elm$core$Maybe$Nothing};
var $author$project$Form$IntInput$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$Form$IntInput$View, state, $author$project$Form$IntInput$Internal$initialViewState);
};
var $author$project$Form$Label$initialConfig = function (text) {
	return {mandatory: false, text: text};
};
var $author$project$Form$Label$view = A2($elm$core$Basics$composeR, $author$project$Form$Label$initialConfig, $author$project$Form$Label$Label);
var $author$project$Form$MultiSelect$Internal$initialViewState = function (toLabel) {
	return {
		defaultLabel: '-- Nothing Selected --',
		id: $elm$core$Maybe$Nothing,
		isClearable: false,
		isError: false,
		isLocked: false,
		isOptionDisabled: $elm$core$Basics$always(false),
		toLabel: toLabel
	};
};
var $author$project$Form$MultiSelect$view = F2(
	function (toLabel, _v0) {
		var state = _v0.a;
		return A2(
			$author$project$Form$MultiSelect$View,
			state,
			$author$project$Form$MultiSelect$Internal$initialViewState(toLabel));
	});
var $author$project$Form$SearchSelect$Internal$initialViewState = function (toLabel) {
	return {
		defaultLabel: '-- Nothing Selected --',
		id: $elm$core$Maybe$Nothing,
		inputMinimum: 2,
		isClearable: false,
		isError: false,
		isLocked: false,
		isOptionDisabled: $elm$core$Basics$always(false),
		toLabel: toLabel
	};
};
var $author$project$Form$SearchSelect$view = F2(
	function (toLabel, _v0) {
		var state = _v0.a;
		return A2(
			$author$project$Form$SearchSelect$View,
			state,
			$author$project$Form$SearchSelect$Internal$initialViewState(toLabel));
	});
var $author$project$Form$TextArea$Internal$initialViewState = {id: $elm$core$Maybe$Nothing, isError: false, isLocked: false, maxLength: $elm$core$Maybe$Nothing, placeholder: '', shouldWrap: false};
var $author$project$Form$TextArea$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$Form$TextArea$View, state, $author$project$Form$TextArea$Internal$initialViewState);
};
var $author$project$Toggle$initialConfig = F2(
	function (toggled, toggleMsg) {
		return {isDisabled: false, isError: false, isToggled: toggled, label: '', toggleMsg: toggleMsg};
	});
var $author$project$Toggle$view = F2(
	function (toggled, msg) {
		return $author$project$Toggle$Toggle(
			A2($author$project$Toggle$initialConfig, toggled, msg));
	});
var $author$project$ToolTip$Default = {$: 'Default'};
var $author$project$ToolTip$Right = {$: 'Right'};
var $author$project$ToolTip$initialViewState = {
	color: $author$project$ToolTip$Default,
	content: $author$project$Content$Text(''),
	placement: $author$project$ToolTip$Right
};
var $author$project$ToolTip$view = function (_v0) {
	var state = _v0.a;
	return A2($author$project$ToolTip$View, state, $author$project$ToolTip$initialViewState);
};
var $author$project$Modal$initialViewConfig = F2(
	function (isOpen, msg) {
		return {closeMsg: msg, footerButtons: _List_Nil, headerButtons: _List_Nil, headerTitle: '', isOpen: isOpen, modalBlocks: _List_Nil, size: $author$project$Grid$Size$Md};
	});
var $author$project$Modal$viewIf = function (isOpen) {
	return A2(
		$elm$core$Basics$composeL,
		$author$project$Modal$Config,
		$author$project$Modal$initialViewConfig(isOpen));
};
var $author$project$Index$View$view = function (model) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$author$project$Grid$container,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$h1,
						_List_Nil,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$text('Form Elements')
							])),
						$author$project$Grid$row(
						_List_fromArray(
							[
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Simple text Input')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$InputMsg,
																$author$project$Form$Input$render(
																	$author$project$Form$Input$view(model.input))),
																A2(
																$rtfeldman$elm_css$Html$Styled$div,
																_List_Nil,
																_List_fromArray(
																	[
																		$rtfeldman$elm_css$Html$Styled$text(
																		'Value: ' + $author$project$Form$Input$getValue(model.input))
																	]))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Int Input, accepting only ints!')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$IntInputMsg,
																$author$project$Form$IntInput$render(
																	$author$project$Form$IntInput$view(model.intInput))),
																A2(
																$author$project$Html$Styled$Bdt$maybeView,
																$author$project$Form$IntInput$getValue(model.intInput),
																function (_int) {
																	return $rtfeldman$elm_css$Html$Styled$text(
																		'Value: ' + $elm$core$String$fromInt(_int));
																})
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Float Input, accepting only floats!')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$FloatInputMsg,
																$author$project$Form$FloatInput$render(
																	$author$project$Form$FloatInput$view(model.floatInput))),
																A2(
																$author$project$Html$Styled$Bdt$maybeView,
																$author$project$Form$FloatInput$getValue(model.floatInput),
																function (_float) {
																	return $rtfeldman$elm_css$Html$Styled$text(
																		'Value: ' + $elm$core$String$fromFloat(_float));
																})
															]))
													]),
												A3($author$project$Card$header, 'Example Inputs', _List_Nil, $author$project$Card$view))))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Simple Select')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$SelectMsg,
																$author$project$Form$Select$render(
																	A2(
																		$author$project$Form$Select$setIsOptionDisabled,
																		$elm$core$Basics$eq($author$project$Records$MusicGenre$Pop),
																		A2(
																			$author$project$Form$Select$setIsClearable,
																			true,
																			A2($author$project$Form$Select$view, $author$project$Records$MusicGenre$toLabel, model.select)))))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Multi Select')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$MultiSelectMsg,
																$author$project$Form$MultiSelect$render(
																	A2(
																		$author$project$Form$MultiSelect$setIsOptionDisabled,
																		$elm$core$Basics$eq($author$project$Records$MusicGenre$Pop),
																		A2(
																			$author$project$Form$MultiSelect$setIsClearable,
																			true,
																			A2($author$project$Form$MultiSelect$view, $author$project$Records$MusicGenre$toLabel, model.multiSelect)))))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Search Select')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$SearchSelectMsg,
																$author$project$Form$SearchSelect$render(
																	A2(
																		$author$project$Form$SearchSelect$setIsClearable,
																		true,
																		A2(
																			$author$project$Form$SearchSelect$view,
																			function ($) {
																				return $.name;
																			},
																			model.searchSelect)))),
																A2(
																$author$project$Html$Styled$Bdt$maybeView,
																$author$project$Form$SearchSelect$getSelectedOption(model.searchSelect),
																function (country) {
																	return $rtfeldman$elm_css$Html$Styled$text('Value: ' + country.name);
																})
															]))
													]),
												A3($author$project$Card$header, 'Example Selects', _List_Nil, $author$project$Card$view))))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Simple Date Picker (set to Brisbane Time)')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$DatePickerMsg,
																$author$project$Form$DatePicker$render(
																	$author$project$Form$DatePicker$view(model.datePicker))),
																A2(
																$author$project$Html$Styled$Bdt$maybeView,
																$author$project$Form$DatePicker$getSelectedPosix(model.datePicker),
																function (posix) {
																	return $rtfeldman$elm_css$Html$Styled$text(
																		$elm$core$String$fromInt(
																			$elm$time$Time$posixToMillis(posix)));
																})
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Date Picker with min and max dates')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$DatePicker2Msg,
																$author$project$Form$DatePicker$render(
																	A2(
																		$author$project$Form$DatePicker$setMaxPosix,
																		$elm$core$Maybe$Just(
																			$elm$time$Time$millisToPosix(1617235200000)),
																		A2(
																			$author$project$Form$DatePicker$setMinPosix,
																			$elm$core$Maybe$Just(
																				$elm$time$Time$millisToPosix(1522108800000)),
																			A2(
																				$author$project$Form$DatePicker$setIsClearable,
																				true,
																				$author$project$Form$DatePicker$view(model.datePicker2))))))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Date Time Picker!')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$DatePicker3Msg,
																$author$project$Form$DatePicker$render(
																	A2(
																		$author$project$Form$DatePicker$setIncludeTime,
																		true,
																		A2(
																			$author$project$Form$DatePicker$setIsClearable,
																			true,
																			$author$project$Form$DatePicker$view(model.datePicker3)))))
															]))
													]),
												A3($author$project$Card$header, 'Date Pickers!', _List_Nil, $author$project$Card$view)))),
										$author$project$Card$render(
										A2(
											$author$project$Card$body,
											_List_fromArray(
												[
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Six,
													_List_fromArray(
														[
															A2(
															$rtfeldman$elm_css$Html$Styled$div,
															_List_fromArray(
																[
																	A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'flex'),
																	A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'flex-direction', 'column'),
																	A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'height', '100%')
																]),
															_List_fromArray(
																[
																	A2(
																	$rtfeldman$elm_css$Html$Styled$map,
																	$author$project$Index$Msg$TextAreaMsg,
																	$author$project$Form$TextArea$render(
																		A2(
																			$author$project$Form$TextArea$setPlaceholder,
																			'HELLO I AM A PLACEHOLDER',
																			A2(
																				$author$project$Form$TextArea$setShouldWrap,
																				true,
																				$author$project$Form$TextArea$view(model.textArea)))))
																]))
														])),
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Six,
													_List_fromArray(
														[
															$rtfeldman$elm_css$Html$Styled$text('Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.')
														]))
												]),
											A3($author$project$Card$header, 'Text Area!', _List_Nil, $author$project$Card$view)))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Button$render(
																A2(
																	$author$project$Button$onClick,
																	$author$project$Index$Msg$AddGreenToaster,
																	A2(
																		$author$project$Button$green,
																		true,
																		A2($author$project$Button$text, 'Add Green Toaster', $author$project$Button$view)))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$onClick,
																	$author$project$Index$Msg$AddRedToaster,
																	A2(
																		$author$project$Button$red,
																		true,
																		A2($author$project$Button$text, 'Add Red Toaster', $author$project$Button$view))))
															]))
													]),
												A3($author$project$Card$header, 'Toasters', _List_Nil, $author$project$Card$view)))),
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Button$render(
																A2(
																	$author$project$Button$onClick,
																	$author$project$Index$Msg$ToggleSmModal,
																	A2($author$project$Button$text, 'Open Sm Modal', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$onClick,
																	$author$project$Index$Msg$ToggleLgModal,
																	A2($author$project$Button$text, 'Open Lg Modal', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$onClick,
																	$author$project$Index$Msg$ToggleResizeModal,
																	A2($author$project$Button$text, 'Open Resize Modal', $author$project$Button$view))),
																$author$project$Modal$render(
																A2(
																	$author$project$Modal$footer,
																	_List_Nil,
																	A2(
																		$author$project$Modal$body,
																		_List_fromArray(
																			[
																				A2(
																				$author$project$Modal$block,
																				$author$project$Grid$Size$Twelve,
																				_List_fromArray(
																					[
																						$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																					]))
																			]),
																		A3(
																			$author$project$Modal$header,
																			'Hi I\'m Sm Modal',
																			_List_Nil,
																			A2(
																				$author$project$Modal$setSize,
																				$author$project$Grid$Size$Sm,
																				A2($author$project$Modal$viewIf, model.modalSmOpen, $author$project$Index$Msg$ToggleSmModal)))))),
																$author$project$Modal$render(
																A2(
																	$author$project$Modal$footer,
																	_List_fromArray(
																		[
																			A2(
																			$author$project$Button$red,
																			true,
																			A2(
																				$author$project$Button$onClick,
																				$author$project$Index$Msg$ToggleLgModal,
																				A2($author$project$Button$text, 'Cancel', $author$project$Button$view))),
																			A2(
																			$author$project$Button$green,
																			true,
																			A2($author$project$Button$text, 'Save', $author$project$Button$view))
																		]),
																	A2(
																		$author$project$Modal$body,
																		_List_fromArray(
																			[
																				A2(
																				$author$project$Modal$block,
																				$author$project$Grid$Size$Twelve,
																				_List_fromArray(
																					[
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							])),
																						A2(
																						$rtfeldman$elm_css$Html$Styled$p,
																						_List_Nil,
																						_List_fromArray(
																							[
																								$rtfeldman$elm_css$Html$Styled$text('Modal Content')
																							]))
																					]))
																			]),
																		A3(
																			$author$project$Modal$header,
																			'Hi I\'m Lg Modal',
																			_List_Nil,
																			A2(
																				$author$project$Modal$setSize,
																				$author$project$Grid$Size$Lg,
																				A2($author$project$Modal$viewIf, model.modalLgOpen, $author$project$Index$Msg$ToggleLgModal)))))),
																$author$project$Modal$render(
																A2(
																	$author$project$Modal$body,
																	_List_fromArray(
																		[
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Learning')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Courses')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/units'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Units')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/tasks'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Tasks')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/course-schemes'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Course Schemes')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Users')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Trainer Roles')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/units'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Classes')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Skills Profiler')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Activity Definitions')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/units'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Descriptions')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Apprenticeship Providers')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Apprenticeship Providers')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/units'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Field Officers')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Finance')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Invoices')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Avetmiss')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/courses'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Funding Schemes')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Schools & Vetis')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Schools')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Vetis Management')
																						]))
																				])),
																			A3(
																			$author$project$Modal$blockSizes,
																			$author$project$Grid$Size$Twelve,
																			_List_fromArray(
																				[
																					_Utils_Tuple2($author$project$Grid$Size$Xs, $author$project$Grid$Size$Six),
																					_Utils_Tuple2($author$project$Grid$Size$Sm, $author$project$Grid$Size$Four),
																					_Utils_Tuple2($author$project$Grid$Size$Xl, $author$project$Grid$Size$Two)
																				]),
																			_List_fromArray(
																				[
																					A2(
																					$rtfeldman$elm_css$Html$Styled$h1,
																					_List_Nil,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Other')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Reports')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Assessment Questions')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Course Descriptors')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Feedback')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Referral Sources')
																						])),
																					A2(
																					$rtfeldman$elm_css$Html$Styled$a,
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$Attributes$href('/admin/schools'),
																							A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'display', 'block')
																						]),
																					_List_fromArray(
																						[
																							$rtfeldman$elm_css$Html$Styled$text('Student Course Archival Status')
																						]))
																				]))
																		]),
																	A2(
																		$author$project$Modal$setSize,
																		$author$project$Grid$Size$Xl,
																		A2($author$project$Modal$viewIf, model.modalResizeOpen, $author$project$Index$Msg$ToggleResizeModal))))
															]))
													]),
												A3($author$project$Card$header, 'Modal', _List_Nil, $author$project$Card$view)))),
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_Nil,
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Grid$row(
																_List_fromArray(
																	[
																		A2(
																		$author$project$Grid$col,
																		$author$project$Grid$Size$Six,
																		_List_fromArray(
																			[
																				$author$project$Toggle$render(
																				A2($author$project$Toggle$view, model.toggle1, $author$project$Index$Msg$Toggle1)),
																				$author$project$Toggle$render(
																				A2(
																					$author$project$Toggle$label,
																					'Toggle Me',
																					A2($author$project$Toggle$view, model.toggle2, $author$project$Index$Msg$Toggle2))),
																				$author$project$Toggle$render(
																				A2(
																					$author$project$Toggle$label,
																					'Disabled',
																					A2(
																						$author$project$Toggle$isDisabled,
																						true,
																						A2($author$project$Toggle$view, model.toggle3, $author$project$Index$Msg$DisabledToggle))))
																			]))
																	]))
															]))
													]),
												A3($author$project$Card$header, 'Toggle', _List_Nil, $author$project$Card$view))))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_fromArray(
												[
													A2($author$project$Button$text, 'Footer Button', $author$project$Button$view)
												]),
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Twelve,
														_List_fromArray(
															[
																$author$project$Button$render(
																A2($author$project$Button$text, 'Normal', $author$project$Button$view)),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isDisabled,
																	true,
																	A2($author$project$Button$text, 'Disabled :(', $author$project$Button$view))),
																$author$project$Button$render(
																$author$project$Button$small(
																	A2($author$project$Button$text, 'Small!', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$green,
																	true,
																	A2($author$project$Button$text, 'Green!', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$red,
																	true,
																	A2($author$project$Button$text, 'Red!', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isLoading,
																	true,
																	A2($author$project$Button$text, 'Loading!', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isLoading,
																	true,
																	A2(
																		$author$project$Button$green,
																		true,
																		$author$project$Button$small(
																			A2($author$project$Button$text, 'Small, green, loading!', $author$project$Button$view))))),
																$author$project$Button$render(
																A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view)),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isDisabled,
																	true,
																	A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view))),
																$author$project$Button$render(
																$author$project$Button$small(
																	A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$green,
																	true,
																	A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$red,
																	true,
																	A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isLoading,
																	true,
																	A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$calendar, $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$text,
																	'Google It',
																	A2($author$project$Button$href, 'http://google.com', $author$project$Button$view))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$isDisabled,
																	true,
																	A2(
																		$author$project$Button$text,
																		'Google It',
																		A2($author$project$Button$href, 'http://google.com', $author$project$Button$view)))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$green,
																	model.isGridButtonGreen,
																	A2(
																		$author$project$Button$onClick,
																		$author$project$Index$Msg$SetGridButtonGreen(true),
																		A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$grid, $author$project$Button$view)))),
																$author$project$Button$render(
																A2(
																	$author$project$Button$green,
																	!model.isGridButtonGreen,
																	A2(
																		$author$project$Button$onClick,
																		$author$project$Index$Msg$SetGridButtonGreen(false),
																		A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$list, $author$project$Button$view))))
															]))
													]),
												A3(
													$author$project$Card$header,
													'Example Buttons',
													_List_fromArray(
														[
															A2($author$project$Button$text, 'Header Button', $author$project$Button$view),
															A2($author$project$Button$text, 'Another Button', $author$project$Button$view)
														]),
													$author$project$Card$view))))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$body,
											_List_fromArray(
												[
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Three,
													_List_fromArray(
														[
															A2(
															$rtfeldman$elm_css$Html$Styled$map,
															$author$project$Index$Msg$ToolTip1Msg,
															$author$project$ToolTip$render(
																A2(
																	$author$project$ToolTip$text,
																	'ToolTip1',
																	$author$project$ToolTip$view(model.toolTip1))))
														])),
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Three,
													_List_fromArray(
														[
															A2(
															$rtfeldman$elm_css$Html$Styled$map,
															$author$project$Index$Msg$ToolTip2Msg,
															$author$project$ToolTip$render(
																$author$project$ToolTip$green(
																	$author$project$ToolTip$bottom(
																		A2(
																			$author$project$ToolTip$icon,
																			$feathericons$elm_feather$FeatherIcons$compass,
																			$author$project$ToolTip$view(model.toolTip2))))))
														])),
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Three,
													_List_fromArray(
														[
															A2(
															$rtfeldman$elm_css$Html$Styled$map,
															$author$project$Index$Msg$ToolTip3Msg,
															$author$project$ToolTip$render(
																$author$project$ToolTip$blue(
																	$author$project$ToolTip$left(
																		A2(
																			$author$project$ToolTip$text,
																			'help',
																			$author$project$ToolTip$view(model.toolTip3))))))
														])),
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Three,
													_List_fromArray(
														[
															A2(
															$rtfeldman$elm_css$Html$Styled$map,
															$author$project$Index$Msg$ToolTip4Msg,
															$author$project$ToolTip$render(
																$author$project$ToolTip$red(
																	$author$project$ToolTip$top(
																		A2(
																			$author$project$ToolTip$icon,
																			$feathericons$elm_feather$FeatherIcons$calendar,
																			$author$project$ToolTip$view(model.toolTip4))))))
														]))
												]),
											A3($author$project$Card$header, 'Example ToolTips', _List_Nil, $author$project$Card$view)))
									])),
								A3(
								$author$project$Grid$colSizes,
								$author$project$Grid$Size$Twelve,
								_List_fromArray(
									[
										_Utils_Tuple2($author$project$Grid$Size$Lg, $author$project$Grid$Size$Six)
									]),
								_List_fromArray(
									[
										$author$project$Card$render(
										A2(
											$author$project$Card$footer,
											_List_fromArray(
												[
													A2(
													$author$project$Button$text,
													'cancel',
													A2($author$project$Button$red, true, $author$project$Button$view)),
													A2(
													$author$project$Button$text,
													'save',
													A2($author$project$Button$green, true, $author$project$Button$view))
												]),
											A2(
												$author$project$Card$body,
												_List_fromArray(
													[
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Six,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																A2(
																	$author$project$Form$Label$mandatory,
																	true,
																	$author$project$Form$Label$view('Name'))),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$UpdateName,
																$author$project$Form$Input$render(
																	$author$project$Form$Input$view(model.name)))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Six,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																A2(
																	$author$project$Form$Label$mandatory,
																	true,
																	$author$project$Form$Label$view('Start Date'))),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$UpdateStartDate,
																$author$project$Form$DatePicker$render(
																	$author$project$Form$DatePicker$view(model.startDate)))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Six,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																A2(
																	$author$project$Form$Label$mandatory,
																	true,
																	$author$project$Form$Label$view('Email'))),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$UpdateEmail,
																$author$project$Form$Input$render(
																	$author$project$Form$Input$view(model.email)))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Six,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																A2(
																	$author$project$Form$Label$mandatory,
																	true,
																	$author$project$Form$Label$view('Country of Birth'))),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$UpdateCountryOfBirth,
																$author$project$Form$SearchSelect$render(
																	A2(
																		$author$project$Form$SearchSelect$view,
																		function ($) {
																			return $.name;
																		},
																		model.countryOfBirth)))
															])),
														A2(
														$author$project$Card$block,
														$author$project$Grid$Size$Six,
														_List_fromArray(
															[
																$author$project$Form$Label$render(
																$author$project$Form$Label$view('Preferred Music Genre')),
																A2(
																$rtfeldman$elm_css$Html$Styled$map,
																$author$project$Index$Msg$UpdatePreferredGenre,
																$author$project$Form$Select$render(
																	A2($author$project$Form$Select$view, $author$project$Records$MusicGenre$toLabel, model.preferredGenre)))
															]))
													]),
												A3(
													$author$project$Card$header,
													'User Details',
													_List_fromArray(
														[
															A2($author$project$Button$icon, $feathericons$elm_feather$FeatherIcons$edit, $author$project$Button$view)
														]),
													$author$project$Card$view)))),
										$author$project$Card$render(
										A2(
											$author$project$Card$body,
											_List_fromArray(
												[
													A2(
													$author$project$Card$block,
													$author$project$Grid$Size$Six,
													_List_fromArray(
														[
															$author$project$Form$Label$render(
															$author$project$Form$Label$view('Preferred Music Genre')),
															A2(
															$rtfeldman$elm_css$Html$Styled$map,
															$author$project$Index$Msg$UpdateMaybeBLockSelect,
															$author$project$Form$Select$render(
																A2(
																	$author$project$Form$Select$setIsClearable,
																	true,
																	A2($author$project$Form$Select$view, $author$project$Records$MusicGenre$toLabel, model.maybeBlockSelect))))
														])),
													A3(
													$author$project$Card$maybeBlock,
													$author$project$Grid$Size$Six,
													$author$project$Form$Select$getSelectedOption(model.maybeBlockSelect),
													$author$project$Index$View$maybeBlockView)
												]),
											A3($author$project$Card$header, 'Conditional Blocks', _List_Nil, $author$project$Card$view)))
									]))
							]))
					]))
			]));
};
var $author$project$View$page = function (model) {
	var _v0 = model.page;
	switch (_v0.$) {
		case 'NotFound':
			return A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_Nil,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('404 D:')
					]));
		case 'Index':
			var indexModel = _v0.a;
			return A2(
				$rtfeldman$elm_css$Html$Styled$map,
				$author$project$Msg$IndexMsg,
				$author$project$Index$View$view(indexModel));
		case 'Admin':
			var adminPage = _v0.a;
			return A2(
				$rtfeldman$elm_css$Html$Styled$map,
				$author$project$Msg$AdminMsg,
				$author$project$Admin$View$view(adminPage));
		case 'Trainer':
			var trainerPage = _v0.a;
			return _Debug_todo(
				'View',
				{
					start: {line: 90, column: 13},
					end: {line: 90, column: 23}
				})('trainer view');
		default:
			return A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_Nil,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text('test')
					]));
	}
};
var $author$project$Toasters$Css$absoluteContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$right(
			$rtfeldman$elm_css$Css$px(320)),
			$rtfeldman$elm_css$Css$top(
			$rtfeldman$elm_css$Css$px(20))
		]));
var $author$project$Toasters$Css$fixedContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
			$rtfeldman$elm_css$Css$zIndex(
			$rtfeldman$elm_css$Css$int(101))
		]));
var $author$project$Toasters$Internal$Close = function (a) {
	return {$: 'Close', a: a};
};
var $rtfeldman$elm_css$Css$borderBottomLeftRadius = $rtfeldman$elm_css$Css$prop1('border-bottom-left-radius');
var $author$project$Toasters$Css$timerColor = function (toasterColor) {
	if (toasterColor.$ === 'Green') {
		return $rtfeldman$elm_css$Css$hex('387238');
	} else {
		return $rtfeldman$elm_css$Css$hex('842520');
	}
};
var $author$project$Toasters$Css$timerBar = F2(
	function (toasterColor, ticks) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor(
					$author$project$Toasters$Css$timerColor(toasterColor)),
					$rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$pct(101 - ticks)),
					$rtfeldman$elm_css$Css$height(
					$rtfeldman$elm_css$Css$px(4)),
					$rtfeldman$elm_css$Css$borderBottomLeftRadius(
					$rtfeldman$elm_css$Css$px(2))
				]));
	});
var $rtfeldman$elm_css$Css$Transitions$Opacity = {$: 'Opacity'};
var $rtfeldman$elm_css$Css$Transitions$opacity = $rtfeldman$elm_css$Css$Transitions$durationTransition($rtfeldman$elm_css$Css$Transitions$Opacity);
var $author$project$Toasters$Css$toasterBackgroundColor = function (toasterColor) {
	if (toasterColor.$ === 'Green') {
		return $rtfeldman$elm_css$Css$hex('51a351');
	} else {
		return $rtfeldman$elm_css$Css$hex('bd362f');
	}
};
var $author$project$Toasters$Css$toaster = F2(
	function (toasterColor, ticks) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor(
					$author$project$Toasters$Css$toasterBackgroundColor(toasterColor)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(2)),
					$rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$px(300)),
					$rtfeldman$elm_css$Css$marginBottom(
					$rtfeldman$elm_css$Css$px(10)),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$opacity(
					((ticks < 3) || (ticks > 97)) ? $rtfeldman$elm_css$Css$int(0) : $rtfeldman$elm_css$Css$int(1)),
					$rtfeldman$elm_css$Css$Transitions$transition(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$Transitions$opacity(
							(ticks < 3) ? 0 : 600)
						])),
					A4(
					$rtfeldman$elm_css$Css$boxShadow4,
					$rtfeldman$elm_css$Css$px(0),
					$rtfeldman$elm_css$Css$px(8),
					$rtfeldman$elm_css$Css$px(16),
					A4($rtfeldman$elm_css$Css$rgba, 0, 0, 0, 0.3))
				]));
	});
var $author$project$Toasters$Css$toasterMessage = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$color(
			$rtfeldman$elm_css$Css$hex('ffffff')),
			A2(
			$rtfeldman$elm_css$Css$padding2,
			$rtfeldman$elm_css$Css$px(15),
			$rtfeldman$elm_css$Css$px(25)),
			$rtfeldman$elm_css$Css$fontFamilies(
			_List_fromArray(
				['Arial']))
		]));
var $author$project$Toasters$Internal$item = function (toaster) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				A2($author$project$Toasters$Css$toaster, toaster.color, toaster.ticks),
				$rtfeldman$elm_css$Html$Styled$Events$onClick(
				$author$project$Toasters$Internal$Close(toaster))
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[$author$project$Toasters$Css$toasterMessage]),
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text(toaster.message)
					])),
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[
						A2($author$project$Toasters$Css$timerBar, toaster.color, toaster.ticks)
					]),
				_List_Nil)
			]));
};
var $author$project$Toasters$Css$relativeContainer = $rtfeldman$elm_css$Html$Styled$Attributes$css(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
		]));
var $author$project$Toasters$Internal$view = function (toasters) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[$author$project$Toasters$Css$relativeContainer]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$div,
				_List_fromArray(
					[$author$project$Toasters$Css$absoluteContainer]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[$author$project$Toasters$Css$fixedContainer]),
						A2($elm$core$List$map, $author$project$Toasters$Internal$item, toasters))
					]))
			]));
};
var $author$project$Toasters$view = function (_v0) {
	var toasters = _v0.a;
	return A2(
		$rtfeldman$elm_css$Html$Styled$map,
		$author$project$Toasters$InternalMsg,
		$author$project$Toasters$Internal$view(toasters));
};
var $author$project$View$body = function (model) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$map,
				$author$project$Msg$ToastersMsg,
				$author$project$Toasters$view(model.toasters)),
				$author$project$View$menu(model.isAdminMenuOpen),
				$author$project$View$page(model)
			]));
};
var $rtfeldman$elm_css$Html$Styled$toUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled;
var $author$project$View$view = function (model) {
	return {
		body: $elm$core$List$singleton(
			$rtfeldman$elm_css$Html$Styled$toUnstyled(
				$author$project$View$body(model))),
		title: 'Title'
	};
};
var $author$project$Main$main = $elm$browser$Browser$application(
	{
		init: $elm$core$Basics$always($author$project$Main$init),
		onUrlChange: $author$project$Msg$UrlChange,
		onUrlRequest: $author$project$Msg$Navigate,
		subscriptions: $author$project$Subscriptions$subscriptions,
		update: $author$project$Update$update,
		view: $author$project$View$view
	});
_Platform_export({'Main':{'init':$author$project$Main$main(
	$elm$json$Json$Decode$succeed(_Utils_Tuple0))({"versions":{"elm":"0.19.1"},"types":{"message":"Msg.Msg","aliases":{"Url.Url":{"args":[],"type":"{ protocol : Url.Protocol, host : String.String, port_ : Maybe.Maybe Basics.Int, path : String.String, query : Maybe.Maybe String.String, fragment : Maybe.Maybe String.String }"},"Records.Country.Country":{"args":[],"type":"{ name : String.String, altSpellings : List.List String.String, capital : String.String, region : String.String, population : Basics.Int }"},"Form.DatePicker.Msg":{"args":[],"type":"Form.DatePicker.Internal.Msg"},"Form.FloatInput.Msg":{"args":[],"type":"Form.FloatInput.Internal.Msg"},"Form.Input.Msg":{"args":[],"type":"Form.Input.Internal.Msg"},"Form.IntInput.Msg":{"args":[],"type":"Form.IntInput.Internal.Msg"},"Form.MultiSelect.Msg":{"args":["option"],"type":"Form.MultiSelect.Internal.Msg option"},"Form.SearchSelect.Msg":{"args":["option"],"type":"Form.SearchSelect.Internal.Msg option"},"Form.Select.Msg":{"args":["option"],"type":"Form.Select.Internal.Msg option"},"Form.TextArea.Msg":{"args":[],"type":"Form.TextArea.Internal.Msg"},"Form.DatePicker.Internal.IncludeTime":{"args":[],"type":"Basics.Bool"},"Form.DatePicker.Internal.MaxPosix":{"args":[],"type":"Maybe.Maybe Time.Posix"},"Form.DatePicker.Internal.MinPosix":{"args":[],"type":"Maybe.Maybe Time.Posix"},"Toasters.Internal.Toaster":{"args":[],"type":"{ color : Toasters.Color.Color, message : String.String, ticks : Basics.Int }"},"Http.Response":{"args":["body"],"type":"{ url : String.String, status : { code : Basics.Int, message : String.String }, headers : Dict.Dict String.String String.String, body : body }"}},"unions":{"Msg.Msg":{"args":[],"tags":{"UrlChange":["Url.Url"],"Navigate":["Browser.UrlRequest"],"ToastersMsg":["Toasters.Msg"],"ToggleAdminMenu":[],"IndexMsg":["Index.Msg.Msg"],"AdminMsg":["Admin.Msg.Msg"],"TrainerMsg":["Trainer.Msg.Msg"]}},"Basics.Int":{"args":[],"tags":{"Int":[]}},"Maybe.Maybe":{"args":["a"],"tags":{"Just":["a"],"Nothing":[]}},"Admin.Msg.Msg":{"args":[],"tags":{"NoOp":[]}},"Index.Msg.Msg":{"args":[],"tags":{"AddGreenToaster":[],"AddRedToaster":[],"InputMsg":["Form.Input.Msg"],"IntInputMsg":["Form.IntInput.Msg"],"FloatInputMsg":["Form.FloatInput.Msg"],"SelectMsg":["Form.Select.Msg Records.MusicGenre.MusicGenre"],"MultiSelectMsg":["Form.MultiSelect.Msg Records.MusicGenre.MusicGenre"],"SearchSelectMsg":["Form.SearchSelect.Msg Records.Country.Country"],"DatePickerMsg":["Form.DatePicker.Msg"],"DatePicker2Msg":["Form.DatePicker.Msg"],"DatePicker3Msg":["Form.DatePicker.Msg"],"TextAreaMsg":["Form.TextArea.Msg"],"TextAreaWrapMsg":["Form.TextArea.Msg"],"ToolTip1Msg":["ToolTip.Msg"],"ToolTip2Msg":["ToolTip.Msg"],"ToolTip3Msg":["ToolTip.Msg"],"ToolTip4Msg":["ToolTip.Msg"],"UpdateName":["Form.Input.Msg"],"UpdateStartDate":["Form.DatePicker.Msg"],"UpdateEmail":["Form.Input.Msg"],"UpdatePreferredGenre":["Form.Select.Msg Records.MusicGenre.MusicGenre"],"UpdateCountryOfBirth":["Form.SearchSelect.Msg Records.Country.Country"],"Toggle1":[],"Toggle2":[],"DisabledToggle":[],"ToggleSmModal":[],"ToggleLgModal":[],"ToggleResizeModal":[],"UpdateMaybeBLockSelect":["Form.Select.Msg Records.MusicGenre.MusicGenre"],"SetGridButtonGreen":["Basics.Bool"]}},"Toasters.Msg":{"args":[],"tags":{"InternalMsg":["Toasters.Internal.Msg"]}},"Trainer.Msg.Msg":{"args":[],"tags":{"NoOp":[]}},"Url.Protocol":{"args":[],"tags":{"Http":[],"Https":[]}},"String.String":{"args":[],"tags":{"String":[]}},"Browser.UrlRequest":{"args":[],"tags":{"Internal":["Url.Url"],"External":["String.String"]}},"Basics.Bool":{"args":[],"tags":{"True":[],"False":[]}},"List.List":{"args":["a"],"tags":{}},"Form.DatePicker.Internal.Msg":{"args":[],"tags":{"Open":["Form.DatePicker.Internal.MinPosix","Form.DatePicker.Internal.MaxPosix","Form.DatePicker.Internal.IncludeTime"],"Blur":[],"InitWithCurrentDate":["Form.DatePicker.Internal.MinPosix","Form.DatePicker.Internal.MaxPosix","Time.Posix"],"PreviousYear":["Form.DatePicker.Internal.MinPosix"],"PreviousMonth":[],"NextYear":["Form.DatePicker.Internal.MaxPosix"],"NextMonth":[],"SelectDay":["Time.Posix","Form.DatePicker.Internal.IncludeTime"],"OpenTimeSelect":["Form.DatePicker.Internal.TimeSelect"],"UpdateHours":["Form.Select.Msg Basics.Int"],"UpdateMinutes":["Form.Select.Msg Basics.Int"],"UpdateSeconds":["Form.Select.Msg Basics.Int"],"Apply":[],"Clear":[],"DomFocus":["Result.Result Browser.Dom.Error ()"],"NoOp":[]}},"Form.FloatInput.Internal.Msg":{"args":[],"tags":{"Input":["String.String"]}},"Form.Input.Internal.Msg":{"args":[],"tags":{"Input":["String.String"]}},"Form.IntInput.Internal.Msg":{"args":[],"tags":{"Input":["String.String"]}},"Form.MultiSelect.Internal.Msg":{"args":["option"],"tags":{"Open":[],"Blur":[],"UpdateSearchText":["String.String"],"Select":["option"],"Clear":[],"SelectKey":["option -> Basics.Bool","Form.Helpers.SelectKey"],"NoOp":[]}},"Form.SearchSelect.Internal.Msg":{"args":["option"],"tags":{"Open":[],"Blur":[],"UpdateSearchInput":["Basics.Int","String.String"],"Response":["Result.Result Http.Error (List.List option)"],"Select":["option"],"Clear":[],"SelectKey":["Form.Helpers.SelectKey"]}},"Form.Select.Internal.Msg":{"args":["option"],"tags":{"Open":[],"Blur":[],"UpdateSearchText":["String.String"],"Select":["option"],"Clear":[],"SelectKey":["option -> Basics.Bool","option -> String.String","Form.Helpers.SelectKey"],"NoOp":[]}},"Form.TextArea.Internal.Msg":{"args":[],"tags":{"Input":["String.String"]}},"Toasters.Internal.Msg":{"args":[],"tags":{"Tick":[],"Close":["Toasters.Internal.Toaster"]}},"ToolTip.Msg":{"args":[],"tags":{"MouseEnter":[],"MouseLeave":[]}},"Records.MusicGenre.MusicGenre":{"args":[],"tags":{"Rock":[],"Metal":[],"Blues":[],"Jazz":[],"Pop":[],"BlackenedHeavyProgressiveAlternativeNewAgeRockabillyGlamCoreRetroFolkNeoSoulAcidFunkDooWopElectricalDreamPop":[]}},"Toasters.Color.Color":{"args":[],"tags":{"Green":[],"Red":[]}},"Browser.Dom.Error":{"args":[],"tags":{"NotFound":["String.String"]}},"Http.Error":{"args":[],"tags":{"BadUrl":["String.String"],"Timeout":[],"NetworkError":[],"BadStatus":["Http.Response String.String"],"BadPayload":["String.String","Http.Response String.String"]}},"Time.Posix":{"args":[],"tags":{"Posix":["Basics.Int"]}},"Result.Result":{"args":["error","value"],"tags":{"Ok":["value"],"Err":["error"]}},"Form.Helpers.SelectKey":{"args":[],"tags":{"Up":[],"Down":[],"Enter":[],"Space":[],"Backspace":[],"AlphaNum":["String.String"]}},"Form.DatePicker.Internal.TimeSelect":{"args":[],"tags":{"Hours":[],"Minutes":[],"Seconds":[]}},"Dict.Dict":{"args":["k","v"],"tags":{"RBNode_elm_builtin":["Dict.NColor","k","v","Dict.Dict k v","Dict.Dict k v"],"RBEmpty_elm_builtin":[]}},"Dict.NColor":{"args":[],"tags":{"Red":[],"Black":[]}}}}})}});}(this));